define.alias("@glimmer/component/-private/ember-component-manager","msg-overlay/component-managers/glimmer")
define("msg-overlay/components/abi-flow",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
const t=Ember.HTMLBars.template({id:"/jY30k99",block:'{"symbols":["@isAbiComplete"],"statements":[[0,"\\n"],[7,"div",false],[12,"class","msg-overlay-abi text-align-center ph6"],[3,"ember-cli-pemberly-tracking@track-render",null,[["pageKey","routeName","currentRoute"],[[28,"if",[[23,1,[]],"flagship3_messaging_overlay_abi_completed.page","flagship3_messaging_overlay_abi.page"],null],[28,"get",[[28,"-get-dynamic-var",["outletState"],null],"render.name"],null],[28,"get",[[28,"-get-dynamic-var",["outletState"],null],"render"],null]]]],[8],[0,"\\n  "],[7,"div",true],[10,"class","msg-overlay-list-bubble__illustration msg-overlay-abi__illustration"],[8],[9],[0,"\\n"],[4,"if",[[23,1,[]]],null,{"statements":[[0,"    "],[7,"p",true],[10,"class","t-14 t-black--light t-normal"],[8],[0,"\\n      "],[1,[28,"t",["i18n_start_conversations","msg-overlay/components/abi-flow"],null],false],[0,"\\n    "],[9],[0,"\\n    "],[5,"ember-engines@link-to-external",[[3,"ember-cli-pemberly-tracking@track-interaction",["overlay.find_connections"]]],[["@route","@class"],["mynetwork","msg-overlay-abi__cta artdeco-button mt4"]],{"statements":[[0,"\\n      "],[1,[28,"t",["i18n_find_connections","msg-overlay/components/abi-flow"],null],false],[0,"\\n    "]],"parameters":[]}],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[7,"h4",true],[10,"class","t-16 t-black t-bold"],[8],[0,"\\n      "],[1,[28,"t",["i18n_keep_in_touch","msg-overlay/components/abi-flow"],null],false],[0,"\\n    "],[9],[0,"\\n    "],[7,"p",true],[10,"class","t-14 t-black--light t-normal mt3 mb3"],[8],[0,"\\n      "],[1,[28,"t",["i18n_find_people","msg-overlay/components/abi-flow"],null],false],[0,"\\n    "],[9],[0,"\\n    "],[5,"ember-engines@link-to-external",[[3,"ember-cli-pemberly-tracking@track-interaction",["overlay.abi"]]],[["@route","@class"],["mynetwork.abi","msg-overlay-abi__find-new-connections t-14"]],{"statements":[[0,"\\n      "],[1,[28,"t",["i18n_find_new_connections","msg-overlay/components/abi-flow"],null],false],[0,"\\n    "]],"parameters":[]}],[0,"\\n"]],"parameters":[]}],[9]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/abi-flow.hbs"}})
var n=Ember._setComponentTemplate(t,Ember._templateOnlyComponent())
e.default=n})
define("msg-overlay/components/active-status-onboarding",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","@glimmer/component","global-utils/utils/get-csrf-token"],function(e,t,n,s,a,o,i){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var r,l,c,m,d,u,p,b,g,h,y,v,f,_,E,C,w,M,O
const S=Ember.HTMLBars.template({id:"+NDeUhnl",block:'{"symbols":[],"statements":[[4,"if",[[23,0,["showActiveStatusOnboarding"]]],null,{"statements":[[0,"  "],[7,"div",false],[12,"class","msg-overlay-active-status-onboarding"],[3,"on",["click",[23,0,["stopPropagation"]]]],[8],[0,"\\n    "],[7,"p",true],[10,"class","t-14"],[8],[0,"\\n      "],[1,[28,"t",["i18n_active_status","msg-overlay/components/active-status-onboarding"],null],false],[0,"\\n      "],[7,"a",true],[10,"href","/help/linkedin/answer/84123"],[10,"target","_blank"],[10,"rel","noopener noreferrer"],[10,"class","t-black link-without-visited-state"],[8],[0,"\\n        "],[1,[28,"t",["i18n_learn_more","msg-overlay/components/active-status-onboarding"],null],false],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n    "],[7,"div",true],[10,"class","display-flex justify-flex-end mt2"],[8],[0,"\\n      "],[5,"artdeco-button@artdeco-button",[[12,"aria-label",[28,"t",["a11y_manage_active_status","msg-overlay/components/active-status-onboarding"],null]],[3,"on",["click",[23,0,["manageActiveStatus"]]]],[3,"ember-cli-pemberly-tracking@track-interaction",["active_status_onboarding_manage"]]],[["@class","@size","@type","@color"],["mr2","1","tertiary","muted"]],{"statements":[[0,"\\n        "],[1,[28,"t",["i18n_manage","msg-overlay/components/active-status-onboarding"],null],false],[0,"\\n      "]],"parameters":[]}],[0,"\\n      "],[5,"artdeco-button@artdeco-button",[[12,"aria-label",[28,"t",["a11y_enable_active_status","msg-overlay/components/active-status-onboarding"],null]],[3,"on",["click",[23,0,["enableActiveStatus"]]]],[3,"ember-cli-pemberly-tracking@track-interaction",["active_status_onboarding_enable"]]],[["@size"],["1"]],{"statements":[[0,"\\n        "],[1,[28,"t",["i18n_got_it","msg-overlay/components/active-status-onboarding"],null],false],[0,"\\n      "]],"parameters":[]}],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/active-status-onboarding.hbs"}})
let k=(r=Ember.inject.service("global-services@a11y-notification"),l=Ember.inject.service("i18n"),c=Ember.inject.service("lego@resolver"),m=Ember.inject.service("lego@tracking"),d=Ember.inject.service("store"),u=Ember.inject.service("tracking"),p=Ember.inject.service("global-services@window"),b=Ember._tracked,g=Ember._action,h=Ember._action,y=class extends o.default{constructor(){super(...arguments);(0,t.default)(this,"a11yNotification",v,this);(0,t.default)(this,"i18n",f,this);(0,t.default)(this,"legoResolver",_,this);(0,t.default)(this,"legoTracking",E,this);(0,t.default)(this,"store",C,this);(0,t.default)(this,"tracking",w,this);(0,t.default)(this,"windowService",M,this);(0,t.default)(this,"showActiveStatusOnboarding",O,this);(0,n.default)(this,"_legoWidgetTrackingToken",void 0)
this._fetchLegoWidget().then(()=>this._fetchActiveStatusSetting()).then(e=>{this.isDestroying||("HIDDEN"===e?this._showActiveStatusOnboarding():this._dismissLegoWidget())})}stopPropagation(e){e.stopPropagation()}_showActiveStatusOnboarding(){this.showActiveStatusOnboarding=!0
this.tracking.firePageViewEvent("flagship3_messaging_active_status_onboarding")
const e=this.i18n.lookupTranslation("component","msg-overlay@active-status-onboarding","i18n_active_status")()
this.a11yNotification.setTextInLiveRegion(e)}_completeActiveStatusOnboarding(){this.showActiveStatusOnboarding=!1
return this._enableActiveStatusSetting().then(()=>this._dismissLegoWidget())}_fetchLegoWidget(){return this.legoResolver.fireLegoCall({pageKey:"messaging_presence",slotId:"onboarding",groupId:"onboarding_group",widgetId:"presence_onboarding"}).then(e=>{if(!e)return Ember.RSVP.reject()
if(!this.isDestroying){this._legoWidgetTrackingToken=Ember.get(e,"trackingToken")
return e}})}_dismissLegoWidget(){this.legoTracking.sendLegoAction(this._legoWidgetTrackingToken,this.legoTracking.LEGO_ACTION_DISMISS,1)}_fetchActiveStatusSetting(){return this.store.adapterFor("-ember-m3").ajax("/psettings/presence","get",{data:{asJson:!0}}).then(e=>{const t=Ember.get(e,"map.data.visibility")
if(!t)throw new Error("failed to get active status setting")
return t})}_enableActiveStatusSetting(){return this.store.adapterFor("-ember-m3").ajax("/psettings/presence/update-presence-settings","post",{data:{visibility:"CONNECTIONS",csrfToken:(0,i.default)()},headers:{"x-requested-with":"XMLHttpRequest"}}).then(e=>{const t=Ember.get(e,"result.responseCode")
if(200!==t)throw new Error(`failed to set active status setting, responseCode: ${t}`)})}enableActiveStatus(){this._completeActiveStatusOnboarding()}manageActiveStatus(){this._completeActiveStatusOnboarding().then(()=>this.windowService.open("/psettings/presence","_blank"))}},v=(0,s.default)(y.prototype,"a11yNotification",[r],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),f=(0,s.default)(y.prototype,"i18n",[l],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_=(0,s.default)(y.prototype,"legoResolver",[c],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),E=(0,s.default)(y.prototype,"legoTracking",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),C=(0,s.default)(y.prototype,"store",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),w=(0,s.default)(y.prototype,"tracking",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),M=(0,s.default)(y.prototype,"windowService",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),O=(0,s.default)(y.prototype,"showActiveStatusOnboarding",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),(0,s.default)(y.prototype,"enableActiveStatus",[g],Object.getOwnPropertyDescriptor(y.prototype,"enableActiveStatus"),y.prototype),(0,s.default)(y.prototype,"manageActiveStatus",[h],Object.getOwnPropertyDescriptor(y.prototype,"manageActiveStatus"),y.prototype),y)
e.default=k
Ember._setComponentTemplate(S,k)})
define.alias("artdeco-button/components/artdeco-button","msg-overlay/components/artdeco-button")
define.alias("artdeco-datepicker/components/artdeco-calendar-internal","msg-overlay/components/artdeco-calendar-internal")
define.alias("artdeco-carousel/components/artdeco-carousel-item","msg-overlay/components/artdeco-carousel-item")
define.alias("artdeco-carousel/components/artdeco-carousel-slider","msg-overlay/components/artdeco-carousel-slider")
define.alias("artdeco-carousel/components/artdeco-carousel-title","msg-overlay/components/artdeco-carousel-title")
define.alias("artdeco-carousel/components/artdeco-carousel","msg-overlay/components/artdeco-carousel")
define.alias("artdeco-modal/components/artdeco-confirmation-dialog","msg-overlay/components/artdeco-confirmation-dialog")
define.alias("artdeco-datepicker/components/artdeco-datepicker","msg-overlay/components/artdeco-datepicker")
define.alias("artdeco-datepicker/components/artdeco-daterange","msg-overlay/components/artdeco-daterange")
define.alias("artdeco-dropdown/components/artdeco-dropdown-content","msg-overlay/components/artdeco-dropdown-content")
define.alias("artdeco-dropdown/components/artdeco-dropdown-header","msg-overlay/components/artdeco-dropdown-header")
define.alias("artdeco-dropdown/components/artdeco-dropdown-item","msg-overlay/components/artdeco-dropdown-item")
define.alias("artdeco-dropdown/components/artdeco-dropdown-trigger","msg-overlay/components/artdeco-dropdown-trigger")
define.alias("artdeco-dropdown/components/artdeco-dropdown","msg-overlay/components/artdeco-dropdown")
define.alias("artdeco-empty-state/components/artdeco-empty-state","msg-overlay/components/artdeco-empty-state")
define.alias("artdeco-entity-lockup/components/artdeco-entity-lockup-badge","msg-overlay/components/artdeco-entity-lockup-badge")
define.alias("artdeco-entity-lockup/components/artdeco-entity-lockup-caption","msg-overlay/components/artdeco-entity-lockup-caption")
define.alias("artdeco-entity-lockup/components/artdeco-entity-lockup-content","msg-overlay/components/artdeco-entity-lockup-content")
define.alias("artdeco-entity-lockup/components/artdeco-entity-lockup-image","msg-overlay/components/artdeco-entity-lockup-image")
define.alias("artdeco-entity-lockup/components/artdeco-entity-lockup-metadata","msg-overlay/components/artdeco-entity-lockup-metadata")
define.alias("artdeco-entity-lockup/components/artdeco-entity-lockup-subtitle","msg-overlay/components/artdeco-entity-lockup-subtitle")
define.alias("artdeco-entity-lockup/components/artdeco-entity-lockup-title","msg-overlay/components/artdeco-entity-lockup-title")
define.alias("artdeco-entity-lockup/components/artdeco-entity-lockup","msg-overlay/components/artdeco-entity-lockup")
define.alias("artdeco-entity-pile/components/artdeco-entity-pile","msg-overlay/components/artdeco-entity-pile")
define.alias("artdeco-hoverables/components/artdeco-hoverable-content","msg-overlay/components/artdeco-hoverable-content")
define.alias("artdeco-hoverables/components/artdeco-hoverable-trigger","msg-overlay/components/artdeco-hoverable-trigger")
define.alias("artdeco-inline-feedback/components/artdeco-inline-feedback","msg-overlay/components/artdeco-inline-feedback")
define.alias("artdeco-loader/components/artdeco-loader","msg-overlay/components/artdeco-loader")
define.alias("artdeco-modal/components/container","msg-overlay/components/artdeco-modal-container")
define.alias("artdeco-modal/components/artdeco-modal-content","msg-overlay/components/artdeco-modal-content")
define.alias("artdeco-modal/components/artdeco-modal-footer","msg-overlay/components/artdeco-modal-footer")
define.alias("artdeco-modal/components/artdeco-modal-header","msg-overlay/components/artdeco-modal-header")
define.alias("artdeco-modal/components/artdeco-modal","msg-overlay/components/artdeco-modal")
define.alias("artdeco-notification-badge/components/artdeco-notification-badge","msg-overlay/components/artdeco-notification-badge")
define.alias("artdeco-pagination/components/artdeco-pagination-ellipsis","msg-overlay/components/artdeco-pagination-ellipsis")
define.alias("artdeco-pagination/components/artdeco-pagination-indicator","msg-overlay/components/artdeco-pagination-indicator")
define.alias("artdeco-pagination/components/artdeco-pagination","msg-overlay/components/artdeco-pagination")
define.alias("artdeco-pill/components/artdeco-pill-choice-group","msg-overlay/components/artdeco-pill-choice-group")
define.alias("artdeco-pill/components/artdeco-pill-choice","msg-overlay/components/artdeco-pill-choice")
define.alias("artdeco-pill/components/artdeco-pill-dismiss","msg-overlay/components/artdeco-pill-dismiss")
define.alias("artdeco-pill/components/artdeco-pill-input","msg-overlay/components/artdeco-pill-input")
define.alias("artdeco-pill/components/artdeco-pill-link","msg-overlay/components/artdeco-pill-link")
define.alias("artdeco-pill/components/artdeco-pill-toggle","msg-overlay/components/artdeco-pill-toggle")
define.alias("ember-cli-artdeco-tabs/components/artdeco-spotlight-tab","msg-overlay/components/artdeco-spotlight-tab")
define.alias("ember-cli-artdeco-tabs/components/artdeco-spotlight-tablist","msg-overlay/components/artdeco-spotlight-tablist")
define.alias("ember-cli-artdeco-tabs/components/artdeco-tab","msg-overlay/components/artdeco-tab")
define.alias("ember-cli-artdeco-tabs/components/artdeco-tablist","msg-overlay/components/artdeco-tablist")
define.alias("ember-cli-artdeco-tabs/components/artdeco-tabpanel","msg-overlay/components/artdeco-tabpanel")
define.alias("ember-cli-artdeco-tabs/components/artdeco-tabs","msg-overlay/components/artdeco-tabs")
define.alias("artdeco-text-input/components/artdeco-text-input-multi","msg-overlay/components/artdeco-text-input-multi")
define.alias("artdeco-text-input/components/artdeco-text-input-single","msg-overlay/components/artdeco-text-input-single")
define.alias("artdeco-text-input/components/artdeco-text-input","msg-overlay/components/artdeco-text-input")
define.alias("artdeco-toast/components/artdeco-toast-item","msg-overlay/components/artdeco-toast-item")
define.alias("artdeco-toast/components/artdeco-toasts","msg-overlay/components/artdeco-toasts")
define.alias("artdeco-toggle/components/artdeco-toggle","msg-overlay/components/artdeco-toggle")
define("msg-overlay/components/base-bubble",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","infinite-scroll/components/infinite-scroll-container"],function(e,t,n,s,a,o){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var i,r,l
let c=(i=Ember.inject.service("tracking"),r=class extends o.default{constructor(){super(...arguments);(0,t.default)(this,"tracking",l,this)}init(){super.init()
Ember.set(this,"_oldForcedMinimize",this.forcedMinimize)
this.tracking.setupPageViewComponent(this)}didUpdateAttrs(){super.didUpdateAttrs(...arguments)
const{forcedMinimize:e}=this
if(this._oldForcedMinimize!==e)if(e){this.cachedMinimizedState=this.isMinimized
this._updateMinimizedState(!0)}else if(void 0!==this.cachedMinimizedState&&this.isMinimized){this._updateMinimizedState(this.cachedMinimizedState)
delete this.cachedMinimizedState}Ember.set(this,"_oldForcedMinimize",e)}_fireBubblePVE(){const e=this.bubbleMinimizeProperty
Ember.get(this,e)||this.tracking.firePageViewEvent(this.bubblePageKey)}},l=(0,s.default)(r.prototype,"tracking",[i],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r)
e.default=c})
define("msg-overlay/components/contextual-recommendation-list",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","@glimmer/component","msg-shared/utils/constants","msg-overlay/utils/recommendation-helpers"],function(e,t,n,s,a,o,i,r){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var l,c,m,d,u,p,b,g,h,y,v,f,_,E,C,w,M,O,S,k,R,T,P,D,I,x,A
const N=Ember.HTMLBars.template({id:"jmhBDtEg",block:'{"symbols":["suggestion","index","@suggestedRecipients"],"statements":[[7,"div",true],[11,"class",[29,["msg-overlay-list-bubble__contextual\\n    ",[28,"if",[[23,0,["isMinimized"]],"msg-overlay-list-bubble__contextual--minimized"],null]]]],[8],[0,"\\n  "],[7,"header",true],[10,"class","msg-overlay-list-bubble__list-header"],[8],[0,"\\n"],[4,"if",[[23,0,["isFeedContext"]]],null,{"statements":[[0,"    "],[5,"ember-line-clamp@line-clamp",[],[["@text","@lines","@tagName","@classNames","@interactive"],[[28,"t",["i18n_connection_to_context_article","msg-overlay/components/contextual-recommendation-list"],[["count"],[[23,3,["length"]]]]],2,"h5","msg-overlay-list-bubble__list-header-title msg-overlay-list-bubble__list-header-title-suggestions msg-overlay-list-bubble__list-header-title-suggestions--feed-update t-12 t-black--light t-bold",false]]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[7,"h5",true],[10,"class","msg-overlay-list-bubble__list-header-title msg-overlay-list-bubble__list-header-title-suggestions t-12 t-black--light t-bold truncate"],[8],[0,"\\n      "],[1,[28,"if",[[23,0,["isProfileContext"]],[28,"t",["i18n_connection_to_context_actor_member","msg-overlay/components/contextual-recommendation-list"],[["count","memberName"],[[23,3,["length"]],[28,"global-helpers@name",[[23,0,["contextActor"]]],null]]]],[28,"t",["i18n_connection_to_context_actor_company","msg-overlay/components/contextual-recommendation-list"],[["count","companyName"],[[23,3,["length"]],[23,0,["contextActor"]]]]]],null],false],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]}],[0,"  "],[9],[0,"\\n  "],[7,"span",true],[10,"class","visually-hidden"],[8],[0,"\\n    "],[1,[28,"t",["i18n_a11y_infinite_scroll","msg-overlay/components/contextual-recommendation-list"],null],false],[0,"\\n  "],[9],[0,"\\n  "],[7,"ul",true],[10,"class","msg-conversations-container__conversations-list msg-overlay-list-bubble__conversations-list"],[8],[0,"\\n"],[4,"each",[[23,0,["slicedSuggestedRecipients"]]],null,{"statements":[[0,"    "],[5,"msg-overlay@recommendation-card",[],[["@suggestion","@actor","@messageRecommendation","@isFeedContext","@interactionTrackingHandler","@impressionTrackingHandler","@overlaySidebarEnabled"],[[23,1,[]],[23,0,["contextActor"]],[28,"fn",[[23,0,["messageRecommendation"]],[23,1,[]]],null],[23,0,["isFeedContext"]],[28,"fn",[[23,0,["contextualRecommandationCardInteractionTracking"]],[23,1,[]],"EXPAND"],null],[28,"fn",[[23,0,["contextualRecommandationCardImpressionTracking"]],[23,1,[]],[23,2,[]]],null],[23,0,["overlaySidebarEnabled"]]]]],[0,"\\n"]],"parameters":[1,2]},null],[0,"  "],[9],[0,"\\n"],[4,"if",[[23,0,["hasMoreSuggestedRecipients"]]],null,{"statements":[[0,"  "],[7,"button",false],[12,"class","full-width pv2 t-12 t-black--light t-bold"],[12,"type","button"],[3,"on",["click",[23,0,["toggleRemainingSuggestedRecipients"]]]],[8],[0,"\\n    "],[7,"span",true],[10,"class","msg-overlay-list-bubble__view-more-suggestions display-flex justify-center full-width"],[8],[0,"\\n      "],[1,[28,"if",[[23,0,["showRemainingSuggestions"]],[28,"t",["close","msg-overlay/components/contextual-recommendation-list"],null],[28,"t",["view_all","msg-overlay/components/contextual-recommendation-list"],null]],null],false],[0,"\\n      "],[1,[28,"artdeco-icons-web@li-icon",null,[["type","size","class"],[[28,"if",[[23,0,["showRemainingSuggestions"]],"chevron-up-icon","chevron-down-icon"],null],"small","ml1"]]],false],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"]],"parameters":[]},null],[9]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/contextual-recommendation-list.hbs"}}),{OVERLAY:{CONTEXT_TYPES:{FEED_CONTEXT:L,JOB_CONTEXT:B,COMPANY_CONTEXT:z,PROFILE_CONTEXT:j}}}=i.default
let F=(l=Ember.inject.service("tracking"),c=Ember.inject.service("msg-overlay-manager@msg-overlay-manager"),m=Ember.inject.service("lix"),d=Ember.computed.alias("msgOverlayService.contextType").readOnly(),u=Ember.computed.alias("msgOverlayService.contextActor").readOnly(),p=Ember.computed.alias("msgOverlayService.contextEntityUrn").readOnly(),b=Ember.computed.equal("contextType",L).readOnly(),g=Ember.computed.equal("contextType",B).readOnly(),h=Ember.computed.equal("contextType",z).readOnly(),y=Ember.computed.equal("contextType",j).readOnly(),v=Ember.computed("args.suggestedRecipients.[]","showRemainingSuggestions").readOnly(),f=Ember.computed("args.suggestedRecipients.length").readOnly(),_=Ember._action,E=Ember._action,C=Ember._action,w=Ember._action,M=class extends o.default{get slicedSuggestedRecipients(){const e=Ember.get(this.args,"suggestedRecipients")||[]
return this.showRemainingSuggestions?e:e.slice(0,2)}get hasMoreSuggestedRecipients(){return Ember.get(this,"args.suggestedRecipients.length")>2}constructor(){super(...arguments);(0,t.default)(this,"tracking",O,this);(0,t.default)(this,"msgOverlayService",S,this);(0,t.default)(this,"lix",k,this);(0,n.default)(this,"showRemainingSuggestions",!1);(0,t.default)(this,"contextType",R,this);(0,t.default)(this,"contextActor",T,this);(0,t.default)(this,"contextEntityUrn",P,this);(0,t.default)(this,"isFeedContext",D,this);(0,t.default)(this,"isJobContext",I,this);(0,t.default)(this,"isCompanyContext",x,this);(0,t.default)(this,"isProfileContext",A,this)
const e=this.lix.getTreatment("voyager.web.messaging-overlay-sidebar")
this.overlaySidebarEnabled="basic"===e||"spacious"===e}toggleRemainingSuggestedRecipients(){Ember.set(this,"showRemainingSuggestions",!this.showRemainingSuggestions)}messageRecommendation(e){this.args.openNewConversation({recipients:Ember.get(e,"recipientProfile"),messageActions:{afterSendTracking:()=>this.contextualRecommandationCardInteractionTracking(e,"MESSAGE",{controlUrn:this.tracking.generateControlUrn("overlay.message_recommendation")})}})}contextualRecommandationCardInteractionTracking(e,t,n){let{controlUrn:s}=n,a={}
this.isDestroyed||(a={name:"MessagingRecommendationActionEvent",body:{actionCategory:t,controlUrn:s,recommendationTrackingId:Ember.get(e,"trackingId"),showRemainingSuggestions:this.showRemainingSuggestions,usecase:(0,r.normalizeUsecase)(this.contextType,this.showRemainingSuggestions)}})
return a}contextualRecommandationCardImpressionTracking(e,t,n){let{duration:s,visibleTime:a}=n
return{name:"MessagingRecommendationImpressionEvent",body:{recommendedEntity:{recommendedEntityUrn:Ember.get(e,"miniProfile.objectUrn"),recommendationTrackingId:Ember.get(e,"trackingId"),referenceEntityTrackingObject:{objectUrn:this.contextEntityUrn,trackingId:Ember.get(e,"trackingId")},listPosition:{index:t},usecase:(0,r.normalizeUsecase)(this.contextType,this.showRemainingSuggestions),visibleTime:a,duration:s}}}}},O=(0,s.default)(M.prototype,"tracking",[l],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),S=(0,s.default)(M.prototype,"msgOverlayService",[c],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),k=(0,s.default)(M.prototype,"lix",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),R=(0,s.default)(M.prototype,"contextType",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),T=(0,s.default)(M.prototype,"contextActor",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),P=(0,s.default)(M.prototype,"contextEntityUrn",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),D=(0,s.default)(M.prototype,"isFeedContext",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),I=(0,s.default)(M.prototype,"isJobContext",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),x=(0,s.default)(M.prototype,"isCompanyContext",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),A=(0,s.default)(M.prototype,"isProfileContext",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(M.prototype,"slicedSuggestedRecipients",[v],Object.getOwnPropertyDescriptor(M.prototype,"slicedSuggestedRecipients"),M.prototype),(0,s.default)(M.prototype,"hasMoreSuggestedRecipients",[f],Object.getOwnPropertyDescriptor(M.prototype,"hasMoreSuggestedRecipients"),M.prototype),(0,s.default)(M.prototype,"toggleRemainingSuggestedRecipients",[_],Object.getOwnPropertyDescriptor(M.prototype,"toggleRemainingSuggestedRecipients"),M.prototype),(0,s.default)(M.prototype,"messageRecommendation",[E],Object.getOwnPropertyDescriptor(M.prototype,"messageRecommendation"),M.prototype),(0,s.default)(M.prototype,"contextualRecommandationCardInteractionTracking",[C],Object.getOwnPropertyDescriptor(M.prototype,"contextualRecommandationCardInteractionTracking"),M.prototype),(0,s.default)(M.prototype,"contextualRecommandationCardImpressionTracking",[w],Object.getOwnPropertyDescriptor(M.prototype,"contextualRecommandationCardImpressionTracking"),M.prototype),M)
e.default=F
Ember._setComponentTemplate(N,F)})
define("msg-overlay/components/conversation-bubble-compose",["exports","@babel/runtime/helpers/esm/defineProperty","@glimmer/component","msg-shared/utils/constants"],function(e,t,n,s){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
const a=Ember.HTMLBars.template({id:"oTtGzv+m",block:'{"symbols":["@bubbleId","@composeToNonConnection","@setComposeContext","@composeViewContext","@bubble","@didSubmitMessage","@draftConversation","@dragAndDropTrackingKeys","@handleSuccessfulDiscardRequest","@hasPrefilledConversationName","@isInMail","@isOriginalSize","@messageBarText","@messageContext","@messagingSettings","@onCreateDraftGroupConversation","@onRecipientsChange","@openConversation","@showRenameConversationForm","@toggleShowRenameConversation","@width","@setFocusToRenameConversationForm","@shouldShowExpandedTypeahead"],"statements":[[5,"msg-ui@compose",[],[["@actionTrackingPrefix","@addParticipantsPageKey","@bubbleId","@composeModuleKey","@composeToNonConnection","@setComposeContext","@composeViewContext","@composeIsFullyExpanded","@conversation","@conversationDetailModuleKey","@customTrackingObject","@customPlaceholderText","@didSubmitMessage","@draftConversation","@dragAndDropTrackingKeys","@fetchedEventsProxy","@fileUploadControlName","@firstMessageTrackingReferrer","@forwardedEvent","@handleSuccessfulDiscardRequest","@hasDraft","@hasPrefilledConversationName","@imagePasteControlName","@imageUploadControlName","@invitationUrn","@isInMailCompose","@isInMail","@isNew","@isOpenedFromMsgButton","@isOriginalSize","@isOverlay","@messageBarText","@messageContext","@messageActions","@messageRecipients","@messagingSettings","@msgAdapterOptions","@muteConversationControlName","@mutePageKey","@nextButtonDataControlName","@onCreateDraftGroupConversation","@onRecipientsChange","@openConversation","@prefilledAttachments","@prefilledMessage","@quickRepliesUseCase","@recruiterInmailBinaryReplyUiPageKey","@renamePageKey","@sendMessageControlName","@showGroupEditScreen","@showRenameConversationForm","@subject","@toggleShowRenameConversation","@update","@width","@recipientSuggestionEnabled","@setFocusToRenameConversationForm","@showPremiumUpsell","@isJumboBubble","@shouldShowExpandedTypeahead"],[[23,0,["CONTROL_NAMES","OVERLAY_PREFIX"]],"flagship3_messaging_overlay_manage_participants_modal.page",[23,1,[]],[23,0,["MODULE_KEYS","OVERLAY_COMPOSE"]],[23,2,[]],[23,3,[]],[23,4,[]],[23,5,["composeIsFullyExpanded"]],[23,5,["conversation"]],[23,0,["MODULE_KEYS","OVERLAY_CONVERSATION_DETAIL"]],[23,5,["trackingObject"]],[23,5,["placeholderText"]],[23,6,[]],[23,7,[]],[23,8,[]],[23,5,["fetchedEventsProxy"]],[23,0,["CONTROL_NAMES","OVERLAY","FILE_UPLOAD"]],[23,5,["firstMessageTrackingReferrer"]],[23,5,["forwardedEvent"]],[23,9,[]],[23,5,["hasDraft"]],[23,10,[]],[23,0,["CONTROL_NAMES","OVERLAY","IMAGE_PASTE"]],[23,0,["CONTROL_NAMES","OVERLAY","IMAGE_UPLOAD"]],[23,5,["invitationUrn"]],[23,5,["isInMailCompose"]],[23,11,[]],[23,5,["isNew"]],[23,5,["isOpenedFromMsgButton"]],[23,12,[]],true,[23,13,[]],[23,14,[]],[23,5,["messageActions"]],[23,5,["messageRecipients"]],[23,15,[]],[23,5,["msgAdapterOptions"]],[23,0,["CONTROL_NAMES","OVERLAY","MUTE"]],"flagship3_messaging_overlay_conversation_window_muted.page",[23,0,["CONTROL_NAMES","OVERLAY","COMPOSE_GROUP_NEXT"]],[23,16,[]],[23,17,[]],[23,18,[]],[23,5,["attachments"]],[23,5,["message"]],"QUICK_REPLY_OVERLAY","flagship3_messaging_overlay_recruiter_inmail_yes-no-reply-ui","flagship3_messaging_overlay_conversation_window_rename.page",[23,0,["CONTROL_NAMES","OVERLAY","SEND"]],[23,5,["showGroupEditScreen"]],[23,19,[]],[23,5,["subject"]],[23,20,[]],[23,5,["update"]],[23,21,[]],true,[23,22,[]],[23,5,["showPremiumUpsell"]],[23,5,["isJumbo"]],[23,23,[]]]]]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/conversation-bubble-compose.hbs"}}),{CONTROL_NAMES:o,MODULE_KEYS:i}=s.default
class r extends n.default{constructor(){super(...arguments);(0,t.default)(this,"CONTROL_NAMES",o);(0,t.default)(this,"MODULE_KEYS",i)}}e.default=r
Ember._setComponentTemplate(a,r)})
define("msg-overlay/components/conversation-bubble-thread",["exports","@babel/runtime/helpers/esm/defineProperty","@glimmer/component","msg-shared/utils/constants"],function(e,t,n,s){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
const a=Ember.HTMLBars.template({id:"ypvu+piF",block:'{"symbols":["@bubbleId","@composeViewContext","@bubble","@didSubmitMessage","@draftConversation","@dragAndDropTrackingKeys","@handleSuccessfulDiscardRequest","@hasPrefilledConversationName","@isInMail","@isOriginalSize","@messageContext","@messagingSettings","@showRenameConversationForm","@toggleShowRenameConversation","@width","@setFocusToRenameConversationForm","@perfMeasurement"],"statements":[[5,"msg-ui@thread",[],[["@actionTrackingPrefix","@addParticipantsPageKey","@bubbleId","@composeModuleKey","@composeViewContext","@conversation","@conversationDetailModuleKey","@customTrackingObject","@customPlaceholderText","@didSubmitMessage","@draftConversation","@dragAndDropTrackingKeys","@fetchedEventsProxy","@fileUploadControlName","@firstMessageTrackingReferrer","@forwardedEvent","@handleSuccessfulDiscardRequest","@hasDraft","@hasPrefilledConversationName","@imagePasteControlName","@imageUploadControlName","@invitationUrn","@isInMailCompose","@isInMail","@isNew","@isOpenedFromMsgButton","@isOriginalSize","@isOverlay","@messageContext","@messageActions","@messageRecipients","@messagingSettings","@msgAdapterOptions","@muteConversationControlName","@mutePageKey","@prefilledAttachments","@prefilledMessage","@quickRepliesUseCase","@recipientOpenToFreeMessages","@recruiterInmailBinaryReplyUiPageKey","@renamePageKey","@sendMessageControlName","@showRenameConversationForm","@subject","@toggleShowRenameConversation","@update","@width","@setFocusToRenameConversationForm","@inmailReplyDeepLink","@perfMeasurement"],[[23,0,["CONTROL_NAMES","OVERLAY_PREFIX"]],"flagship3_messaging_overlay_manage_participants_modal.page",[23,1,[]],[23,0,["MODULE_KEYS","OVERLAY_COMPOSE"]],[23,2,[]],[23,3,["conversation"]],[23,0,["MODULE_KEYS","OVERLAY_CONVERSATION_DETAIL"]],[23,3,["trackingObject"]],[23,3,["placeholderText"]],[23,4,[]],[23,5,[]],[23,6,[]],[23,3,["fetchedEventsProxy"]],[23,0,["CONTROL_NAMES","OVERLAY","FILE_UPLOAD"]],[23,3,["firstMessageTrackingReferrer"]],[23,3,["forwardedEvent"]],[23,7,[]],[23,3,["hasDraft"]],[23,8,[]],[23,0,["CONTROL_NAMES","OVERLAY","IMAGE_PASTE"]],[23,0,["CONTROL_NAMES","OVERLAY","IMAGE_UPLOAD"]],[23,3,["invitationUrn"]],[23,3,["isInMailCompose"]],[23,9,[]],[23,3,["isNew"]],[23,3,["isOpenedFromMsgButton"]],[23,10,[]],true,[23,11,[]],[23,3,["messageActions"]],[23,3,["messageRecipients"]],[23,12,[]],[23,3,["msgAdapterOptions"]],[23,0,["CONTROL_NAMES","OVERLAY","MUTE"]],"flagship3_messaging_overlay_conversation_window_muted.page",[23,3,["attachments"]],[23,3,["message"]],"QUICK_REPLY_OVERLAY",[23,3,["msgAdapterOptions","recipientOpenToFreeMessages"]],"flagship3_messaging_overlay_recruiter_inmail_yes-no-reply-ui","flagship3_messaging_overlay_conversation_window_rename.page",[23,0,["CONTROL_NAMES","OVERLAY","SEND"]],[23,13,[]],[23,3,["subject"]],[23,14,[]],[23,3,["update"]],[23,15,[]],[23,16,[]],[23,3,["inmailReplyDeepLink"]],[23,17,[]]]]]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/conversation-bubble-thread.hbs"}}),{CONTROL_NAMES:o,MODULE_KEYS:i}=s.default
class r extends n.default{constructor(){super(...arguments);(0,t.default)(this,"CONTROL_NAMES",o);(0,t.default)(this,"MODULE_KEYS",i)}}e.default=r
Ember._setComponentTemplate(a,r)})
define("msg-overlay/components/conversation-bubble",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/classPrivateFieldSet","@babel/runtime/helpers/esm/classPrivateFieldGet","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","ember-batcher","global-utils/utils/is-browser","msg-overlay/components/base-bubble","msg-shared/utils/custom-tracking","ember-cli-pemberly-tracking/utils/tracking","msg-shared/utils/constants","urn-utils","msg-data/utils/spinmail/sponsored-conversation-properties","msg-data/utils/msg-reactions-helper","global-helpers/helpers/name","msg-shared/utils/document-is-hidden"],function(e,t,n,s,a,o,i,r,l,c,m,d,u,p,b,g,h,y){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var v,f,_,E,C,w,M,O,S,k,R,T,P,D,I,x,A,N,L,B,z,j,F,q,U,H,V,K,Y,G,W,J,X,Q,$,Z,ee,te,ne,se,ae,oe,ie,re,le,ce,me,de,ue,pe,be,ge,he,ye,ve
const fe=Ember.HTMLBars.template({id:"87zrFIth",block:'{"symbols":["assetLoader","assetLoader","assetLoader","dropdown","@bubble","@closeBubble"],"statements":[[7,"div",false],[12,"id",[29,[[23,5,["id"]]]]],[12,"tabindex","-1"],[12,"class",[29,["msg-overlay-conversation-bubble msg-overlay-conversation-bubble--default-inactive ml4\\n  ",[28,"if",[[23,5,["isNew"]],"msg-overlay-conversation-bubble--is-compose"],null],"\\n  ",[28,"if",[[23,5,["isActive"]],"msg-overlay-conversation-bubble--is-active"],null],"\\n  ",[28,"if",[[23,5,["isMinimized"]],"msg-overlay-conversation-bubble--is-minimized"],null],"\\n  ",[28,"if",[[23,5,["isJumbo"]],"msg-overlay-conversation-bubble--jumbo","msg-overlay-conversation-bubble--petite"],null]]]],[3,"on",["keyup",[23,0,["handlekeyUp"]]]],[3,"did-insert",[[23,0,["handleDidInsert"]]]],[3,"ember-cli-pemberly-tracking@track-impression",[[23,0,["onImpression"]]],[["routeName","currentRoute"],[[28,"get",[[28,"-get-dynamic-var",["outletState"],null],"render.name"],null],[28,"get",[[28,"-get-dynamic-var",["outletState"],null],"render"],null]]]],[3,"msg-shared@block-scrolling"],[8],[0,"\\n"],[0,"  "],[7,"header",false],[12,"tabindex","-1"],[12,"aria-label",[28,"if",[[23,0,["bubble","isMinimized"]],[28,"t",["i18n_a11y_show_bubble","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]],[28,"t",["i18n_a11y_hide_bubble","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]]],null]],[12,"class",[28,"concat",["msg-overlay-bubble-header msg-overlay-conversation-bubble--header flex-shrink-zero",[28,"if",[[23,0,["hasBadge"]]," msg-overlay-bubble-header--inverse msg-overlay-bubble-header--is-badged"],null],[28,"if",[[23,0,["bubble","isInMailCompose"]]," msg-overlay-bubble-header--premium-accent-bar premium-accent-bar"],null]],null]],[12,"data-control-name",[28,"if",[[23,0,["bubble","isMinimized"]],"overlay.maximize_conversation_window_bar","overlay.minimize_conversation_window_bar"],null]],[3,"action",[[23,0,[]],"toggleMinimize",[28,"ember-cli-pemberly-tracking@tracking",null,[["control-name"],[[28,"if",[[23,0,["bubble","isMinimized"]],"overlay.maximize_conversation_window_bar","overlay.minimize_conversation_window_bar"],null]]]]]],[8],[0,"\\n"],[4,"unless",[[23,0,["bubble","isNew"]]],null,{"statements":[[4,"if",[[23,0,["bubble","conversation","hasPresence"]]],null,{"statements":[[0,"        "],[5,"presence@entity-with-presence",[],[["@miniProfile","@size"],[[23,0,["bubble","conversation","participants","firstObject","miniProfile"]],1]]],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","conversation","latestParticipants"]]],null,{"statements":[[4,"if",[[28,"global-helpers@and",[[23,0,["enableGroupChatIdentity"]],[23,0,["bubble","conversation","isManyToManyConvo"]]],null]],null,{"statements":[[0,"          "],[5,"msg-facepile-grid@conversation-facepile-grid",[],[["@conversation","@entitySize","@iconSize"],[[23,0,["bubble","conversation"]],1,"small"]]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"          "],[5,"msg-facepile-grid@facepile-grid",[[12,"class","msg-selectable-entity__entity"]],[["@participants","@entitySize","@iconSize"],[[23,0,["bubble","conversation","latestParticipants"]],1,"small"]]],[0,"\\n"]],"parameters":[]}],[0,"      "]],"parameters":[]},null]],"parameters":[]}]],"parameters":[]},null],[0,"    "],[7,"section",true],[11,"class",[29,["msg-overlay-bubble-header__details pv1\\n        ",[28,"if",[[23,0,["bubble","isMinimized"]],"align-items-center flex-row-reverse","flex-column"],null]]]],[8],[0,"\\n      "],[7,"div",true],[10,"class","display-flex flex-column justify-center overflow-hidden pl2"],[8],[0,"\\n        "],[7,"h4",false],[12,"class",[29,["msg-overlay-bubble-header__title truncate t-14 t-bold ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]," pr1"]]],[12,"tabindex","-1"],[3,"action",[[23,0,[]],"onActive"],[["on"],["focusIn"]]],[8],[0,"\\n"],[4,"if",[[23,0,["bubble","isNew"]]],null,{"statements":[[4,"if",[[23,0,["isMessageRequestCompose"]]],null,{"statements":[[4,"ember-engines@link-to-external",["profile.view",[23,0,["bubble","messageRecipients","firstObject","publicIdentifier"]]],[["bubbles"],[false]],{"statements":[[0,"              "],[7,"span",true],[11,"class",[29,["t-14 t-bold hoverable-link-text ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]]]],[8],[0,"\\n                "],[1,[28,"ember-cli-pemberly-i18n@format-name",null,[["firstName","lastName","type"],[[23,0,["bubble","messageRecipients","firstObject","firstName"]],[23,0,["bubble","messageRecipients","firstObject","lastName"]],"full"]]],false],[0,"\\n              "],[9],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"if",[[23,0,["showDraftGroupConversation"]]],null,{"statements":[[0,"              "],[1,[28,"if",[[23,0,["draftConversation","name"]],[23,0,["draftConversation","name"]],[28,"t",["i18n_participant_familiar","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["draftConversation","participantNames"]]]]]],null],false],[0,"\\n"],[4,"unless",[[23,0,["bubble","isMinimized"]]],null,{"statements":[[0,"                "],[7,"h5",true],[11,"class",[29,["t-12 t-normal truncate js-msg-group-participants ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]]]],[8],[0,"\\n"],[4,"if",[[23,0,["draftConversation","name"]]],null,{"statements":[[0,"                    "],[1,[28,"t",["i18n_participant_familiar","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["draftConversation","participantNames"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                    "],[1,[28,"t",["i18n_num_participants_in_group_conversation","msg-overlay/components/conversation-bubble"],[["count"],[[23,0,["draftConversation","participantNames","length"]]]]],false],[0,"\\n"]],"parameters":[]}],[0,"                "],[9],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"if",[[28,"global-helpers@or",[[23,0,["bubble","isConversationLoadingState"]],[23,0,["bubble","isConversationErrorState"]]],null]],null,{"statements":[],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","isConversationPreview"]]],null,{"statements":[[0,"              "],[1,[28,"t",["i18n_join_group_chat","msg-overlay/components/conversation-bubble"],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","isForward"]]],null,{"statements":[[0,"              "],[1,[28,"t",["i18n_forward_message","msg-overlay/components/conversation-bubble"],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","showGroupEditScreen"]]],null,{"statements":[[0,"              "],[1,[28,"t",["i18n_new_group_conversation","msg-overlay/components/conversation-bubble"],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[28,"global-helpers@gte",[[23,0,["bubble","messageRecipients","length"]],2],null]],null,{"statements":[[0,"              "],[1,[28,"t",["i18n_new_group_message","msg-overlay/components/conversation-bubble"],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"              "],[1,[28,"t",["i18n_new_message","msg-overlay/components/conversation-bubble"],null],false],[0,"\\n            "]],"parameters":[]}]],"parameters":[]}]],"parameters":[]}]],"parameters":[]}]],"parameters":[]}],[0,"          "]],"parameters":[]}]],"parameters":[]}]],"parameters":[]},{"statements":[[4,"if",[[28,"global-helpers@or",[[23,0,["bubble","conversation","hasCompanyProfile"]],[23,0,["bubble","conversation","isConversationWithAdvertiser"]]],null]],null,{"statements":[[4,"if",[[23,0,["isCompanySender"]]],null,{"statements":[[0,"              "],[5,"ember-engines@link-to-external",[],[["@route","@model"],["companies.company",[28,"global-helpers@urn-to-id",[[23,0,["bubble","conversation","participants","firstObject","miniCompany","entityUrn"]]],null]]],{"statements":[[0,"\\n              "],[7,"span",true],[11,"class",[29,["hoverable-link-text ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]]]],[8],[0,"\\n                "],[1,[28,"t",["i18n_participant_familiar","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]],false],[0,"\\n              "],[9],[0,"\\n              "]],"parameters":[]}],[0,"\\n"]],"parameters":[]},{"statements":[[0,"              "],[1,[28,"t",["i18n_participant_familiar","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]],false],[0,"\\n"]],"parameters":[]}]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","conversation","isManyToManyConvo"]]],null,{"statements":[[0,"            "],[1,[28,"if",[[23,0,["bubble","conversation","name"]],[23,0,["bubble","conversation","name"]],[28,"if",[[23,0,["enableGroupChatIdentity"]],[28,"t",["i18n_participant_familiar","msg-overlay/components/conversation-bubble"],[["names"],[[28,"msg-ui@participant-names-with-self",[[23,0,["bubble","conversation"]],true],null]]]],[28,"t",["i18n_participant_familiar","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]]],null]],null],false],[0,"\\n"],[4,"unless",[[23,0,["bubble","isMinimized"]]],null,{"statements":[[0,"              "],[7,"h5",true],[11,"class",[29,["t-12 t-normal truncate js-msg-group-participants ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]]]],[8],[0,"\\n"],[4,"if",[[23,0,["bubble","conversation","name"]]],null,{"statements":[[4,"if",[[23,0,["enableGroupChatIdentity"]]],null,{"statements":[[4,"if",[[28,"global-helpers@eq",[[23,0,["bubble","conversation","latestParticipants","length"]],0],null]],null,{"statements":[[0,"                      "],[1,[28,"t",["i18n_just_you","msg-overlay/components/conversation-bubble"],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                      "],[1,[28,"t",["i18n_participant_familiar","msg-overlay/components/conversation-bubble"],[["names"],[[28,"msg-ui@participant-names-with-self",[[23,0,["bubble","conversation"]],true],null]]]],false],[0,"\\n"]],"parameters":[]}]],"parameters":[]},{"statements":[[0,"                    "],[1,[28,"t",["i18n_participant_familiar","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]],false],[0,"\\n"]],"parameters":[]}]],"parameters":[]},{"statements":[[0,"                  "],[1,[28,"t",["i18n_num_participants_in_group_conversation","msg-overlay/components/conversation-bubble"],[["count"],[[23,0,["bubble","conversation","totalParticipantsCount"]]]]],false],[0,"\\n"]],"parameters":[]}],[0,"              "],[9],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","isMinimized"]]],null,{"statements":[[0,"              "],[1,[28,"t",["i18n_participants_full_names","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"ember-engines@link-to-external",["profile.view",[23,0,["bubble","conversation","recipientProfileId"]]],[["bubbles"],[false]],{"statements":[[0,"              "],[7,"span",true],[11,"class",[29,["t-14 t-bold hoverable-link-text ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]]]],[8],[0,"\\n                "],[1,[28,"t",["i18n_participants_full_names","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]],false],[0,"\\n              "],[9],[0,"\\n"]],"parameters":[]},null],[0,"          "]],"parameters":[]}]],"parameters":[]}]],"parameters":[]}]],"parameters":[]}],[0,"        "],[9],[0,"\\n"],[4,"if",[[23,0,["bubble","conversation","hasPresence"]]],null,{"statements":[[4,"unless",[[23,0,["bubble","isMinimized"]]],null,{"statements":[[4,"if",[[23,0,["presenceStatus","isOnline"]]],null,{"statements":[[0,"              "],[7,"div",true],[11,"class",[29,["truncate t-12 t-normal ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]]]],[8],[0,"\\n                "],[1,[28,"t",["i18n_active_now","msg-overlay/components/conversation-bubble"],null],false],[0,"\\n              "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["presenceStatus","isReachable"]]],null,{"statements":[[0,"              "],[7,"div",true],[11,"class",[29,["truncate t-12 t-normal ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]]]],[8],[0,"\\n                "],[1,[28,"if",[[23,0,["presenceStatus","lastActiveAt"]],[28,"t",["i18n_mobile","msg-overlay/components/conversation-bubble"],[["date"],[[28,"global-helpers@time-ago",[[23,0,["presenceStatus","lastActiveAt"]],"short-ago"],null]]]],[28,"t",["i18n_available_on_mobile","msg-overlay/components/conversation-bubble"],null]],null],false],[0,"\\n              "],[9],[0,"\\n            "]],"parameters":[]},null]],"parameters":[]}]],"parameters":[]},null]],"parameters":[]},null],[0,"      "],[9],[0,"\\n    "],[9],[0,"\\n    "],[7,"section",true],[10,"class","msg-overlay-bubble-header__controls display-flex align-items-center"],[8],[0,"\\n      "],[5,"artdeco-button@artdeco-button",[[12,"data-control-name",[28,"if",[[23,0,["bubble","isJumbo"]],"overlay.shrink_conversation_window","overlay.expand_conversation_window"],null]],[12,"aria-expanded",[28,"if",[[23,0,["bubble","isJumbo"]],"true","false"],null]]],[["@type","@color","@circle","@size","@icon","@class","@click","@text"],["tertiary",[28,"if",[[23,0,["lightHeaderBackground"]],"muted","inverse"],null],true,1,[28,"if",[[23,0,["bubble","isJumbo"]],"arrows-in-icon","arrows-out-icon"],null],"msg-overlay-bubble-header__control msg-overlay-conversation-bubble__expand-btn",[28,"action",[[23,0,[]],"toggleJumboSize"],null],[28,"if",[[23,0,["bubble","isJumbo"]],[28,"t",["i18n_minimize_bubble","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]],[28,"t",["i18n_maximize_bubble","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]]],null]]]],[0,"\\n\\n"],[4,"if",[[23,0,["bubble","isNew"]]],null,{"statements":[[4,"if",[[23,0,["showDraftGroupConversation"]]],null,{"statements":[[0,"          "],[5,"artdeco-dropdown@artdeco-dropdown",[],[["@isOpen","@onVisibilityChange","@placement","@justification","@classNames"],[[23,0,["isDraftThreadActionsDropdownOpen"]],[28,"ember-simple-set-helper@set",[[23,0,[]],"isDraftThreadActionsDropdownOpen"],null],"bottom","right","msg-thread-actions__dropdown"]],{"statements":[[0,"\\n            "],[6,[23,4,["dropdown-trigger"]],[],[["@class","@onClick"],[[29,["msg-thread-actions__control artdeco-button artdeco-button--1 artdeco-button--circle artdeco-button--tertiary ",[28,"if",[[23,0,["lightHeaderBackground"]],"artdeco-button--muted","artdeco-button--inverse"],null]]],[28,"action",[[23,0,[]],"onToggleDropdown"],null]]],{"statements":[[0,"\\n              "],[1,[28,"artdeco-icons-web@li-icon",null,[["type","class","size","color","a11y-text"],["ellipsis-horizontal-icon","artdeco-button__icon","small",true,[28,"t",[[28,"if",[[23,0,["bubble","conversation","isNew"]],"a11y_open_convo_new","a11y_open_convo"],null],"msg-overlay/components/conversation-bubble"],[["names"],[[28,"t",[[28,"if",[[23,0,["bubble","conversation","isManyToManyConvo"]],[28,"if",[[23,0,["bubble","conversation","name"]],[23,0,["bubble","conversation","name"]],"i18n_participants_full_names"],null],"i18n_participants_full_names"],null],"msg-overlay/components/conversation-bubble"],[["names"],[[28,"t",["i18n_participants_full_names","msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]]]]]]]]]]],false],[0,"\\n            "]],"parameters":[]}],[0,"\\n            "],[7,"div",true],[10,"class","msg-thread-actions__dropdown-container"],[8],[0,"\\n              "],[6,[23,4,["dropdown-content"]],[],[["@arrowDir","@class"],["right","msg-thread-actions__dropdown-options"]],{"statements":[[0,"\\n                "],[7,"ul",true],[8],[0,"\\n                  "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@class","@itemSelected"],["msg-thread-actions__dropdown-option",[28,"action",[[23,0,[]],"openEditGroupScreen"],null]]],{"statements":[[0,"\\n                    "],[1,[28,"t",["i18n_edit_group_conversation","msg-overlay/components/conversation-bubble"],null],false],[0,"\\n                  "]],"parameters":[]}],[0,"\\n                "],[9],[0,"\\n              "]],"parameters":[]}],[0,"\\n            "],[9],[0,"\\n          "]],"parameters":[4]}],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"unless",[[23,0,["bubble","isMinimized"]]],null,{"statements":[[4,"if",[[23,0,["enableConversationBubbleOneClickActions"]]],null,{"statements":[[4,"if",[[23,0,["bubble","isJumbo"]]],null,{"statements":[[0,"                "],[5,"artdeco-button@artdeco-button",[[3,"ember-cli-pemberly-tracking@track-interaction",[[28,"if",[[23,0,["bubble","conversation","read"]],"overlay_mark_conversation_unread","overlay_mark_conversation_read"],null]]]],[["@aria-label","@title","@type","@color","@circle","@size","@icon","@click"],[[28,"if",[[23,0,["bubble","conversation","read"]],[28,"t",["i18n_mark_conversation_unread","msg-overlay/components/conversation-bubble"],null],[28,"t",["i18n_mark_conversation_read","msg-overlay/components/conversation-bubble"],null]],null],[28,"if",[[23,0,["bubble","conversation","read"]],[28,"t",["i18n_mark_conversation_unread","msg-overlay/components/conversation-bubble"],null],[28,"t",["i18n_mark_conversation_read","msg-overlay/components/conversation-bubble"],null]],null],"tertiary",[28,"if",[[23,0,["lightHeaderBackground"]],"muted","inverse"],null],true,1,[28,"if",[[23,0,["bubble","conversation","read"]],"envelope-icon","envelope-open-icon"],null],[23,0,["toggleConversationRead"]]]]],[0,"\\n\\n                "],[5,"artdeco-button@artdeco-button",[[3,"ember-cli-pemberly-tracking@track-interaction",[[28,"if",[[23,0,["bubble","conversation","archived"]],"overlay_unarchive_conversation","overlay_archive_conversation"],null]]]],[["@aria-label","@title","@type","@color","@circle","@size","@icon","@click"],[[28,"if",[[23,0,["bubble","conversation","archived"]],[28,"t",["i18n_unarchive_conversation","msg-overlay/components/conversation-bubble"],null],[28,"t",["i18n_archive_conversation","msg-overlay/components/conversation-bubble"],null]],null],[28,"if",[[23,0,["bubble","conversation","archived"]],[28,"t",["i18n_unarchive_conversation","msg-overlay/components/conversation-bubble"],null],[28,"t",["i18n_archive_conversation","msg-overlay/components/conversation-bubble"],null]],null],"tertiary",[28,"if",[[23,0,["lightHeaderBackground"]],"muted","inverse"],null],true,1,[28,"if",[[23,0,["bubble","conversation","archived"]],"unarchive-message-icon","archive-message-icon"],null],[23,0,["toggleConversationArchive"]]]]],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null],[0,"          "],[5,"asset-loader@deferred-asset-loader",[],[["@bundle"],["msg-shared-modals"]],{"statements":[[0,"\\n"],[4,"if",[[23,3,["state","fulfilled"]]],null,{"statements":[[0,"              "],[5,"msg-shared-modals@thread-actions",[],[["@conversation","@handleSuccessfulDiscardRequest","@showRenameConversationForm","@externalComps","@enableReportingSponsoredConversation","@toggleConversationMute","@createGroupChat","@trackingModuleName","@actionTrackingPrefix","@addParticipantsPageKey","@isOverlay","@inverse","@showConversationBubbleOneClickActions"],[[23,0,["bubble","conversation"]],[23,0,["handleSuccessfulDiscardRequest"]],[28,"action",[[23,0,[]],"toggleShowRenameConversation",true],null],[28,"hash",null,[["semaphoreComp"],[[28,"component",["ember-semaphore@ember-semaphore"],null]]]],[23,0,["enableReportingSponsoredConversation"]],[28,"action",[[23,0,[]],"toggleConversationMute"],null],[28,"action",[[23,0,[]],"createGroupChat"],null],[23,0,["trackingModuleName"]],[23,0,["actionTrackingPrefix"]],"flagship3_messaging_overlay_manage_participants_modal.page",true,[28,"global-helpers@not",[[23,0,["lightHeaderBackground"]]],null],[28,"global-helpers@and",[[23,0,["enableConversationBubbleOneClickActions"]],[23,0,["bubble","isJumbo"]]],null]]]],[0,"\\n"]],"parameters":[]},null],[0,"          "]],"parameters":[3]}],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}],[0,"      "],[5,"artdeco-button@artdeco-button",[[12,"data-control-name",[28,"if",[[23,0,["bubble","isConversationPreview"]],"overlay.ltj_preview_exit","overlay.close_conversation_window"],null]]],[["@type","@color","@circle","@size","@icon","@class","@click","@text"],["tertiary",[28,"if",[[23,0,["lightHeaderBackground"]],"muted","inverse"],null],true,1,"cancel-icon","msg-overlay-bubble-header__control",[28,"action",[[23,0,[]],"handleCloseBubble"],null],[28,"t",[[28,"if",[[23,0,["bubble","conversation","isNew"]],"a11y_close_convo_new","a11y_close_convo"],null],"msg-overlay/components/conversation-bubble"],[["names"],[[28,"t",[[28,"if",[[23,0,["bubble","conversation","isManyToManyConvo"]],[28,"if",[[23,0,["bubble","conversation","name"]],[23,0,["bubble","conversation","name"]],"i18n_participants_full_names"],null],"i18n_participants_full_names"],null],"msg-overlay/components/conversation-bubble"],[["names"],[[23,0,["bubble","conversation","participantNames"]]]]]]]]]]],[0,"\\n"],[0,"    "],[9],[0,"\\n  "],[9],[0,"\\n\\n  "],[7,"div",false],[12,"class",[29,["msg-overlay-conversation-bubble__content-wrapper relative display-flex flex-column\\n      ",[28,"if",[[23,0,["showRenameConversationForm"]]," msg-overlay-conversation-bubble__content-wrapper--disabled"],null]]]],[3,"on",["mouseup",[23,0,["onActive"]]]],[3,"on",["focusin",[23,0,["onActive"]]]],[8],[0,"\\n"],[4,"if",[[23,0,["bubble","isConversationPreview"]]],null,{"statements":[[0,"      "],[5,"msg-ui@conversation-preview",[],[["@bubble"],[[23,0,["bubble"]]]]],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","isConversationLoadingState"]]],null,{"statements":[[0,"      "],[5,"msg-ui@conversation-loading-state",[],[["@bubble"],[[23,0,["bubble"]]]]],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","isConversationErrorState"]]],null,{"statements":[[0,"      "],[5,"msg-ui@conversation-error-state",[],[["@bubble"],[[23,0,["bubble"]]]]],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","conversation","isSponsoredConversation"]]],null,{"statements":[[0,"        "],[5,"asset-loader@deferred-asset-loader",[],[["@bundle"],["msg-spinmail"]],{"statements":[[0,"\\n"],[4,"if",[[23,2,["state","fulfilled"]]],null,{"statements":[[0,"            "],[5,"msg-overlay@spinmail/sponsored-conversation-bubble",[],[["@conversation","@isCompanySender","@initialEventsRequest"],[[23,0,["bubble","conversation"]],[23,0,["isCompanySender"]],[23,0,["bubble","fetchedEventsProxy"]]]]],[0,"\\n"]],"parameters":[]},null],[0,"        "]],"parameters":[2]}],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","conversation","isSpinMail"]]],null,{"statements":[[0,"        "],[5,"asset-loader@deferred-asset-loader",[],[["@bundle"],["msg-spinmail"]],{"statements":[[0,"\\n"],[4,"if",[[23,1,["state","fulfilled"]]],null,{"statements":[[0,"            "],[5,"msg-spinmail@spinmail-thread",[],[["@conversation","@actionTrackingPrefix","@isCompanySender"],[[23,0,["bubble","conversation"]],[23,0,["actionTrackingPrefix"]],[23,0,["isCompanySender"]]]]],[0,"\\n"]],"parameters":[]},null],[0,"        "]],"parameters":[1]}],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["bubble","isNew"]]],null,{"statements":[[0,"          "],[5,"msg-overlay@conversation-bubble-compose",[],[["@bubble","@bubbleId","@draftConversation","@handleSuccessfulDiscardRequest","@isOriginalSize","@width","@messagingSettings","@composeViewContext","@showRenameConversationForm","@toggleShowRenameConversation","@openConversation","@composeToNonConnection","@setComposeContext","@onActive","@onCreateDraftGroupConversation","@isInMail","@didSubmitMessage","@dragAndDropTrackingKeys","@hasPrefilledConversationName","@messageContext","@setFocusToRenameConversationForm","@shouldShowExpandedTypeahead"],[[23,0,["bubble"]],[23,0,["bubble","id"]],[23,0,["draftConversation"]],[23,0,["handleSuccessfulDiscardRequest"]],[23,0,["isOriginalSize"]],[23,0,["width"]],[23,0,["messagingSettings"]],[23,0,["composeViewContext"]],[23,0,["showRenameConversationForm"]],[28,"action",[[23,0,[]],"toggleShowRenameConversation"],null],[28,"action",[[23,0,[]],"openConversation"],null],[28,"action",[[23,0,[]],"composeToNonConnection"],null],[28,"action",[[23,0,[]],"setComposeContext"],null],[28,"action",[[23,0,[]],"onActive"],null],[28,"action",[[23,0,[]],"createDraftGroupConversation"],null],[23,0,["bubble","isInMail"]],[28,"action",[[23,0,[]],"didSubmitMessage"],null],[23,0,["dragAndDropTrackingKeys"]],[23,0,["hasPrefilledConversationName"]],[23,0,["messageContext"]],[23,0,["setFocusToRenameConversationForm"]],[23,0,["shouldShowExpandedTypeahead"]]]]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"          "],[5,"msg-overlay@conversation-bubble-thread",[],[["@bubble","@bubbleId","@draftConversation","@handleSuccessfulDiscardRequest","@isOriginalSize","@width","@messagingSettings","@composeViewContext","@showRenameConversationForm","@toggleShowRenameConversation","@openConversation","@composeToNonConnection","@onActive","@onCreateDraftGroupConversation","@isInMail","@didSubmitMessage","@dragAndDropTrackingKeys","@hasPrefilledConversationName","@messageContext","@setFocusToRenameConversationForm","@shouldShowExpandedTypeahead","@perfMeasurement"],[[23,0,["bubble"]],[23,0,["bubble","id"]],[23,0,["draftConversation"]],[23,0,["handleSuccessfulDiscardRequest"]],[23,0,["isOriginalSize"]],[23,0,["width"]],[23,0,["messagingSettings"]],[23,0,["composeViewContext"]],[23,0,["showRenameConversationForm"]],[28,"action",[[23,0,[]],"toggleShowRenameConversation"],null],[28,"action",[[23,0,[]],"openConversation"],null],[28,"action",[[23,0,[]],"composeToNonConnection"],null],[28,"action",[[23,0,[]],"onActive"],null],[28,"action",[[23,0,[]],"createDraftGroupConversation"],null],[23,0,["bubble","isInMail"]],[28,"action",[[23,0,[]],"didSubmitMessage"],null],[23,0,["dragAndDropTrackingKeys"]],[23,0,["hasPrefilledConversationName"]],[23,0,["messageContext"]],[23,0,["setFocusToRenameConversationForm"]],[23,0,["shouldShowExpandedTypeahead"]],[23,0,["perfMeasurement"]]]]],[0,"\\n"]],"parameters":[]}],[0,"      "]],"parameters":[]}]],"parameters":[]}],[0,"    "]],"parameters":[]}]],"parameters":[]}]],"parameters":[]}],[0,"  "],[9],[0,"\\n\\n  "],[5,"artdeco-modal@artdeco-confirmation-dialog",[],[["@isOpen","@title","@content","@primaryActionText","@secondaryActionText","@onPrimary","@onSecondary","@onEscape"],[[23,0,["showMessageDiscardModal"]],[28,"t",["i18n_discard_message","msg-overlay/components/conversation-bubble"],null],[28,"t",["i18n_discard_body","msg-overlay/components/conversation-bubble"],null],[28,"t",["i18n_discard","msg-overlay/components/conversation-bubble"],null],[28,"t",["i18n_cancel","msg-overlay/components/conversation-bubble"],null],[23,6,[]],[28,"fn",[[28,"mut",[[23,0,["showMessageDiscardModal"]]],null],false],null],[28,"fn",[[28,"mut",[[23,0,["showMessageDiscardModal"]]],null],false],null]]]],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/conversation-bubble.hbs"}}),{ACTION_TYPES:_e,CONTROL_NAMES:Ee,IMPRESSION_KEYS:{CONVERSATION_DETAIL_IMPRESSION:Ce,DISPLAY_ITEM_TYPE:we},KEYCODES:{ESC:Me},LIX:{ENABLE_OVERLAY_EXPAND_BUTTON:Oe,ENABLE_MSG_NEW_QUICK_REPLIES:Se,ENABLE_GROUP_CHAT_IDENTITY:ke,ENABLE_OLYMPUS_KEYS:Re,ENABLE_CONVERSATION_BUBBLE_ONE_CLICK_ACTIONS:Te,ENABLE_REACTIONS:Pe},MODULE_KEYS:{OVERLAY_COMPOSE:De,OVERLAY_CONVERSATION_DETAIL:Ie},OVERLAY:{BUBBLE_ACTIONS:{TOGGLE_JUMBO:xe,TOGGLE_MINIMIZED:Ae}},GHOST_TYPE:Ne,PAGEVIEW_KEYS:Le,ATTACHMENT_DRAG_AND_DROP_TRACKING_KEYS:Be}=u.default
let ze=(v=Ember.inject.service("authentication@authenticated-user"),f=Ember.inject.service("i18n"),_=Ember.inject.service("lix"),E=Ember.inject.service("router"),C=Ember.inject.service("global-services@identity-store"),w=Ember.inject.service("msg-data@data-manager"),M=Ember.inject.service("msg-overlay-manager@msg-overlay-manager"),O=Ember.inject.service("rum"),S=Ember.inject.service("tracking"),k=Ember.inject.service("persistent-toast-manager"),R=Ember.computed.not("bubble.isJumbo"),T=Ember.computed.bool("messageContext").readOnly(),P=Ember.computed.notEmpty("bubble.messageRecipients"),D=Ember.computed("bubble.hasUnseenMessages","bubble.conversation.read","forcedMinimize").readOnly(),I=Ember.computed("hasBadge").readOnly(),x=Ember.computed.reads("bubble.conversation.participants.firstObject.miniProfile.presence"),A=Ember.computed("bubble.isNew","bubble.conversation.hasPresence").readOnly(),N=Ember.computed("bubble.conversation.participants.firstObject.ghostType","bubble.isMinimized").readOnly(),L=Ember.computed("msgDataManager.messageReactionsHelper.reactionNotification").readOnly(),B=Ember._action,z=Ember._action,j=Ember._action,F=Ember._action,q=Ember._action,U=Ember._action,H=Ember._action,V=Ember._action,K=Ember._action,Y=Ember._action,G=Ember._action,W=Ember._action,J=Ember._action,X=Ember._action,Q=Ember._action,$=Ember._action,Z=Ember._action,ee=Ember._action,te=Ember._action,ne=Ember._action,se=(ve=new WeakMap,class extends c.default{constructor(){super(...arguments);(0,n.default)(this,"tagName","");(0,t.default)(this,"authenticatedUser",ae,this);(0,t.default)(this,"i18n",oe,this);(0,t.default)(this,"lix",ie,this);(0,t.default)(this,"router",re,this);(0,t.default)(this,"identityStore",le,this);(0,t.default)(this,"msgDataManager",ce,this);(0,t.default)(this,"msgOverlay",me,this);(0,t.default)(this,"rum",de,this);(0,t.default)(this,"tracking",ue,this);(0,t.default)(this,"persistentToastManager",pe,this);(0,n.default)(this,"actionTrackingPrefix",Ee.OVERLAY_PREFIX);(0,n.default)(this,"trackingModuleName",Ie);(0,n.default)(this,"showRenameConversationForm",!1);(0,n.default)(this,"setFocusToRenameConversationForm",!1);(0,n.default)(this,"shareInfoModalIsOpen",!1);(0,n.default)(this,"bubbleMinimizeProperty","bubble.isMinimized");(0,n.default)(this,"dragAndDropTrackingKeys",Be.OVERLAY);(0,t.default)(this,"isOriginalSize",be,this);(0,t.default)(this,"isMessageRequestCompose",ge,this);(0,t.default)(this,"hasValidRecipients",he,this);(0,t.default)(this,"presenceStatus",ye,this);(0,n.default)(this,"isDraftThreadActionsDropdownOpen",!1);(0,n.default)(this,"isDismissed",!1)
ve.set(this,{writable:!0,value:void 0})}model(){return this.bubble.conversation}get hasBadge(){return Ember.get(this,"bubble.hasUnseenMessages")&&!this.forcedMinimize&&!Ember.get(this,"bubble.conversation.read")}get lightHeaderBackground(){return this.isMercado&&!this.hasBadge}get showPresenceUI(){return!Ember.get(this.bubble,"isNew")&&Ember.get(this.bubble,"conversation.hasPresence")}get isCompanySender(){return Ember.get(this,"bubble.conversation.participants.firstObject.ghostType")===Ne.COMPANY&&!this.bubble.isMinimized}get headerReactionNotification(){const{reactionNotification:e}=this.msgDataManager.messageReactionsHelper
if(e&&(0,g.shouldDisplayReactionNotificationInHeader)(e.messageEvent,Ember.get(this,"bubble.conversation.id"),(0,a.default)(this,ve)))return e}init(){super.init(...arguments)
let e=Ember.get(this,"bubble.groupConversationName")
if(e){const t=Ember.get(e,"string")
if(t){e=t
Ember.set(this.bubble,"groupConversationName",e)}Ember.set(this,"hasPrefilledConversationName",!0)}Ember.set(this,"draftConversation",{name:e||""})
const t=Ember.get(this,"bubble.showGroupEditScreen")
Ember.set(this,"bubblePageKey",t?Le.OVERLAY_COMPOSE_GROUP_CONVO_PAGEKEY:Le.OVERLAY_CONVO)
if(this.bubble.conversation&&Ember.get(this,"bubble.conversation.id")){Ember.set(this.bubble,"fetchedEventsProxy",this.msgOverlay.findConversationEvents(this.bubble.conversation))
if(!Ember.get(this.bubble.conversation,"eventCollection.hasInitialFetch")){this.perfMeasurement=this.msgOverlay.startRumPerfMeasurement("open-conversation-bubble-events-not-loaded")
this.perfMeasurement&&this.perfMeasurement.spanStart("initial-render")}Ember.set(this,"enableReportingSponsoredConversation",(0,b.enableReportingSponsoredMessage)(this.bubble.conversation)||(0,b.enableReportingSponsoredInMail)(this.bubble.conversation))}void 0===this.bubble.isJumbo&&Ember.set(this,"bubble.isJumbo",this.bubble.isInMail||this.bubble.isInMailCompose||Ember.get(this,"bubble.conversation.isSpinMail")||Ember.get(this,"bubble.conversation.isSponsoredConversation")&&1===Ember.get(this,"bubble.conversation.sortedEvents").length)
Ember.setProperties(this,{canShowExpandButton:this.lix.getTreatmentIsEnabled(Oe),enableGroupChatIdentity:this.lix.getTreatmentIsEnabled(ke),enableNewQuickReplies:this.lix.getTreatmentIsEnabled(Se),enableOlympusKeys:this.lix.getTreatmentIsEnabled(Re),enableConversationBubbleOneClickActions:this.lix.getTreatmentIsEnabled(Te),enableReactions:this.lix.getTreatmentIsEnabled(Pe),isMercado:this.lix.getTreatmentIsEnabled("voyager.web.infraux-mercado-theme")})
if(Ember.get(this,"bubble.messageRecipients")&&Ember.get(this,"bubble.composeOptionType")){const e=Ember.get(this,"bubble.context")||Ember.get(this,"messageContext.contextEntityUrn")||Ember.get(this,"bubble.inMailComposeViewContext.contextEntityUrn"),t=Ember.get(this,"bubble.composeOptionType")
Ember.set(this,"composeViewContext",this.msgDataManager.fetchComposeContext({recipients:Ember.get(this,"bubble.messageRecipients").mapBy("entityUrn"),composeOptionType:t,context:e}).then(n=>{if(!this.isDestroying){Ember.set(this,"composeViewContext",n)
n&&"MESSAGE_REQUEST"===t&&Ember.set(this,"messageContext",{contextEntityUrn:e,contextText:Ember.get(n,"contextText")})}}))}}onImpression(e){let{visibleTime:t,duration:n}=e
const s=Ember.get(this,"bubble.isNew")?De:Ie,a=Ember.get(this,"bubble.messageRecipients"),o=a&&a.mapBy("backendUrn")
return{name:Ce,body:{moduleKey:s,participantUrns:o||[],conversation:{objectUrn:"",trackingId:(0,d.generateTrackingId)()},displayItem:{type:we.MESSAGE_COMPOSE,visibleTime:t,duration:n,trackingObject:{objectUrn:"",trackingId:(0,d.generateTrackingId)()}}}}}_handleOutsideMouseDown(e){this._element&&!this._element.contains(e.target)&&this._updateActiveState(!1)}handleDidInsert(e){this._element=e;(0,s.default)(this,ve,e.querySelector(".msg-s-message-list"));(0,y.default)()?this.bubble.isMinimized||(this.isPageViewEventPending=!0):this._fireBubblePVE()
this._handleInitialFocus()
l.default&&this.addEventListener(document,"mousedown",this._handleOutsideMouseDown.bind(this))
this.addEventListener(this._element,"transitionend",e=>{"width"===e.propertyName&&(0,r.readDOM)(()=>{this.isDestroying||Ember.set(this,"width",this._element.offsetWidth)})})
l.default&&this.addEventListener(window,"visibilitychange",this._handleVisibilityChange.bind(this))}didRender(){!this.initialRenderEnded&&this.perfMeasurement&&this.perfMeasurement.spanEnd("initial-render")
this.initialRenderEnded=!0}willDestroy(){this.perfMeasurement&&!this.perfMeasurement.isClosed&&this.rum.endPerfMeasurement(this.perfMeasurement)}_handleInitialFocus(){let e
Ember.get(this,"bubble.isNew")&&!this.bubble.isInMailCompose?e=this._element.querySelector(Ember.get(this,"bubble.messageRecipients.length")&&!Ember.get(this,"bubble.showGroupEditScreen")?".msg-form__contenteditable":".msg-connections-typeahead__search-field"):Ember.get(this,"bubble.focusInputOnInit")&&(e=Ember.get(this,"bubble.conversation.isConversationWithAdvertiser")?this._element.querySelector(".msg-overlay-bubble-header"):this._element.querySelector(this.bubble.isInMailCompose?".msg-form__subject":".msg-form__contenteditable")||this._element.querySelector(".msg-overlay-bubble-header__title"))
if(e){e.focus()
this.onActive()}}_handleVisibilityChange(){if(!(0,y.default)()&&this.isPageViewEventPending){this._fireBubblePVE()
this.isPageViewEventPending=!1}}_updateMinimizedState(e){Ember.set(this,"bubble.isMinimized",e)}_updateActiveState(e){Ember.set(this.bubble,"isActive",e)}handlekeyUp(e){e.keyCode===Me&&"false"!==e.target.getAttribute("aria-hidden")&&this.send("handleCloseBubble")}_focusConversation(){if(l.default&&window.getSelection().toString())return
let e
e=Ember.get(this,"bubble.conversation.isConversationWithAdvertiser")?".msg-overlay-bubble-header":".msg-form__contenteditable"
const t=this._element.querySelector(e)
t&&t.focus()}_showSuccessToast(e){const t=this.i18n.lookupTranslation("component","msg-overlay@conversation-bubble",e)([])
this.persistentToastManager.success({message:t})}onActive(){this._updateActiveState(!0)
this.msgOverlay.markConversationAsRead(this.bubble)}handleCloseBubble(e){e&&e.stopPropagation()
const t=Ember.get(this,"bubble.messageActions.afterCloseBubble")
let{closeBubble:n}=this
n=n?n.bind(this,this.bubble.conversation):function(){}
if(Ember.get(this,"bubble.hasDraft"))Ember.set(this,"showMessageDiscardModal",!0)
else{Ember.set(this,"closedNewConversation",Ember.get(this,"bubble.isNew"))
this.closeBubble()}t&&t()}closeMessageDiscardModal(){Ember.set(this,"showMessageDiscardModal",!1)}toggleJumboSize(e){e&&e.stopPropagation()
Ember.get(this,"msgOverlay.conversationBubbleLayoutManager").resizeBubble(this.bubble,xe)
Ember.set(this,"bubble.isJumbo",!this.bubble.isJumbo)
this.bubble.isJumbo&&this.bubble.isNew?Ember.set(this,"shouldShowExpandedTypeahead",!0):Ember.set(this,"shouldShowExpandedTypeahead",!1)
if(this.bubble.isJumbo&&this.bubble.isInMail){const e=this._element.querySelector(".msg-inmail-quick-replies__options")
if(e){e.style.left="0"
this._element.querySelector(".msg-inmail-quick-replies__options-carousel-nav-prev").disabled=!0
this._element.querySelector(".msg-inmail-quick-replies__options-carousel-nav-next").disabled=!1}}this.msgOverlay.syncCachedConvos()}toggleMinimize(){Ember.get(this,"msgOverlay.conversationBubbleLayoutManager").resizeBubble(this.bubble,Ae)
Ember.set(this,"bubble.isMinimized",!this.bubble.isMinimized)
this.msgOverlay.syncCachedConvos()
this.bubble.isMinimized||this.runTask(()=>{Ember.get(this,"bubble.hasUnseenMessages")&&this.msgOverlay.markConversationAsRead(this.bubble)
const e=this._element.querySelector(".msg-s-message-list")
e&&(e.scrollTop=e.scrollHeight)
this._focusConversation()})
this._fireBubblePVE()
this._updateActiveState(!this.bubble.isMinimized)}toggleShowRenameConversation(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0]
if(Ember.get(this,"bubble.conversation.isManyToManyConvo")){this.showRenameConversationForm?Ember.set(this,"setFocusToRenameConversationForm",!1):Ember.set(this,"setFocusToRenameConversationForm",e)
Ember.set(this,"showRenameConversationForm",!this.showRenameConversationForm)}}openConversation(e){this.msgDataManager.fetchConversation(e).then(t=>{if(t){const n=this.msgDataManager.initEventCollection({name:e,conversationId:e})
Ember.setProperties(this.bubble,{conversation:t,fetchedEventsProxy:n.fetch(),isNew:!1,isJumbo:Ember.get(t,"isManyToManyConvo")})
Ember.run.scheduleOnce("afterRender",()=>this._handleInitialFocus())}})}createGroupChat(e){this.newConversation({recipients:[e],showGroupEditScreen:!0,isJumbo:!0})}openInMailCompose(e,t){this.identityStore.findRecord("com.linkedin.voyager.identity.shared.MiniProfile",e).then(e=>{if(!this.isDestroying){Ember.setProperties(this.bubble,{composeOptionType:"PREMIUM_INMAIL",isInMailCompose:!0,isJumbo:!t,isOpenedFromMsgButton:!0,messageRecipients:[e],showPremiumUpsell:t})
Ember.run.scheduleOnce("afterRender",()=>this._handleInitialFocus())}})}openMessageRequest(e,t){const n=(0,p.extractEntityInfoFromUrn)(e).id,s=this.identityStore.findRecord("com.linkedin.voyager.identity.shared.MiniProfile",n),a=this.msgDataManager.fetchComposeContext({recipients:[e],composeOptionType:"MESSAGE_REQUEST",context:t})
Ember.RSVP.hash({recipient:s,context:a}).then(e=>{if(!this.isDestroying){const n=e.context?Ember.get(e,"context.contextText"):void 0
Ember.setProperties(this.bubble,{composeIsFullyExpanded:!0,composeOptionType:"MESSAGE_REQUEST",isOpenedFromMsgButton:!0,messageRecipients:[e.recipient],messageContext:{contextEntityUrn:t,contextText:n}})
Ember.run.scheduleOnce("afterRender",()=>this._handleInitialFocus())}})}setComposeContext(e,t){this.msgDataManager.fetchComposeContext({recipients:[e],composeOptionType:"MESSAGE_REQUEST",context:t}).then(e=>{if(!this.isDestroying){const n=e?Ember.get(e,"contextText"):void 0
Ember.setProperties(this.bubble,{messageContext:{contextEntityUrn:t,contextText:n}})}})}composeToNonConnection(e,t){let{composeOption:n,upsellContextUrn:s}=t
switch(Ember.get(n,"composeOptionType")){case"UPSELL":this.openInMailCompose((0,p.extractEntityInfoFromUrn)(s).id,!0)
break
case"PREMIUM_INMAIL":this.openInMailCompose((0,p.extractEntityInfoFromUrn)(Ember.get(n,"composeNavigationContext.recipientUrns.firstObject")).id)
break
case"REPLY":this.openConversation((0,p.extractEntityInfoFromUrn)(Ember.get(n,"composeNavigationContext.existingConversationUrn")).id)
break
default:e()}}createDraftGroupConversation(e){let{recipients:t,msgGroupName:n}=e
n||this.msgDataManager.fetchLatestConversationByRecipients(t).then(e=>{if(!this.isDestroying&&e&&!Ember.get(e,"name")){const t=Ember.get(e,"id"),n=this.msgDataManager.initEventCollection({name:t,conversationId:t})
Ember.setProperties(this.bubble,{conversation:e,fetchedEvents:n.fetch(),eventCollection:n})}})
Ember.setProperties(this,{"bubble.messageRecipients":t,"bubble.showGroupEditScreen":!1,showDraftGroupConversation:!0})
const s={isManyToManyConvo:!0,participantNames:t.map(h.getName),recipients:t,participants:t.map(e=>({miniProfile:e})),name:n,totalParticipantsCount:t&&t.length}
Ember.set(this,"draftConversation",s)}openEditGroupScreen(e){e&&e.stopPropagation()
Ember.setProperties(this,{isDraftThreadActionsDropdownOpen:!1,"bubble.showGroupEditScreen":!0,showDraftGroupConversation:!1})}onToggleDropdown(e){e&&e.stopPropagation()}toggleConversationMute(){const e=this.msgDataManager.toggleConversationMute(this.bubble.conversation),t=Ember.get(this,"bubble.conversation.muted")?_e.MUTE:_e.UNMUTE
m.default.fireDetailActionEvent({actionType:t,controlName:Ee.OVERLAY.MUTE,conversation:this.bubble.conversation,shouldUseOlympusKeys:this.enableOlympusKeys,trackingService:this.tracking})
return e}infiniteScroll(){}didSubmitMessage(e,t){Ember.setProperties(this,{"bubble.message":"","bubble.attachments":[],showDraftGroupConversation:!1})
const n=Ember.get(this,"bubble.messageActions.afterSendTracking")
if(n){const e=n()
this.tracking.fireTrackingPayload(e.name,e.body)}if(t){this.msgOverlay.closeExistingBubble(e)
Ember.run.scheduleOnce("afterRender",()=>this._handleInitialFocus())}}toggleConversationArchive(e){e&&e.stopPropagation()
const t=!Ember.get(this.bubble.conversation,"archived")
t&&this.msgOverlay.closeExistingBubble(this.bubble.conversation)
this.msgDataManager.toggleConversationArchive(this.msgDataManager.peekConversation(Ember.get(this.bubble.conversation,"id"))).then(()=>{const e=t?"i18n_archive_conversation_success":"i18n_unarchive_conversation_success"
this._showSuccessToast(e)})}toggleConversationRead(e){e&&e.stopPropagation()
const t=Ember.get(this.bubble.conversation,"read")
t&&this.msgOverlay.closeExistingBubble(this.bubble.conversation)
this.msgDataManager.toggleConversationRead(this.bubble.conversation).then(()=>{const e=t?"i18n_mark_conversation_unread_success":"i18n_mark_conversation_read_success"
this._showSuccessToast(e)})}}),ae=(0,o.default)(se.prototype,"authenticatedUser",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),oe=(0,o.default)(se.prototype,"i18n",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ie=(0,o.default)(se.prototype,"lix",[_],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),re=(0,o.default)(se.prototype,"router",[E],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),le=(0,o.default)(se.prototype,"identityStore",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ce=(0,o.default)(se.prototype,"msgDataManager",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),me=(0,o.default)(se.prototype,"msgOverlay",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),de=(0,o.default)(se.prototype,"rum",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ue=(0,o.default)(se.prototype,"tracking",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),pe=(0,o.default)(se.prototype,"persistentToastManager",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),be=(0,o.default)(se.prototype,"isOriginalSize",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ge=(0,o.default)(se.prototype,"isMessageRequestCompose",[T],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),he=(0,o.default)(se.prototype,"hasValidRecipients",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,o.default)(se.prototype,"hasBadge",[D],Object.getOwnPropertyDescriptor(se.prototype,"hasBadge"),se.prototype),(0,o.default)(se.prototype,"lightHeaderBackground",[I],Object.getOwnPropertyDescriptor(se.prototype,"lightHeaderBackground"),se.prototype),ye=(0,o.default)(se.prototype,"presenceStatus",[x],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,o.default)(se.prototype,"showPresenceUI",[A],Object.getOwnPropertyDescriptor(se.prototype,"showPresenceUI"),se.prototype),(0,o.default)(se.prototype,"isCompanySender",[N],Object.getOwnPropertyDescriptor(se.prototype,"isCompanySender"),se.prototype),(0,o.default)(se.prototype,"headerReactionNotification",[L],Object.getOwnPropertyDescriptor(se.prototype,"headerReactionNotification"),se.prototype),(0,o.default)(se.prototype,"onImpression",[B],Object.getOwnPropertyDescriptor(se.prototype,"onImpression"),se.prototype),(0,o.default)(se.prototype,"handleDidInsert",[z],Object.getOwnPropertyDescriptor(se.prototype,"handleDidInsert"),se.prototype),(0,o.default)(se.prototype,"handlekeyUp",[j],Object.getOwnPropertyDescriptor(se.prototype,"handlekeyUp"),se.prototype),(0,o.default)(se.prototype,"onActive",[F],Object.getOwnPropertyDescriptor(se.prototype,"onActive"),se.prototype),(0,o.default)(se.prototype,"handleCloseBubble",[q],Object.getOwnPropertyDescriptor(se.prototype,"handleCloseBubble"),se.prototype),(0,o.default)(se.prototype,"closeMessageDiscardModal",[U],Object.getOwnPropertyDescriptor(se.prototype,"closeMessageDiscardModal"),se.prototype),(0,o.default)(se.prototype,"toggleJumboSize",[H],Object.getOwnPropertyDescriptor(se.prototype,"toggleJumboSize"),se.prototype),(0,o.default)(se.prototype,"toggleMinimize",[V],Object.getOwnPropertyDescriptor(se.prototype,"toggleMinimize"),se.prototype),(0,o.default)(se.prototype,"toggleShowRenameConversation",[K],Object.getOwnPropertyDescriptor(se.prototype,"toggleShowRenameConversation"),se.prototype),(0,o.default)(se.prototype,"openConversation",[Y],Object.getOwnPropertyDescriptor(se.prototype,"openConversation"),se.prototype),(0,o.default)(se.prototype,"createGroupChat",[G],Object.getOwnPropertyDescriptor(se.prototype,"createGroupChat"),se.prototype),(0,o.default)(se.prototype,"setComposeContext",[W],Object.getOwnPropertyDescriptor(se.prototype,"setComposeContext"),se.prototype),(0,o.default)(se.prototype,"composeToNonConnection",[J],Object.getOwnPropertyDescriptor(se.prototype,"composeToNonConnection"),se.prototype),(0,o.default)(se.prototype,"createDraftGroupConversation",[X],Object.getOwnPropertyDescriptor(se.prototype,"createDraftGroupConversation"),se.prototype),(0,o.default)(se.prototype,"openEditGroupScreen",[Q],Object.getOwnPropertyDescriptor(se.prototype,"openEditGroupScreen"),se.prototype),(0,o.default)(se.prototype,"onToggleDropdown",[$],Object.getOwnPropertyDescriptor(se.prototype,"onToggleDropdown"),se.prototype),(0,o.default)(se.prototype,"toggleConversationMute",[Z],Object.getOwnPropertyDescriptor(se.prototype,"toggleConversationMute"),se.prototype),(0,o.default)(se.prototype,"didSubmitMessage",[ee],Object.getOwnPropertyDescriptor(se.prototype,"didSubmitMessage"),se.prototype),(0,o.default)(se.prototype,"toggleConversationArchive",[te],Object.getOwnPropertyDescriptor(se.prototype,"toggleConversationArchive"),se.prototype),(0,o.default)(se.prototype,"toggleConversationRead",[ne],Object.getOwnPropertyDescriptor(se.prototype,"toggleConversationRead"),se.prototype),se)
e.default=ze
Ember._setComponentTemplate(fe,ze)})
define.alias("ember-vector-images/components/custom-image","msg-overlay/components/custom-image")
define.alias("ember-semaphore/components/ember-semaphore","msg-overlay/components/ember-semaphore")
define.alias("ember-wormhole/components/ember-wormhole","msg-overlay/components/ember-wormhole")
define.alias("ember-vector-images/components/lazy-background","msg-overlay/components/lazy-background")
define.alias("ember-vector-images/components/lazy-image","msg-overlay/components/lazy-image")
define.alias("ember-line-clamp/components/line-clamp","msg-overlay/components/line-clamp")
define.alias("artdeco-icons-web/components/linkedin-logo","msg-overlay/components/linkedin-logo")
define("msg-overlay/components/list-bubble-item",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","@ember-decorators/component","ember-cli-pemberly-tracking/utils/tracking","msg-shared/utils/constants","msg-ui/utils/reregister-impression-tracking"],function(e,t,n,s,a,o,i,r,l){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var c,m,d,u,p,b,g,h,y,v,f,_,E,C,w,M,O,S,k,R,T,P
const D=Ember.HTMLBars.template({id:"MMsWj3vy",block:'{"symbols":["@unreadBadgerEnabled","@disbleBulkActions"],"statements":[[7,"div",true],[10,"class","msg-conversation-listitem__link msg-overlay-list-bubble__convo-item-link"],[8],[0,"\\n  "],[7,"div",true],[11,"class",[29,["msg-conversation-card msg-overlay-list-bubble__convo-card display-flex ",[28,"if",[[23,0,["overlaySpaciousSidebarEnabled"]],"pl3"],null]]]],[8],[0,"\\n    "],[5,"msg-ui@selectable-entity",[],[["@onCheckboxClick","@checkboxOnly","@conversation","@disableSelectability","@entitySize","@iconSize"],[[23,0,["onClick"]],[23,0,["isBulkActionsMode"]],[23,0,["conversation"]],[23,2,[]],[28,"if",[[23,0,["overlaySidebarEnabled"]],3,2],null],"small"]]],[0,"\\n\\n    "],[7,"div",true],[11,"class",[29,[[28,"if",[[23,0,["overlaySpaciousSidebarEnabled"]],"msg-overlay-list-bubble__convo-card-content--v2","msg-overlay-list-bubble__convo-card-content"],null]," overflow-hidden ",[28,"if",[[23,0,["overlayBasicSidebarEnabled"]],"pl2"],null]]]],[8],[0,"\\n      "],[7,"div",true],[10,"class","msg-overlay-list-bubble__convo-card-content-wrapper fl"],[8],[0,"\\n        "],[7,"div",true],[10,"class","msg-conversation-card__row"],[8],[0,"\\n          "],[7,"h4",true],[11,"class",[29,["msg-conversation-listitem__participant-names msg-conversation-card__participant-names truncate t-14 t-black ",[28,"if",[[23,0,["isConvoUnread"]],"t-bold","t-normal"],null]]]],[8],[0,"\\n"],[4,"if",[[23,0,["conversation","isConversationWithAdvertiser"]]],null,{"statements":[[0,"              "],[1,[28,"t",["i18n_conversation_names","msg-overlay/components/list-bubble-item"],[["names"],[[23,0,["conversation","participantNames"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["conversation","isManyToManyConvo"]]],null,{"statements":[[0,"              "],[1,[28,"if",[[23,0,["conversation","name"]],[23,0,["conversation","name"]],[28,"if",[[23,0,["enableGroupChatIdentity"]],[28,"t",["i18n_conversation_names","msg-overlay/components/list-bubble-item"],[["names"],[[28,"msg-ui@participant-names-with-self",[[23,0,["conversation"]],true],null]]]],[28,"t",["i18n_conversation_names","msg-overlay/components/list-bubble-item"],[["names"],[[23,0,["conversation","participantNames"]]]]]],null]],null],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"              "],[1,[28,"t",["i18n_participant_full_name","msg-overlay/components/list-bubble-item"],[["name"],[[23,0,["conversation","participantNames"]]]]],false],[0,"\\n            "]],"parameters":[]}]],"parameters":[]}],[0,"          "],[9],[0,"\\n"],[4,"if",[[28,"global-helpers@and",[[23,0,["overlaySidebarEnabled"]],[23,0,["conversation","latestEvent","createdAt"]]],null]],null,{"statements":[[0,"            "],[7,"time",true],[11,"class",[29,["msg-overlay-list-bubble-item__time-stamp ",[28,"if",[[23,0,["overlaySpaciousSidebarEnabled"]],"t-14","t-12"],null]," ",[28,"if",[[23,0,["conversation","read"]],"t-normal t-black--light","t-bold t-black"],null]]]],[8],[0,"\\n"],[4,"if",[[23,0,["createdAtIsToday"]]],null,{"statements":[[0,"                "],[1,[28,"ember-cli-pemberly-i18n@format-time",[[23,0,["conversation","latestEvent","createdAt"]]],[["format","useTimeZone"],["fmt_hm",true]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                "],[1,[28,"ember-cli-pemberly-i18n@format-date",[[23,0,["conversation","latestEvent","createdAt"]]],[["format","useTimeZone"],[[28,"if",[[28,"msg-ui@is-current-year",[[23,0,["conversation","latestEvent","createdAt"]]],null],"fmt_md_medium","fmt_mdy_medium"],null],true]]],false],[0,"\\n"]],"parameters":[]}],[0,"            "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[0,"            "],[7,"div",true],[10,"class","pl6"],[8],[0," "],[9],[0,"\\n"]],"parameters":[]}],[0,"        "],[9],[0,"\\n\\n        "],[7,"div",true],[10,"class","msg-conversation-card__row"],[8],[0,"\\n          "],[7,"div",true],[11,"class",[29,[[28,"unless",[[23,0,["twoLineMessageSnippetLayout"]],"truncate"],null]]]],[8],[0,"\\n"],[4,"if",[[23,0,["conversation","shortContextText"]]],null,{"statements":[[0,"              "],[7,"p",true],[10,"class","display-flex align-items-center overflow-hidden t-12 t-bold"],[8],[0,"\\n                "],[7,"span",true],[10,"class","truncate flex-1"],[8],[0,"\\n                  "],[1,[28,"text-view-model@text-view-model",[[23,0,["conversation","shortContextText"]]],null],false],[0,"\\n                "],[9],[0,"\\n              "],[9],[0,"\\n"]],"parameters":[]},null],[0,"            "],[7,"p",true],[11,"class",[29,[[28,"if",[[23,0,["twoLineMessageSnippetLayout"]],"msg-overlay-list-bubble__message-snippet--v2","msg-overlay-list-bubble__message-snippet truncate"],null]," m0 t-black ",[28,"if",[[23,0,["overlaySpaciousSidebarEnabled"]],"t-14","t-12"],null]," ",[28,"if",[[23,0,["isConvoUnread"]],"t-bold","t-normal t-black--light"],null]]]],[8],[0,"\\n              "],[5,"msg-ui@message-snippet",[],[["@conversation","@latestEvent"],[[23,0,["conversation"]],[23,0,["conversation","latestEvent"]]]]],[0,"\\n            "],[9],[0,"\\n          "],[9],[0,"\\n          "],[7,"div",true],[10,"class","msg-conversation-card__conversation-status align-items-center flex-grow-1"],[8],[0,"\\n"],[4,"if",[[23,0,["conversation","muted"]]],null,{"statements":[[0,"              "],[1,[28,"artdeco-icons-web@li-icon",null,[["class","type","size","a11y-text"],["msg-conversation-card__action-icon mute-icon pr2","mute-icon",[28,"if",[[23,0,["isMercado"]],"medium","small"],null],[28,"t",["i18n_convo_is_muted","msg-overlay/components/list-bubble-item"],[["names"],[[23,0,["conversation","participantNames"]]]]]]]],false],[0,"\\n"]],"parameters":[]},null],[4,"if",[[23,0,["isConvoUnread"]]],null,{"statements":[[4,"if",[[28,"global-helpers@or",[[23,0,["showMessageRequestContext"]],[23,1,[]]],null]],null,{"statements":[[0,"                "],[7,"div",true],[10,"class","msg-conversation-card__unread-dot mr1"],[8],[9],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                "],[7,"mark",true],[10,"class","msg-conversation-card__unread-count"],[8],[0,"\\n                  "],[7,"abbr",true],[11,"title",[28,"t",["aria_unread_count","msg-overlay/components/list-bubble-item"],[["unreadCount"],[[23,0,["conversation","unreadCountDisplay"]]]]]],[8],[0,"\\n                    "],[1,[28,"t",["i18n_unread_count","msg-overlay/components/list-bubble-item"],[["unreadCount"],[[23,0,["conversation","unreadCountDisplay"]]]]],false],[0,"\\n                  "],[9],[0,"\\n                "],[9],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[0,"          "],[9],[0,"\\n        "],[9],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/list-bubble-item.hbs"}}),{CONTROL_NAMES:{OVERLAY:I},IMPRESSION_KEYS:{CONVERSATION:x},LIX:{ENABLE_GROUP_CHAT_IDENTITY:A},MODULE_KEYS:{OVERLAY_CONVERSATION_LIST:N},KEYCODES:{ENTER:L,SPACEBAR:B}}=r.default
let z=(c=(0,o.tagName)("div"),m=(0,o.classNames)("msg-overlay-list-bubble__convo-item"),d=(0,o.classNameBindings)("overlayBasicSidebarEnabled:msg-overlay-list-bubble__convo-item--v2","overlaySpaciousSidebarEnabled:msg-overlay-list-bubble__convo-item--v3"),u=(0,o.attributeBindings)("tabindex","role"),p=Ember.inject.service("msg-overlay-manager@msg-overlay-manager"),b=Ember.inject.service("lix"),g=Ember.inject.service("router"),h=Ember.inject.service("tracking"),y=Ember.computed("conversation.isPendingMessageRequest","conversation.isDeclinedMessageRequest"),v=Ember.computed.not("conversation.read").readOnly(),f=Ember.computed.or("showSelectableItem","isBulkActionsMode"),_=Ember.computed("conversation.isPendingMessageRequest","conversation.isDeclinedMessageRequest","conversation.shortContextText"),E=Ember.computed("conversation.latestEvent.createdAt"),C=Ember.computed("overlaySidebarEnabled","conversation.shortContextText"),c(w=m(w=d(w=u(w=(M=class extends Ember.Component{constructor(){super(...arguments);(0,t.default)(this,"msgOverlay",O,this);(0,t.default)(this,"lix",S,this);(0,t.default)(this,"router",k,this);(0,t.default)(this,"tracking",R,this);(0,n.default)(this,"data-test-msg-overlay-list-bubble-item",!0);(0,n.default)(this,"tabindex","0");(0,n.default)(this,"role","button");(0,t.default)(this,"isConvoUnread",T,this);(0,t.default)(this,"showCheckbox",P,this)}get controlName(){return Ember.get(this,"conversation.isPendingMessageRequest")?"overlay.view_message_request_conversation":Ember.get(this,"conversation.isDeclinedMessageRequest")?"overlay.view_declined_message_request_conversation":I.VIEW_MESSAGE}get showMessageRequestContext(){return(Ember.get(this,"conversation.isPendingMessageRequest")||Ember.get(this,"conversation.isDeclinedMessageRequest"))&&Ember.get(this,"conversation.shortContextText")}get createdAtIsToday(){return Ember.get(this,"conversation.latestEvent.createdAt")>(new Date).setHours(0,0,0,0)}get twoLineMessageSnippetLayout(){return this.overlaySidebarEnabled&&!Ember.get(this,"conversation.shortContextText")}init(){super.init()
this.tracking.setupTrackableComponent(this)
l.default.call(this,this.router,this.registerImpressionTracking.bind(this))
const e=this.lix.getTreatment("voyager.web.messaging-overlay-sidebar")
Ember.setProperties(this,{enableGroupChatIdentity:this.lix.getTreatmentIsEnabled(A),isMercado:this.lix.getTreatmentIsEnabled("voyager.web.infraux-mercado-theme"),overlaySidebarEnabled:"basic"===e||"spacious"===e,overlaySpaciousSidebarEnabled:"spacious"===e,overlayBasicSidebarEnabled:"basic"===e})}onImpression(){this.tracking.fireTrackingPayload(x,{moduleKey:N,conversations:[{objectUrn:Ember.get(this,"conversation.computedBackendUrn"),trackingId:(0,i.generateTrackingId)()}],participantPresenceStatuses:Ember.get(this,"conversation.participantPresenceStatuses")})
this.hasActiveSearch&&this.trackSearchImpression(this.conversation,this.index)}click(){this.isBulkActionsMode?this.onClick():this.openBubble&&this.openBubble(this.conversation)}keyDown(e){if(e.keyCode===L||e.keyCode===B){e.preventDefault()
if(this.isBulkActionsMode)this.onClick()
else{this.tracking.fireInteractionEvent(this.controlName)
this.openBubble(this.conversation)}}}contextMenu(){this.tracking.fireInteractionEvent("overlay.conversation_right_click")}},O=(0,s.default)(M.prototype,"msgOverlay",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),S=(0,s.default)(M.prototype,"lix",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),k=(0,s.default)(M.prototype,"router",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),R=(0,s.default)(M.prototype,"tracking",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(M.prototype,"controlName",[y],Object.getOwnPropertyDescriptor(M.prototype,"controlName"),M.prototype),T=(0,s.default)(M.prototype,"isConvoUnread",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),P=(0,s.default)(M.prototype,"showCheckbox",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(M.prototype,"showMessageRequestContext",[_],Object.getOwnPropertyDescriptor(M.prototype,"showMessageRequestContext"),M.prototype),(0,s.default)(M.prototype,"createdAtIsToday",[E],Object.getOwnPropertyDescriptor(M.prototype,"createdAtIsToday"),M.prototype),(0,s.default)(M.prototype,"twoLineMessageSnippetLayout",[C],Object.getOwnPropertyDescriptor(M.prototype,"twoLineMessageSnippetLayout"),M.prototype),M))||w)||w)||w)||w)
e.default=z
Ember._setComponentTemplate(D,z)})
define("msg-overlay/components/list-bubble-search",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","@ember-decorators/component","msg-shared/utils/scroll-blocker-helper","infinite-scroll/components/infinite-scroll-container","msg-ui/utils/search-history-helper","msg-shared/utils/constants","ember-batcher","global-helpers/helpers/name","global-utils/utils/ember-cli-search-typeahead-utils"],function(e,t,n,s,a,o,i,r,l,c,m,d,u){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var p,b,g,h,y,v,f,_,E,C,w,M,O,S,k,R,T,P,D,I,x,A,N,L,B,z,j,F,q,U,H,V,K,Y,G,W,J,X,Q,$,Z,ee,te,ne,se,ae,oe,ie,re,le,ce
const me=Ember.HTMLBars.template({id:"a7nVA0EC",block:'{"symbols":["searchHistory","index","conversation","index","connection","index","dropdown","&default","@showSearchInput"],"statements":[[4,"if",[[23,9,[]]],null,{"statements":[[0,"  "],[7,"div",true],[11,"class","msg-overlay-list-bubble-search__input-container"],[8],[0,"\\n"],[0,"  "],[7,"label",true],[10,"class","a11y-text"],[10,"for","msg-overlay-list-bubble-search__search-typeahead-input"],[8],[0,"\\n    "],[1,[28,"t",["i18n_a11y_search_hint_text","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n  "],[9],[0,"\\n  "],[1,[28,"artdeco-icons-web@li-icon",null,[["type","class","size"],["search-icon","msg-overlay-list-search__search-icon","small"]]],false],[0,"\\n  "],[1,[28,"input",null,[["id","class","placeholder","value","input","insert-newline","focusIn","focusOut","autocomplete"],["msg-overlay-list-bubble-search__search-typeahead-input",[28,"concat",["msg-overlay-list-bubble-search__search-typeahead-input",[28,"if",[[23,0,["suggestedFilter"]]," mb0"],null]],null],[28,"t",["i18n_find_a_connection","msg-overlay/components/list-bubble-search"],null],[23,0,["searchTerm"]],[28,"action",[[23,0,[]],"onInputChange"],null],[28,"action",[[23,0,[]],"onInputEnterKeyRelease"],null],[28,"action",[[23,0,[]],"onInputFocusIn"],null],[28,"action",[[23,0,[]],"onInputFocusOut"],null],"off"]]],false],[0,"\\n  "],[5,"artdeco-dropdown@artdeco-dropdown",[],[["@class","@placement","@justification","@isOpen","@onVisibilityChange"],["msg-overlay-list-bubble__filters-dropdown","bottom","right",[23,0,["isConvoFiltersDropdownOpen"]],[28,"action",[[23,0,[]],"toggleConvoFilters"],null]]],{"statements":[[0,"\\n    "],[6,[23,7,["dropdown-trigger"]],[],[["@class","@tabindex"],["msg-overlay-list-bubble__filters-btn","0"]],{"statements":[[0,"\\n      "],[1,[28,"artdeco-icons-web@li-icon",null,[["type","size","a11y-text"],["filter-icon","small",[28,"t",["i18n_filter_messages_by","msg-overlay/components/list-bubble-search"],null]]]],false],[0,"\\n    "]],"parameters":[]}],[0,"\\n    "],[6,[23,7,["dropdown-content"]],[],[["@classNames","@arrowDir"],["msg-overlay-list-bubble__filters-dropdown-content","right"]],{"statements":[[0,"\\n      "],[7,"ul",true],[8],[0,"\\n        "],[7,"li",true],[10,"class","msg-overlay-list-bubble__filters-dropdown-content-list-item"],[8],[0,"\\n"],[0,"          "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@selected","@itemSelected"],[[28,"if",[[23,0,["currentConvosFilter"]],false,true],null],[28,"action",[[23,0,[]],"applyFilter",""],null]]],{"statements":[[0,"\\n            "],[1,[28,"t",["i18n_all_messages","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n          "]],"parameters":[]}],[0,"\\n        "],[9],[0,"\\n        "],[7,"li",true],[10,"class","msg-overlay-list-bubble__filters-dropdown-content-list-item"],[8],[0,"\\n          "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@selected","@itemSelected"],[[28,"global-helpers@eq",[[23,0,["currentConvosFilter"]],"ARCHIVED"],null],[28,"action",[[23,0,[]],"applyFilter","ARCHIVED"],null]]],{"statements":[[0,"\\n            "],[1,[28,"t",["i18n_archived","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n          "]],"parameters":[]}],[0,"\\n        "],[9],[0,"\\n        "],[7,"li",true],[10,"class","msg-overlay-list-bubble__filters-dropdown-content-list-item"],[8],[0,"\\n          "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@selected","@itemSelected"],[[28,"global-helpers@eq",[[23,0,["currentConvosFilter"]],"CONNECTIONS"],null],[28,"action",[[23,0,[]],"applyFilter","CONNECTIONS"],null]]],{"statements":[[0,"\\n            "],[1,[28,"t",["i18n_connections","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n          "]],"parameters":[]}],[0,"\\n        "],[9],[0,"\\n        "],[7,"li",true],[10,"class","msg-overlay-list-bubble__filters-dropdown-content-list-item"],[8],[0,"\\n          "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@selected","@itemSelected"],[[28,"global-helpers@eq",[[23,0,["currentConvosFilter"]],"UNREAD"],null],[28,"action",[[23,0,[]],"applyFilter","UNREAD"],null]]],{"statements":[[0,"\\n            "],[1,[28,"t",["i18n_unread","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n          "]],"parameters":[]}],[0,"\\n        "],[9],[0,"\\n        "],[7,"li",true],[10,"class","msg-overlay-list-bubble__filters-dropdown-content-list-item"],[8],[0,"\\n          "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@selected","@itemSelected"],[[28,"global-helpers@eq",[[23,0,["currentConvosFilter"]],"INMAIL"],null],[28,"action",[[23,0,[]],"applyFilter","INMAIL"],null]]],{"statements":[[0,"\\n            "],[1,[28,"t",["i18n_inmail","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n          "]],"parameters":[]}],[0,"\\n        "],[9],[0,"\\n        "],[7,"li",true],[10,"class","msg-overlay-list-bubble__filters-dropdown-content-list-item"],[8],[0,"\\n          "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@selected","@itemSelected"],[[28,"global-helpers@eq",[[23,0,["currentConvosFilter"]],"BLOCKED"],null],[28,"action",[[23,0,[]],"applyFilter","BLOCKED"],null]]],{"statements":[[0,"\\n            "],[1,[28,"t",["i18n_spam","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n          "]],"parameters":[]}],[0,"\\n        "],[9],[0,"\\n      "],[9],[0,"\\n    "]],"parameters":[]}],[0,"\\n  "]],"parameters":[7]}],[0,"\\n  "],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[23,0,["currentConvosFilter"]]],null,{"statements":[[4,"if",[[23,0,["unreadBadgerEnabled"]]],null,{"statements":[[0,"    "],[14,8,[[28,"hash",null,[["filterSection"],[[28,"component",["dummy-yield-wrapper@dummy-yield-wrapper"],null]]]]]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"   "],[7,"div",true],[10,"class","msg-overlay-list-bubble__selected-filters t-12"],[8],[0,"\\n      "],[7,"button",false],[12,"class","msg-overlay-list-bubble__selected-filters-remove artdeco-button artdeco-button--1 artdeco-button--muted artdeco-button--circle"],[12,"type","button"],[3,"on",["click",[28,"fn",[[23,0,["clearFilters"]]],null]]],[8],[0,"\\n        "],[1,[28,"artdeco-icons-web@li-icon",null,[["type","size","a11y-text"],["cancel-icon","small",[28,"t",["i18n_remove_filter_v2","msg-overlay/components/list-bubble-search"],[["filter"],[[23,0,["currentConvosFilter"]]]]]]]],false],[0,"\\n      "],[9],[0,"\\n\\n      "],[1,[28,"t",["i18n_filtered_to","msg-overlay/components/list-bubble-search"],[["filter"],[[23,0,["currentConvosFilter"]]]]],false],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]}]],"parameters":[]},null],[0,"\\n"],[4,"if",[[23,0,["isSearchLoading"]]],null,{"statements":[[0,"  "],[5,"artdeco-loader@artdeco-loader",[],[["@size","@class"],["xsmall","msg-search-form__search-loader"]]],[0,"\\n"]],"parameters":[]},null],[4,"if",[[23,0,["hasActiveSearch"]]],null,{"statements":[[0,"  "],[5,"artdeco-button@artdeco-button",[],[["@icon","@size","@circle","@class","@text","@type","@click"],["cancel-icon","small",true,"msg-search-form__cancel-search",[28,"t",["i18n_cancel_search","msg-overlay/components/list-bubble-search"],null],"tertiary",[28,"action",[[23,0,[]],[23,0,["clearActiveSearch"]]],null]]]],[0,"\\n"]],"parameters":[]},null],[7,"div",true],[11,"class",[29,["msg-overlay-list-bubble-search-content\\n\\n    ",[28,"unless",[[23,0,["shouldShowSearchContent"]]," hidden"],null]]]],[8],[0,"\\n"],[4,"if",[[23,0,["searchPerformed"]]],null,{"statements":[[4,"if",[[23,0,["shouldShowSearchLoadingView"]]],null,{"statements":[[0,"      "],[5,"artdeco-loader@artdeco-loader",[],[["@size","@class"],["small","msg-overlay-list-bubble-search__loading-state"]]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"      "],[7,"div",false],[12,"class","msg-overlay-list-bubble-search__search-result-container"],[3,"action",[[23,0,[]],"noOp"],[["on"],["mouseDown"]]],[8],[0,"\\n"],[4,"if",[[23,0,["shouldShowNoResultView"]]],null,{"statements":[[0,"          "],[7,"div",true],[10,"class","msg-overlay-list-bubble-search__no-result-container text-align-center"],[8],[0,"\\n            "],[7,"div",true],[10,"class","msg-overlay-list-bubble__illustration msg-overlay-list-bubble-search__no-result-illustration"],[8],[9],[0,"\\n            "],[7,"p",true],[10,"class","ph2 t-14 t-black t-normal"],[8],[0,"\\n              "],[1,[28,"t",["i18n_we_did_not_find_anything","msg-overlay/components/list-bubble-search"],[["searchTerm"],[[23,0,["searchTerm"]]]]],false],[0,"\\n            "],[9],[0,"\\n          "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["displayedConnections","length"]]],null,{"statements":[[0,"            "],[7,"header",true],[10,"class","msg-overlay-list-bubble__list-header msg-overlay-list-bubble-search__result-header"],[8],[0,"\\n              "],[7,"h5",true],[10,"class","msg-overlay-list-bubble__list-header-title t-12 t-black--light t-bold truncate"],[8],[0,"\\n                "],[1,[28,"t",["i18n_connections_matched","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n              "],[9],[0,"\\n            "],[9],[0,"\\n            "],[7,"ul",true],[10,"class","msg-overlay-list-bubble-search__connection-search-result-list"],[8],[0,"\\n"],[4,"each",[[23,0,["displayedConnections"]]],null,{"statements":[[0,"                "],[5,"msg-overlay@search-connection-item",[[12,"class",[28,"if",[[28,"global-helpers@eq",[[23,6,[]],[23,0,["highlightedItemIndex"]]],null],"msg-overlay-list-bubble-search__list-item--selected"],null]]],[["@itemIndex","@profile","@caption","@onClick","@onMouseMove"],[[23,6,[]],[23,5,["miniProfile"]],[28,"global-helpers@or",[[23,5,["subtext"]],[23,5,["caption"]]],null],[28,"fn",[[23,0,["onConnectionSearchResultSelect"]],[23,5,["miniProfile"]]],null],[28,"fn",[[23,0,["onListItemMouseMove"]],[23,6,[]],false],null]]]],[0,"\\n"]],"parameters":[5,6]},null],[0,"            "],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"if",[[23,0,["matchedConversations","length"]]],null,{"statements":[[0,"            "],[7,"header",true],[10,"class","msg-overlay-list-bubble__list-header msg-overlay-list-bubble-search__result-header"],[8],[0,"\\n              "],[7,"h5",true],[10,"class","msg-overlay-list-bubble__list-header-title t-12 t-black--light t-bold truncate"],[8],[0,"\\n                "],[1,[28,"t",["i18n_conversation_history","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n              "],[9],[0,"\\n            "],[9],[0,"\\n            "],[7,"div",true],[10,"class","msg-overlay-list-bubble-search__content-search-result-list"],[8],[0,"\\n"],[4,"each",[[23,0,["matchedConversations"]]],null,{"statements":[[0,"                "],[5,"msg-overlay@list-bubble-item",[],[["@class","@conversation","@openBubble","@mouseMove","@disbleBulkActions","@hasActiveSearch","@index","@trackSearchImpression"],[[28,"concat",["msg-overlay-list-bubble-search__list-item",[28,"if",[[28,"global-helpers@eq",[[23,4,[]],[23,0,["highlightedConversationResultIndex"]]],null]," msg-overlay-list-bubble__convo-item--selected"],null]],null],[23,3,[]],[28,"action",[[23,0,[]],"onContentSearchResultSelect"],null],[28,"action",[[23,0,[]],"onListItemMouseMove",[23,4,[]],true],null],true,true,[23,4,[]],[28,"action",[[23,0,[]],"onSearchImpression"],null]]]],[0,"\\n"]],"parameters":[3,4]},null],[0,"            "],[9],[0,"\\n"]],"parameters":[]},null]],"parameters":[]}],[0,"      "],[9],[0,"\\n"]],"parameters":[]}]],"parameters":[]},{"statements":[[4,"if",[[23,0,["searchHistories","length"]]],null,{"statements":[[4,"unless",[[23,0,["searchHistoryDisabled"]]],null,{"statements":[[0,"        "],[7,"div",false],[12,"class","msg-overlay-list-bubble-search__history-container"],[3,"action",[[23,0,[]],"noOp"],[["on"],["mouseDown"]]],[8],[0,"\\n          "],[7,"header",true],[10,"class","msg-overlay-list-bubble-search__result-header display-flex align-items-center ph3"],[8],[0,"\\n            "],[7,"h5",true],[10,"class","t-12 t-black--light t-bold truncate flex-grow-1"],[8],[0,"\\n              "],[1,[28,"t",["i18n_recent_searches","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n            "],[9],[0,"\\n"],[4,"if",[[23,0,["shouldShowClearConfirmBtn"]]],null,{"statements":[[0,"              "],[7,"button",false],[12,"class",[28,"concat",[[28,"if",[[28,"global-helpers@eq",[[23,0,["searchHistories","length"]],[23,0,["highlightedItemIndex"]]],null],"msg-overlay-list-bubble-search__clear-button--selected "],null],"msg-overlay-list-bubble__clear-search-history-confirm-btn msg-overlay-list-bubble__clear-search-history-btn--fadein t-12 t-black--light t-bold flex-grow-0 flex-shrink-zero"],null]],[12,"type","button"],[3,"action",[[23,0,[]],"onSearchHistoryClearConfirmButtonClick"]],[8],[0,"\\n                "],[1,[28,"t",["i18n_clear","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n              "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[0,"              "],[5,"artdeco-button@artdeco-button",[],[["@class","@circle","@color","@size","@click","@icon"],[[28,"concat",[[28,"if",[[28,"global-helpers@eq",[[23,0,["searchHistories","length"]],[23,0,["highlightedItemIndex"]]],null],"msg-overlay-list-bubble-search__clear-button--selected "],null],"msg-overlay-list-bubble-search__clear-button msg-overlay-list-bubble__clear-search-history-btn msg-overlay-list-bubble-search__list-item flex-grow-0 flex-shrink-zero"],null],true,"muted",1,[28,"action",[[23,0,[]],"onSearchHistoryClearButtonClick"],null],"cancel-icon"]]],[0,"\\n              "],[7,"span",true],[10,"class","visually-hidden"],[8],[0,"\\n                "],[1,[28,"t",["i18n_clear_search_history","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n              "],[9],[0,"\\n"]],"parameters":[]}],[0,"          "],[9],[0,"\\n          "],[7,"ul",true],[10,"class","msg-overlay-list-bubble-search__history-list"],[8],[0,"\\n"],[4,"each",[[23,0,["searchHistories"]]],null,{"statements":[[4,"if",[[28,"global-helpers@eq",[[23,1,["searchType"]],"PEOPLE"],null]],null,{"statements":[[0,"                "],[5,"msg-overlay@search-connection-item",[[12,"class",[28,"if",[[28,"global-helpers@eq",[[23,2,[]],[23,0,["highlightedItemIndex"]]],null],"msg-overlay-list-bubble-search__list-item--selected"],null]]],[["@profile","@caption","@onClick","@onMouseMove"],[[23,1,["historyInfo","profile"]],[23,1,["historyInfo","profile","occupation"]],[28,"fn",[[23,0,["onProfileSearchHistoryClick"]],[23,1,["historyInfo","profile"]]],null],[28,"fn",[[23,0,["onListItemMouseMove"]],[23,2,[]],false],null]]]],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                "],[5,"msg-overlay@query-history-item",[[12,"class",[28,"if",[[28,"global-helpers@eq",[[23,2,[]],[23,0,["highlightedItemIndex"]]],null],"msg-overlay-list-bubble-search__list-item--selected"],null]]],[["@queryKeyword","@onClick","@onMouseMove"],[[23,1,["historyInfo","parameters","firstObject","value"]],[28,"fn",[[23,0,["onKeywordSearchHistoryClick"]],[23,1,["historyInfo","parameters","firstObject","value"]]],null],[28,"fn",[[23,0,["onListItemMouseMove"]],[23,2,[]],false],null]]]],[0,"\\n"]],"parameters":[]}]],"parameters":[1,2]},null],[0,"          "],[9],[0,"\\n        "],[9],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[0,"        "],[7,"div",true],[10,"class","msg-overlay-list-bubble-search__history-placeholder-container text-align-center"],[8],[0,"\\n          "],[7,"div",true],[10,"class","msg-overlay-list-bubble__illustration msg-overlay-list-bubble-search__history-placeholder-illustration"],[8],[9],[0,"\\n          "],[7,"p",true],[10,"class","t-14 t-black t-normal ph2"],[8],[0,"\\n            "],[1,[28,"t",["i18n_search_your_messages","msg-overlay/components/list-bubble-search"],null],false],[0,"\\n          "],[9],[0,"\\n        "],[9],[0,"\\n"]],"parameters":[]}]],"parameters":[]}],[9]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/list-bubble-search.hbs"}}),{KEYCODES:de,SEARCH_HISTORY_TYPES:ue,PAGEVIEW_KEYS:pe,CONTROL_INTERACTION_KEYS:be,LIX:{ENABLE_UNREAD_BADGER:ge,ENABLE_OLYMPUS_KEYS:he}}=c.default,ye=".msg-overlay-list-bubble-search__search-typeahead-input",ve=".msg-overlay-list-bubble-search-content",fe=".msg-overlay-list-bubble-search__list-item",_e={CONNECTION:{RESULT_LIST:"matchedConnections",COMPLETED_STATE:"connectionSearchPerformed",RESULT_LOAD_TRACKING_EVENT:pe.OVERLAY_SEARCH_CONNECTION_LOAD},CONVERSATION:{RESULT_LIST:"matchedConversations",COMPLETED_STATE:"contentSearchPerformed",RESULT_LOAD_TRACKING_EVENT:pe.OVERLAY_SEARCH_CONTENT_LOAD}}
let Ee=(p=(0,o.classNames)("msg-overlay-list-bubble-search"),b=(0,o.classNameBindings)("shouldShowSearchContent:msg-overlay-list-bubble-search--search-content-visible"),g=(0,o.tagName)("div"),h=Ember.inject.service("store"),y=Ember.inject.service("lix"),v=Ember.inject.service("i18n"),f=Ember.inject.service("tracking"),_=Ember.inject.service("global-services@a11y-notification"),E=Ember.inject.service("global-services@local-storage"),C=Ember.inject.service("msg-data@data-manager"),w=Ember.inject.service("msg-badge-manager@msg-badge-manager"),M=Ember.inject.service("search-services@search-tracking-v2"),O=Ember.computed.or("connectionSearchPerformed","contentSearchPerformed").readOnly(),S=Ember.computed.alias("inputHasFocus").readOnly(),k=Ember.computed.alias("collection.metadata").readOnly(),R=Ember.computed("matchedConnections").readOnly(),T=Ember.computed("displayedResultsLength","connectionSearchPerformed","contentSearchPerformed").readOnly(),P=Ember.computed("displayedConnections","matchedConversations").readOnly(),D=Ember.computed("searchPerformed","displayedResultsLength","searchHistories").readOnly(),I=Ember.computed("highlightedItemIndex","displayedConnections").readOnly(),x=Ember._action,A=Ember._action,N=Ember._action,L=Ember._action,B=Ember._action,z=Ember._action,j=Ember._action,F=Ember._action,q=Ember._action,U=Ember._action,H=Ember._action,V=Ember._action,K=Ember._action,Y=Ember._action,G=Ember._action,W=Ember._action,J=Ember._action,p(X=b(X=g(X=(Q=class extends r.default{constructor(){super(...arguments);(0,t.default)(this,"store",$,this);(0,t.default)(this,"lix",Z,this);(0,t.default)(this,"i18n",ee,this);(0,t.default)(this,"tracking",te,this);(0,t.default)(this,"a11yNotification",ne,this);(0,t.default)(this,"localStorage",se,this);(0,t.default)(this,"msgDataManager",ae,this);(0,t.default)(this,"msgBadgeManager",oe,this);(0,t.default)(this,"searchTrackingV2",ie,this);(0,n.default)(this,"isConvoFiltersDropdownOpen",!1);(0,n.default)(this,"currentConvosFilter","");(0,n.default)(this,"highlightedItemIndex",-1);(0,n.default)(this,"searchField",void 0);(0,n.default)(this,"inputHasFocus",!1);(0,n.default)(this,"connectionSearchPerformed",!1);(0,n.default)(this,"contentSearchPerformed",!1);(0,n.default)(this,"shouldShowClearConfirmBtn",!1);(0,n.default)(this,"eventTarget",ve);(0,n.default)(this,"scrollingElementSelector",ve);(0,n.default)(this,"triggerOnInsert",!1);(0,n.default)(this,"hasMoreContentSearchResults",!1);(0,t.default)(this,"searchPerformed",re,this);(0,t.default)(this,"shouldShowSearchContent",le,this);(0,t.default)(this,"searchTrackingMetadata",ce,this);(0,n.default)(this,"shouldShowSearchLoadingView",!1)}get displayedConnections(){return this.matchedConnections.slice(0,3)}get shouldShowNoResultView(){return 0===this.displayedResultsLength&&this.connectionSearchPerformed&&this.contentSearchPerformed}get displayedResultsLength(){return Ember.get(this,"displayedConnections.length")+Ember.get(this,"matchedConversations.length")}get listItemCount(){return this.searchPerformed?this.displayedResultsLength:Ember.get(this,"searchHistories.length")+1}get highlightedConversationResultIndex(){return this.highlightedItemIndex-Ember.get(this,"displayedConnections.length")}init(){super.init(...arguments)
this.matchedConnections=[]
this.matchedConversations=[]
Ember.set(this,"searchHistoryDisabled",this.lix.getTreatmentIsEnabled("voyager.web.messaging-remove-recent-searches"))
this.searchHistoryDisabled||this._loadSearchHistory()
this.tracking.setupTrackableComponent(this)
this.tracking.setupPageViewComponent(this)
Ember.setProperties(this,{unreadBadgerEnabled:this.lix.getTreatmentIsEnabled(ge),useOlympusKeys:this.lix.getTreatmentIsEnabled(he)})}didInsertElement(){super.didInsertElement(...arguments)
Ember.setProperties(this,{searchField:this.element.querySelector(ye),scrollSection:this.element.querySelector(ve)})
this.tracking.firePageViewEvent(pe.OVERLAY_SEARCH);(0,i.default)(this,ve)}_performSearch(e){Ember.set(this,"shouldShowSearchLoadingView",!0)
const t=(new Date).getTime()
this.lastRequestTime=t
const n=[this.msgDataManager.fetchTypeaheadResults(e).then(e=>this._handleSearchResults(_e.CONNECTION,e,t))],{currentConvosFilter:s}=this,a={q:"search",keywords:e,createdBefore:Date.now()}
"ARCHIVED"===s?a.folders=[s]:s&&(a.filters=[s])
this.resetInfiniteScroll()
const o=this.msgDataManager.initConversationCollection({name:`${e}-${Date.now()}`,initialQuery:a}),i=o.load(a).then(e=>this._handleSearchResults(_e.CONVERSATION,e,t))
Ember.set(this,"collection",o)
n.push(i)
Ember.RSVP.all(n).then(()=>{if(!this.isDestroying){Ember.set(this,"shouldShowSearchLoadingView",!1)
0===this.displayedResultsLength?this.tracking.firePageViewEvent(pe.OVERLAY_SEARCH_NO_RESULT):this.a11yNotify("i18n_a11y_navigate_search_results")}})}_handleSearchTermChange(e){const t=e?e.trim():"",n=t.length>0
Ember.set(this,"highlightedItemIndex",-1)
n?this.debounceTask("_performSearch",t,150):this._clearSearchResults()}_handleSearchResults(e,t,n){if(n!==this.lastRequestTime||0===Ember.get(this,"searchTerm.length"))return Ember.RSVP.reject()
Ember.setProperties(this,{[e.COMPLETED_STATE]:!0,[e.RESULT_LIST]:t})
e===_e.CONVERSATION&&Ember.setProperties(this,{hasMoreContentSearchResults:t.length>0})
t.length>0&&this.tracking.firePageViewEvent(e.RESULT_LOAD_TRACKING_EVENT)
const s=e===_e.CONVERSATION?"i18n_a11y_conversation_results_found":"i18n_a11y_connection_results_found"
this.a11yNotify(s,{resultsLength:t.length})
return Ember.RSVP.resolve()}_clearSearchResults(){Ember.setProperties(this,{connectionSearchPerformed:!1,matchedConnections:[],contentSearchPerformed:!1,matchedConversations:[],shouldShowClearConfirmBtn:!1})}_clearInputField(){Ember.set(this,"searchTerm","")
this._handleSearchTermChange("")}_moveSelectedItem(e){const t=this.listItemCount
if(0===t)return
const n=this.highlightedItemIndex
let s
s=-1===n?1===e?0:t-1:(n+e+t)%t
Ember.set(this,"highlightedItemIndex",s)
this._a11yNotifyItemSelectionChange()
const{scrollSection:a}=this;(0,m.mutateDOM)(()=>{if(!this.isDestroying)if(0===s)a.scrollTop=0
else{const e=this.element.querySelectorAll(fe)[s]
if(e){const t=e.offsetTop,n=t+e.offsetHeight
n>a.offsetHeight+a.scrollTop?a.scrollTop=n-a.offsetHeight:t<a.scrollTop&&(a.scrollTop=t)}}})}_a11yNotifyItemSelectionChange(){const{highlightedItemIndex:e}=this
if(this.searchPerformed){const{displayedConnections:t}=this
if(e<t.length)this.a11yNotify("i18n_a11y_search_result_connection_fullname",{connectionName:(0,d.getName)(Ember.get(t[e],"miniProfile"))})
else{const{highlightedConversationResultIndex:e}=this,t=this.matchedConversations[e]
let n
n=Ember.get(t,"isSpinMail")?"i18n_a11y_search_result_spinmail_from_name":Ember.get(t,"isManyToManyConvo")?"i18n_a11y_search_result_conversation_names":"i18n_a11y_search_result_participant_full_name"
this.a11yNotify(n,{names:Ember.get(t,"participantNames")})}}else{const{searchHistories:t}=this
if(t.length>0){const n=t.objectAt(e),s=Ember.get(n,"searchType")
"PEOPLE"===s?this.a11yNotify("i18n_a11y_search_result_connection_fullname",{connectionName:(0,d.getName)(Ember.get(n,"historyInfo.profile"))}):s===ue.QUERY&&this.a11yNotification.setTextInLiveRegion(Ember.get(n,"historyInfo.parameters.firstObject.value"))}}}_openConnectionSearchResult(e){this._clearInputField()
this.openNewConversation({recipients:[e]})
this.tracking.fireInteractionEvent(be.SELECT_CONNECTION_SEARCH_RESULT)
this.searchHistoryDisabled||(0,l.saveProfileSearchHistory)(this.store,e).then(()=>this._loadSearchHistory())}_openContentSearchResult(e){const{searchTerm:t}=this,n=this.useOlympusKeys?Ember.get(e,"backendUrn"):Ember.get(e,"computedBackendUrn"),s=Ember.get(this,"collection.metadata")
this._clearInputField()
this.openBubble(e)
this.tracking.fireInteractionEvent(be.SELECT_CONTENT_SEARCH_RESULT)
this.searchTrackingV2.trackAction("MESSAGING_VIEW_RESULT",(0,u.getResultTrackingInfo)(e,Ember.get(s,"rawSearchId"),Ember.get(s,"trackingIdMap")[n]))
this.searchHistoryDisabled||(0,l.saveQuerySearchHistory)(this.store,t).then(()=>this._loadSearchHistory())}_selectProfileSearchHistory(e){this.openNewConversation({recipients:[e]})
this.tracking.fireInteractionEvent(be.SELECT_SEARCH_HISTORY_MEMBER);(0,l.saveProfileSearchHistory)(this.store,e).then(this._loadSearchHistory.bind(this))}_selectKeywordSearchHistory(e){Ember.set(this,"searchTerm",e)
this._handleSearchTermChange(e);(0,l.saveQuerySearchHistory)(this.store,e).then(this._loadSearchHistory.bind(this))
this.tracking.fireInteractionEvent(be.SELECT_SEARCH_HISTORY_CONTENT)}keyDown(e){if(this.inputHasFocus)switch(e.keyCode){case de.UP_ARROW:this._moveSelectedItem(-1)
e.preventDefault()
break
case de.DOWN_ARROW:this._moveSelectedItem(1)
e.preventDefault()
break
case de.ESC:this._clearInputField()}}_loadSearchHistory(){(0,l.fetchSearchHistory)(this.store).then(e=>{this.isDestroying||Ember.set(this,"searchHistories",e)}).catch(e=>{if(!e||!e.isAdapterError)throw e
Ember.set(this,"searchHistories",[])})}infiniteScroll(){return this.hasMoreContentSearchResults?this.collection.loadMore().then(e=>{const t=e.length
this.isDestroying||Ember.setProperties(this,{matchedConversations:this.collection.data,hasMoreContentSearchResults:t})
return Ember.RSVP.resolve(t)}):Ember.RSVP.resolve(!1)}a11yNotify(e,t){const n=this.i18n.lookupTranslation("component","msg-overlay@list-bubble-search",e)
this.a11yNotification.setTextInLiveRegion(n([t]))}toggleConvoFilters(e){Ember.set(this,"isConvoFiltersDropdownOpen",e)
this.tracking.fireInteractionEvent("overlay.filter_messages_by","SHORT_PRESS")}applyFilter(e){Ember.set(this,"isConvoFiltersDropdownOpen",!1)
if(this.currentConvosFilter!==e){this.onFilterApply(e)
this._handleSearchTermChange(this.searchTerm)}}clearFilters(){this.onClearFilters()
this._handleSearchTermChange(this.searchTerm)}onInputFocusIn(){Ember.set(this,"inputHasFocus",!0);(0,m.mutateDOM)(()=>{this.isDestroying||Ember.set(this,"scrollSection.scrollTop",0)})
this.a11yNotify("i18n_a11y_recent_searches_hint_text",{historyLength:Ember.get(this,"searchHistories.length")})
this.tracking.fireInteractionEvent(be.FOCUS_SEARCH_BOX)}onInputFocusOut(){Ember.setProperties(this,{inputHasFocus:!1,shouldShowClearConfirmBtn:!1})}onInputEnterKeyRelease(){const{highlightedItemIndex:e}=this
if(-1!==e){if(this.searchPerformed){if(e<Ember.get(this,"displayedConnections.length")){const t=this.displayedConnections[e]
this._openConnectionSearchResult(Ember.get(t,"miniProfile"))}else{const e=this.matchedConversations[this.highlightedConversationResultIndex]
this._openContentSearchResult(e)}}else if(Ember.get(this,"searchHistories.length")===this.highlightedItemIndex)this.shouldShowClearConfirmBtn?this.onSearchHistoryClearConfirmButtonClick():this.onSearchHistoryClearButtonClick()
else if(!this.searchHistoryDisabled){const t=this.searchHistories.objectAt(e),n=Ember.get(t,"searchType")
if(n===ue.PROFILE){const e=Ember.get(t,"historyInfo.profile")
this._selectProfileSearchHistory(e)}else if(n===ue.QUERY){const e=Ember.get(t,"historyInfo.parameters.firstObject.value")
this._selectKeywordSearchHistory(e)}}}else{const{searchTerm:e}=this
e&&!this.searchHistoryDisabled&&(0,l.saveQuerySearchHistory)(this.store,e).then(()=>this._loadSearchHistory())}}clearInputField(){this._clearInputField()
this.tracking.fireInteractionEvent(be.CANCEL_SEARCH)}onConnectionSearchResultSelect(e){this._openConnectionSearchResult(e)}onContentSearchResultSelect(e){this._openContentSearchResult(e)}onInputChange(){this._handleSearchTermChange(this.searchTerm)}onListItemMouseMove(e,t,n){if(this.lastX!==n.screenX||this.lastY!==n.screenY){Ember.set(this,"highlightedItemIndex",t?e+Ember.get(this,"displayedConnections.length"):e)
this.lastX=n.screenX
this.lastY=n.screenY}}onProfileSearchHistoryClick(e){this._selectProfileSearchHistory(e)}onKeywordSearchHistoryClick(e){this._selectKeywordSearchHistory(e)}onSearchHistoryClearButtonClick(){Ember.set(this,"shouldShowClearConfirmBtn",!0)}onSearchHistoryClearConfirmButtonClick(){Ember.setProperties(this,{searchHistories:[],shouldShowClearConfirmBtn:!1});(0,l.clearSearchHistory)(this.store)
this.tracking.fireInteractionEvent(be.CLEAR_SEARCH_HISTORY)}onSearchImpression(e,t){const n=this.useOlympusKeys?Ember.get(e,"backendUrn"):Ember.get(e,"computedBackendUrn"),s=(0,u.getResultTrackingInfo)(e,Ember.get(this,"searchTrackingMetadata.rawSearchId"),Ember.get(this,"searchTrackingMetadata.trackingIdMap")[n],{row:t+1,column:1})
this.searchTrackingV2.trackImpression(s,{duration:0,resultSize:{height:0,width:0},visibleHeight:0,visibleTime:0})}noOp(){}},$=(0,s.default)(Q.prototype,"store",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Z=(0,s.default)(Q.prototype,"lix",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ee=(0,s.default)(Q.prototype,"i18n",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),te=(0,s.default)(Q.prototype,"tracking",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ne=(0,s.default)(Q.prototype,"a11yNotification",[_],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),se=(0,s.default)(Q.prototype,"localStorage",[E],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ae=(0,s.default)(Q.prototype,"msgDataManager",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),oe=(0,s.default)(Q.prototype,"msgBadgeManager",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ie=(0,s.default)(Q.prototype,"searchTrackingV2",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),re=(0,s.default)(Q.prototype,"searchPerformed",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),le=(0,s.default)(Q.prototype,"shouldShowSearchContent",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ce=(0,s.default)(Q.prototype,"searchTrackingMetadata",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(Q.prototype,"displayedConnections",[R],Object.getOwnPropertyDescriptor(Q.prototype,"displayedConnections"),Q.prototype),(0,s.default)(Q.prototype,"shouldShowNoResultView",[T],Object.getOwnPropertyDescriptor(Q.prototype,"shouldShowNoResultView"),Q.prototype),(0,s.default)(Q.prototype,"displayedResultsLength",[P],Object.getOwnPropertyDescriptor(Q.prototype,"displayedResultsLength"),Q.prototype),(0,s.default)(Q.prototype,"listItemCount",[D],Object.getOwnPropertyDescriptor(Q.prototype,"listItemCount"),Q.prototype),(0,s.default)(Q.prototype,"highlightedConversationResultIndex",[I],Object.getOwnPropertyDescriptor(Q.prototype,"highlightedConversationResultIndex"),Q.prototype),(0,s.default)(Q.prototype,"toggleConvoFilters",[x],Object.getOwnPropertyDescriptor(Q.prototype,"toggleConvoFilters"),Q.prototype),(0,s.default)(Q.prototype,"applyFilter",[A],Object.getOwnPropertyDescriptor(Q.prototype,"applyFilter"),Q.prototype),(0,s.default)(Q.prototype,"clearFilters",[N],Object.getOwnPropertyDescriptor(Q.prototype,"clearFilters"),Q.prototype),(0,s.default)(Q.prototype,"onInputFocusIn",[L],Object.getOwnPropertyDescriptor(Q.prototype,"onInputFocusIn"),Q.prototype),(0,s.default)(Q.prototype,"onInputFocusOut",[B],Object.getOwnPropertyDescriptor(Q.prototype,"onInputFocusOut"),Q.prototype),(0,s.default)(Q.prototype,"onInputEnterKeyRelease",[z],Object.getOwnPropertyDescriptor(Q.prototype,"onInputEnterKeyRelease"),Q.prototype),(0,s.default)(Q.prototype,"clearInputField",[j],Object.getOwnPropertyDescriptor(Q.prototype,"clearInputField"),Q.prototype),(0,s.default)(Q.prototype,"onConnectionSearchResultSelect",[F],Object.getOwnPropertyDescriptor(Q.prototype,"onConnectionSearchResultSelect"),Q.prototype),(0,s.default)(Q.prototype,"onContentSearchResultSelect",[q],Object.getOwnPropertyDescriptor(Q.prototype,"onContentSearchResultSelect"),Q.prototype),(0,s.default)(Q.prototype,"onInputChange",[U],Object.getOwnPropertyDescriptor(Q.prototype,"onInputChange"),Q.prototype),(0,s.default)(Q.prototype,"onListItemMouseMove",[H],Object.getOwnPropertyDescriptor(Q.prototype,"onListItemMouseMove"),Q.prototype),(0,s.default)(Q.prototype,"onProfileSearchHistoryClick",[V],Object.getOwnPropertyDescriptor(Q.prototype,"onProfileSearchHistoryClick"),Q.prototype),(0,s.default)(Q.prototype,"onKeywordSearchHistoryClick",[K],Object.getOwnPropertyDescriptor(Q.prototype,"onKeywordSearchHistoryClick"),Q.prototype),(0,s.default)(Q.prototype,"onSearchHistoryClearButtonClick",[Y],Object.getOwnPropertyDescriptor(Q.prototype,"onSearchHistoryClearButtonClick"),Q.prototype),(0,s.default)(Q.prototype,"onSearchHistoryClearConfirmButtonClick",[G],Object.getOwnPropertyDescriptor(Q.prototype,"onSearchHistoryClearConfirmButtonClick"),Q.prototype),(0,s.default)(Q.prototype,"onSearchImpression",[W],Object.getOwnPropertyDescriptor(Q.prototype,"onSearchImpression"),Q.prototype),(0,s.default)(Q.prototype,"noOp",[J],Object.getOwnPropertyDescriptor(Q.prototype,"noOp"),Q.prototype),Q))||X)||X)||X)
e.default=Ee
Ember._setComponentTemplate(me,Ee)})
define("msg-overlay/components/list-bubble",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","msg-overlay/components/base-bubble","msg-shared/utils/constants","msg-ui/utils/realtime-onboarding","global-utils/utils/is-browser"],function(e,t,n,s,a,o,i,r,l){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var c,m,d,u,p,b,g,h,y,v,f,_,E,C,w,M,O,S,k,R,T,P,D,I,x,A,N,L,B,z,j,F,q,U,H,V,K,Y,G,W,J,X,Q,$,Z,ee,te,ne,se,ae,oe,ie,re,le,ce,me,de,ue,pe,be,ge,he,ye,ve,fe,_e,Ee,Ce,we,Me,Oe,Se,ke,Re,Te,Pe,De,Ie,xe,Ae,Ne,Le,Be,ze,je,Fe,qe,Ue,He,Ve,Ke,Ye,Ge,We,Je,Xe,Qe,$e,Ze,et,tt,nt,st
const at=Ember.HTMLBars.template({id:"32tn4uI9",block:'{"symbols":["assetLoader","assetLoader","conversation","messageRequestConversation","messageRequestConversation","widget","widget","listBubbleSearch","dropdown"],"statements":[[7,"div",false],[12,"tabindex","-1"],[12,"class",[29,["msg-overlay-list-bubble\\n",[28,"if",[[23,0,["overlaySpaciousSidebarEnabled"]],"msg-overlay-list-bubble--wide"],null],"\\n",[28,"if",[[23,0,["isMinimized"]],"msg-overlay-list-bubble--is-minimized"],null],"\\n",[28,"if",[[23,0,["isExpanded"]],"msg-overlay-list-bubble--expanded"],null],"\\n",[28,"if",[[23,0,["isInMinimizeTransition"]],"msg-overlay-list-bubble--during-transition"],null],"\\n",[28,"if",[[28,"global-helpers@and",[[23,0,["isExpanded"]],[23,0,["overlaySidebarEnabled"]]],null],"msg-overlay-list-bubble--expanded-tall"],null]," ml4"]]],[3,"msg-shared@block-scrolling"],[3,"on",["transitionend",[28,"ember-simple-set-helper@set",[[23,0,[]],"isInMinimizeTransition",false],null]]],[8],[0,"\\n  "],[7,"header",false],[12,"class",[28,"concat",["msg-overlay-bubble-header",[28,"if",[[23,0,["hasBadge"]]," msg-overlay-bubble-header--inverse msg-overlay-bubble-header--is-badged"],null]],null]],[12,"data-control-name",[28,"if",[[23,0,["isMinimized"]],"overlay.maximize_connection_list_bar","overlay.minimize_connection_list_bar"],null]],[3,"action",[[23,0,[]],"toggleMinimize",[28,"ember-cli-pemberly-tracking@tracking",null,[["control-name"],[[28,"if",[[23,0,["isMinimized"]],"overlay.maximize_connection_list_bar","overlay.minimize_connection_list_bar"],null]]]]]],[8],[0,"\\n    "],[5,"msg-overlay@active-status-onboarding",[],[[],[]]],[0,"\\n    "],[7,"section",true],[10,"class","msg-overlay-bubble-header__details flex-row align-items-center"],[8],[0,"\\n      "],[5,"presence@entity-with-presence",[],[["@alt","@title","@miniProfile","@size"],[[23,0,["authenticatedUser","miniProfile","fullName"]],[23,0,["authenticatedUser","miniProfile","fullName"]],[23,0,["authenticatedUser","miniProfile"]],1]]],[0,"\\n      "],[7,"button",true],[10,"class","msg-overlay-bubble-header__button truncate ml2"],[10,"type","button"],[8],[0,"\\n        "],[7,"h4",true],[11,"class",[29,["truncate t-14 t-bold ",[28,"if",[[23,0,["lightHeaderBackground"]],"t-black","t-white"],null]]]],[8],[0,"\\n          "],[7,"span",true],[10,"aria-hidden","true"],[8],[0,"\\n            "],[1,[28,"t",["messaging","msg-overlay/components/list-bubble"],null],false],[0,"\\n          "],[9],[0,"\\n          "],[7,"span",true],[10,"class","visually-hidden"],[8],[0,"\\n            "],[1,[28,"if",[[23,0,["isMinimized"]],[28,"t",["a11y_open_overlay","msg-overlay/components/list-bubble"],null],[28,"t",["a11y_minimize_overlay","msg-overlay/components/list-bubble"],null]],null],false],[0,"\\n          "],[9],[0,"\\n        "],[9],[0,"\\n      "],[9],[0,"\\n"],[4,"if",[[23,0,["unreadBadgerEnabled"]]],null,{"statements":[[4,"if",[[23,0,["msgBadgeManager","unreadConversationsCount"]]],null,{"statements":[[0,"          "],[7,"mark",true],[10,"class","msg-overlay-bubble-header__unread-count"],[10,"aria-hidden","true"],[8],[0,"\\n            "],[7,"abbr",true],[11,"title",[28,"t",["a11y_unread_conversations","msg-overlay/components/list-bubble"],[["count"],[[23,0,["msgBadgeManager","unreadConversationsCount"]]]]]],[8],[0,"\\n              "],[1,[28,"t",["unread_conversations_count","msg-overlay/components/list-bubble"],[["count"],[[23,0,["msgBadgeManager","unreadConversationsCount"]]]]],false],[0,"\\n            "],[9],[0,"\\n          "],[9],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"if",[[23,0,["hasBadge"]]],null,{"statements":[[0,"        "],[7,"mark",true],[10,"class","msg-overlay-bubble-header__unread-count"],[10,"aria-hidden","true"],[8],[0,"\\n          "],[7,"abbr",true],[11,"title",[28,"t",["a11y_unseen_messages","msg-overlay/components/list-bubble"],[["count"],[[23,0,["msgOverlayService","unseenMsgCount"]]]]]],[8],[0,"\\n            "],[1,[23,0,["msgOverlayService","unseenMsgCount"]],false],[0,"\\n          "],[9],[0,"\\n        "],[9],[0,"\\n      "]],"parameters":[]},null]],"parameters":[]}],[4,"if",[[23,0,["enableRealtimeConnectionStatus"]]],null,{"statements":[[0,"        "],[1,[28,"artdeco-icons-web@li-icon",null,[["type","class"],["flash-on-icon",[28,"concat",["msg-overlay-bubble-header__realtime-indicator ",[23,0,["realtimeStatusClassName"]]],null]]]],false],[0,"\\n"]],"parameters":[]},null],[0,"    "],[9],[0,"\\n    "],[7,"section",true],[10,"class","msg-overlay-bubble-header__controls display-flex"],[8],[0,"\\n"],[0,"      "],[5,"artdeco-button@artdeco-button",[[12,"data-control-name","overlay.compose_message"]],[["@type","@text","@color","@circle","@size","@icon","@class","@click"],["tertiary",[28,"t",["a11y_compose","msg-overlay/components/list-bubble"],null],[28,"if",[[23,0,["lightHeaderBackground"]],"muted","inverse"],null],true,1,"compose-icon","msg-overlay-bubble-header__control msg-overlay-bubble-header__control--new-convo-btn",[28,"action",[[23,0,[]],"createNewConvoPVE"],null]]]],[0,"\\n\\n"],[0,"      "],[5,"artdeco-dropdown@artdeco-dropdown",[],[["@isOpen","@onVisibilityChange","@placement","@justification","@onClick","@shouldTriggerRetainFocus"],[[23,0,["isHeaderDropdownMenuOpen"]],[28,"ember-simple-set-helper@set",[[23,0,[]],"isHeaderDropdownMenuOpen"],null],[23,0,["headerDropdownMenuPlacement"]],"right",[28,"action",[[23,0,[]],"stopEvtPropagation"],null],false]],{"statements":[[0,"\\n        "],[6,[23,9,["dropdown-trigger"]],[[12,"data-control-name","overlay.dropdown_menu"]],[["@class","@onClick"],[[29,["artdeco-button artdeco-button--1 artdeco-button--circle artdeco-button--tertiary ",[28,"if",[[23,0,["lightHeaderBackground"]],"artdeco-button--muted","artdeco-button--inverse"],null]]],[28,"action",[[23,0,[]],"onDropdownToggle"],null]]],{"statements":[[0,"\\n          "],[1,[28,"artdeco-icons-web@li-icon",null,[["a11y-text","type","size","color"],[[28,"t",["i18n_dropdown_menu_description","msg-overlay/components/list-bubble"],null],"ellipsis-horizontal-icon","small",true]]],false],[0,"\\n        "]],"parameters":[]}],[0,"\\n        "],[7,"div",true],[10,"class","msg-overlay-bubble-header__dropdown-container"],[8],[0,"\\n          "],[6,[23,9,["dropdown-content"]],[],[["@arrowDir"],["right"]],{"statements":[[0,"\\n            "],[7,"ul",true],[10,"class","white-space-nowrap"],[8],[0,"\\n"],[4,"if",[[23,0,["isOverlayNavLixEnabled"]]],null,{"statements":[[0,"                "],[5,"artdeco-dropdown@artdeco-dropdown-item",[[12,"data-control-name","overlay.view_expanded_inbox"]],[["@itemSelected"],[[28,"action",[[23,0,[]],"goToMessagingPillar"],null]]],{"statements":[[0,"\\n                  "],[1,[28,"t",["i18n_view_expanded_inbox","msg-overlay/components/list-bubble"],null],false],[0,"\\n                "]],"parameters":[]}],[0,"\\n"]],"parameters":[]},null],[0,"              "],[5,"artdeco-dropdown@artdeco-dropdown-item",[[12,"data-control-name","overlay.compose_group"]],[["@itemSelected"],[[28,"action",[[23,0,[]],"openNewGroupConvoBubble"],null]]],{"statements":[[0,"\\n                "],[1,[28,"t",["i18n_new_group_conversation","msg-overlay/components/list-bubble"],null],false],[0,"\\n              "]],"parameters":[]}],[0,"\\n"],[4,"if",[[23,0,["showManageConversationsButtonInHeaderDropdown"]]],null,{"statements":[[0,"                "],[5,"artdeco-dropdown@artdeco-dropdown-item",[[12,"data-control-name","overlay.enter_bulk_selection"]],[["@itemSelected"],[[28,"action",[[23,0,[]],"enterBulkActionsMode"],null]]],{"statements":[[0,"\\n                  "],[7,"div",true],[10,"class","display-flex align-items-center"],[8],[0,"\\n                    "],[7,"span",true],[8],[1,[28,"t",["i18n_manage_conversations","msg-overlay/components/list-bubble"],null],false],[9],[0,"\\n"],[4,"if",[[28,"global-helpers@and",[[23,0,["enableBulkActionsOnboarding"]],[23,0,["bulkActionsOnboardingWidgetTrackingToken"]]],null]],null,{"statements":[[0,"                      "],[5,"msg-ui@onboarding-notification",[[12,"class","pl4"]],[["@showNotification","@renderInline"],[true,true]]],[0,"\\n"]],"parameters":[]},null],[0,"                  "],[9],[0,"\\n                "]],"parameters":[]}],[0,"\\n"]],"parameters":[]},null],[0,"              "],[5,"artdeco-dropdown@artdeco-dropdown-item",[[12,"data-control-name","overlay.connection_list_settings_from_dropdown"]],[["@itemSelected"],[[28,"action",[[23,0,[]],"openMessagingSettingsModal"],null]]],{"statements":[[0,"\\n                "],[1,[28,"t",["i18n_messaging_settings","msg-overlay/components/list-bubble"],null],false],[0,"\\n              "]],"parameters":[]}],[0,"\\n"],[4,"if",[[23,0,["showMessageRequestInboxInHeaderDropdown"]]],null,{"statements":[[0,"                "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@itemSelected"],[[28,"ember-cli-pemberly-tracking@tracked-action",["overlay.overflow_view_message_request_inbox",[28,"action",[[23,0,[]],"openMessageRequestConversationList"],null]],null]]],{"statements":[[0,"\\n                  "],[1,[28,"t",["i18n_message_request_inbox","msg-overlay/components/list-bubble"],null],false],[0,"\\n                "]],"parameters":[]}],[0,"\\n"]],"parameters":[]},null],[4,"if",[[23,0,["showPendingMessageRequestConversationList"]]],null,{"statements":[[0,"                "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@itemSelected"],[[28,"ember-cli-pemberly-tracking@tracked-action",["overlay.view_declined_message_requests",[28,"action",[[23,0,[]],"openDeclinedMessageRequestConversationList"],null]],null]]],{"statements":[[0,"\\n                  "],[1,[28,"t",["i18n_declined_message_requests","msg-overlay/components/list-bubble"],null],false],[0,"\\n                "]],"parameters":[]}],[0,"\\n"]],"parameters":[]},null],[0,"              "],[5,"artdeco-dropdown@artdeco-dropdown-item",[],[["@itemSelected"],[[23,0,["openAwayMessageSettingsModal"]]]],{"statements":[[0,"\\n                "],[1,[28,"if",[[23,0,["msgDataManager","awayMessageSettings","length"]],[28,"t",["i18n_update_away_message","msg-overlay/components/list-bubble"],null],[28,"t",["i18n_set_away_message","msg-overlay/components/list-bubble"],null]],null],false],[0,"\\n              "]],"parameters":[]}],[0,"\\n            "],[9],[0,"\\n          "]],"parameters":[]}],[0,"\\n        "],[9],[0,"\\n      "]],"parameters":[9]}],[0,"\\n\\n"],[4,"if",[[28,"global-helpers@and",[[23,0,["enableBulkActionsOnboarding"]],[23,0,["bulkActionsOnboardingWidgetTrackingToken"]]],null]],null,{"statements":[[0,"        "],[5,"msg-ui@onboarding-notification",[],[["@showNotification","@isColorWhite"],[true,[28,"global-helpers@not",[[23,0,["lightHeaderBackground"]]],null]]]],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[0,"      "],[5,"artdeco-button@artdeco-button",[[3,"ember-cli-pemberly-tracking@track-interaction",[[28,"if",[[23,0,["isMinimized"]],"overlay_maximize_inbox","overlay_minimize_inbox"],null]]]],[["@type","@text","@color","@circle","@size","@icon","@class","@click"],["tertiary",[28,"if",[[23,0,["isMinimized"]],[28,"t",["a11y_open_overlay","msg-overlay/components/list-bubble"],null],[28,"t",["a11y_minimize_overlay","msg-overlay/components/list-bubble"],null]],null],[28,"if",[[23,0,["lightHeaderBackground"]],"muted","inverse"],null],true,1,[28,"if",[[23,0,["isMinimized"]],"chevron-up-icon","chevron-down-icon"],null],"msg-overlay-bubble-header__control msg-overlay-bubble-header__control--new-convo-btn",[23,0,["toggleMinimize"]]]]],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"],[4,"if",[[23,0,["shouldRenderContent"]]],null,{"statements":[[4,"if",[[23,0,["isBulkActionsMode"]]],null,{"statements":[[0,"      "],[5,"msg-ui@primitives/bulk-actions-panel",[],[["@selectedConversations","@willExecuteBulkAction","@didExecuteBulkAction","@onExitBulkActionsMode","@isOverlay"],[[23,0,["selectedConversations"]],[28,"action",[[23,0,[]],"willExecuteBulkAction"],null],[28,"action",[[23,0,[]],"didExecuteBulkAction"],null],[28,"action",[[23,0,[]],"onExitBulkActionsMode"],null],true]]],[0,"\\n"]],"parameters":[]},null],[0,"\\n    "],[5,"msg-overlay@list-bubble-search",[],[["@openNewConversation","@openBubble","@currentConvosFilter","@onFilterApply","@onClearFilters","@showSearchInput"],[[23,0,["newConversation"]],[23,0,["openBubble"]],[23,0,["currentConvosFilter"]],[23,0,["applyFilter"]],[23,0,["clearFilters"]],[23,0,["showSearchInput"]]]],{"statements":[[0,"\\n      "],[6,[23,8,["filterSection"]],[],[[],[]],{"statements":[[0,"\\n        "],[5,"msg-ui@selected-filter",[],[["@count","@clearFilter","@currentFilter","@trackingPrefix","@disabled"],[[23,0,["msgBadgeManager","unreadConversationsCount"]],[23,0,["clearFilters"]],[23,0,["currentConvosFilter"]],"overlay.",[23,0,["isBulkActionsMode"]]]]],[0,"\\n      "]],"parameters":[]}],[0,"\\n    "]],"parameters":[8]}],[0,"\\n\\n"],[4,"if",[[23,0,["showKindnessReminder"]]],null,{"statements":[[0,"      "],[5,"msg-ui@inbox-onboarding-widget",[[12,"class","msg-overlay-list-bubble__kindness-reminder"]],[["@simpleLayout","@legoConfig","@text","@primaryActionText","@onImpression","@onDismiss","@onPrimary"],[true,[23,0,["kindnessReminderLegoConfig"]],[28,"t",["i18n_kindness_reminder_text","msg-overlay/components/list-bubble"],null],[28,"t",["i18n_kindness_reminder_learn_more","msg-overlay/components/list-bubble"],null],[23,0,["impressionKindnessReminder"]],[28,"ember-cli-pemberly-tracking@tracked-action",["overlay.dismiss_kindness_banner",[28,"ember-simple-set-helper@set",[[23,0,[]],"enableKindnessReminder",false],null]],null],[23,0,["clickKindnessReminder"]]]]],[0,"\\n"]],"parameters":[]},null],[0,"\\n    "],[5,"msg-ui@away-message-reminder-banner",[],[[],[]]],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[4,"unless",[[23,0,["isBulkActionsMode"]]],null,{"statements":[[4,"if",[[23,0,["currentConvosFilter"]]],null,{"statements":[[4,"if",[[23,0,["unreadBadgerEnabled"]]],null,{"statements":[[4,"if",[[28,"global-helpers@and",[[23,0,["showUnreadFilterOnboarding"]],[23,0,["msgBadgeManager","unreadConversationsCount"]]],null]],null,{"statements":[[0,"          "],[5,"msg-ui@inbox-onboarding-widget",[],[["@title","@text","@legoConfig","@onDismiss","@onPrimary","@primaryActionText"],[[28,"t",["i18n_unread_filter_onboarding_title","msg-overlay/components/list-bubble"],null],[28,"t",["i18n_unread_filter_onboarding_text","msg-overlay/components/list-bubble"],null],[23,0,["unreadFilterOnboardingLegoConfig"]],[28,"fn",[[28,"mut",[[23,0,["showUnreadFilterOnboarding"]]],null],false],null],[28,"fn",[[28,"mut",[[23,0,["showUnreadFilterOnboarding"]]],null],false],null],[28,"t",["i18n_ok","msg-overlay/components/list-bubble"],null]]]],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null]],"parameters":[]},{"statements":[[4,"if",[[28,"global-helpers@and",[[23,0,["suggestedFilter"]],[23,0,["showUnreadBadgerOnboarding"]]],null]],null,{"statements":[[0,"      "],[5,"msg-ui@inbox-onboarding-widget",[],[["@title","@text","@legoConfig","@onDismiss","@onPrimary","@primaryActionText"],[[28,"t",["i18n_unread_badger_onboarding_title","msg-overlay/components/list-bubble"],null],[28,"t",["i18n_unread_badger_onboarding_text","msg-overlay/components/list-bubble"],null],[23,0,["unreadBadgerOnboardingLegoConfig"]],[28,"fn",[[28,"mut",[[23,0,["showUnreadBadgerOnboarding"]]],null],false],null],[28,"fn",[[23,0,["onUnreadBadgerOnboardingPrimaryAction"]]],null],[28,"t",["i18n_view_unread","msg-overlay/components/list-bubble"],[["count"],[[23,0,["msgBadgeManager","unreadConversationsCount"]]]]]]],{"statements":[[0,"\\n        "],[6,[23,7,["leftSection"]],[],[[],[]],{"statements":[[0,"\\n          "],[7,"div",true],[11,"class",[28,"if",[[28,"global-helpers@gte",[[23,0,["msgBadgeManager","unreadConversationsCount"]],100],null],"pr3","pr1"],null]],[8],[0,"\\n            "],[5,"artdeco-notification-badge@artdeco-notification-badge",[],[["@number","@showCount"],[[23,0,["msgBadgeManager","unreadConversationsCount"]],true]],{"statements":[[0,"\\n              "],[1,[28,"artdeco-icons-web@li-icon",null,[["type"],["messages-icon"]]],false],[0,"\\n            "]],"parameters":[]}],[0,"\\n          "],[9],[0,"\\n        "]],"parameters":[]}],[0,"\\n      "]],"parameters":[7]}],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[28,"global-helpers@and",[[23,0,["authenticatedUser","isPremiumUser"]],[23,0,["showAwayMessageOnboarding"]]],null]],null,{"statements":[[0,"      "],[5,"msg-ui@inbox-onboarding-widget",[],[["@title","@text","@legoConfig","@onDismiss","@onPrimary","@primaryActionText"],[[28,"t",["i18n_away_message_onboarding_title","msg-overlay/components/list-bubble"],null],[28,"t",["i18n_away_message_onboarding_text","msg-overlay/components/list-bubble"],null],[23,0,["awayMessageOnboardingLegoConfig"]],[28,"fn",[[28,"mut",[[23,0,["showAwayMessageOnboarding"]]],null],false],null],[28,"fn",[[28,"mut",[[23,0,["awayMessageSettingsModalIsOpen"]]],null],true],null],[28,"t",["i18n_set_away_message","msg-overlay/components/list-bubble"],null]]],{"statements":[[0,"\\n        "],[6,[23,6,["leftSection"]],[],[[],[]],{"statements":[[0,"\\n          "],[1,[28,"artdeco-icons-web@li-icon",null,[["type","size","color"],["linkedin-bug","21dp","premium"]]],false],[0,"\\n        "]],"parameters":[]}],[0,"\\n      "]],"parameters":[6]}],[0,"\\n    "]],"parameters":[]},null]],"parameters":[]}]],"parameters":[]}]],"parameters":[]},null],[0,"\\n"],[4,"if",[[23,0,["showSuggestedFilter"]]],null,{"statements":[[0,"    "],[5,"msg-ui@suggested-filter",[],[["@count","@suggestedFilter","@applyFilter","@disabled"],[[23,0,["msgBadgeManager","unreadConversationsCount"]],[23,0,["suggestedFilter"]],[23,0,["applyFilter"]],[23,0,["isBulkActionsMode"]]]]],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[0,"  "],[7,"section",true],[11,"class",[29,["scrollable msg-overlay-list-bubble__content\\n\\n      ",[28,"if",[[23,0,["showDefaultConversationList"]]," msg-overlay-list-bubble__content--scrollable"],null]]]],[8],[0,"\\n"],[4,"if",[[23,0,["shouldRenderContent"]]],null,{"statements":[[0,"      "],[7,"div",true],[10,"class","msg-overlay-list-bubble-default-conversation-container"],[8],[0,"\\n"],[4,"if",[[23,0,["showFailedState"]]],null,{"statements":[[0,"          "],[7,"div",true],[10,"class","msg-overlay-list-bubble__failed-to-connect-container text-align-center"],[8],[0,"\\n            "],[7,"h3",true],[10,"class","t-16 t-black--light t-normal ph3 pb5"],[8],[0,"\\n              "],[1,[28,"t",["i18n_failed_connect","msg-overlay/components/list-bubble"],null],false],[0,"\\n            "],[9],[0,"\\n            "],[5,"artdeco-button@artdeco-button",[[12,"data-control-name","overlay.retry"]],[["@click","@type","@text"],[[28,"action",[[23,0,[]],[23,0,["refetchOverlayData"]]],null],"secondary",[28,"t",["i18n_try_again","msg-overlay/components/list-bubble"],null]]]],[0,"\\n          "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["dataLoaded"]]],null,{"statements":[[4,"if",[[23,0,["showAbiFlow"]]],null,{"statements":[[0,"            "],[5,"msg-overlay@abi-flow",[],[["@isAbiComplete"],[[23,0,["isAbiComplete"]]]]],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["showNoviceState"]]],null,{"statements":[[0,"            "],[5,"msg-overlay@novice-state",[],[["@memberConnections","@newConversation"],[[23,0,["memberConnections"]],[28,"action",[[23,0,[]],"createNewConvoPVE"],null]]]],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["hasNoFilteredConversations"]]],null,{"statements":[[0,"            "],[7,"div",true],[10,"class","msg-overlay-list-bubble__illustration msg-overlay-list-bubble__no-results-image"],[8],[9],[0,"\\n            "],[7,"p",true],[10,"class","text-align-center mb4"],[8],[0,"\\n              "],[1,[28,"t",["i18n_no_results_found","msg-overlay/components/list-bubble"],null],false],[0,"\\n            "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["showMessageRequestConversationList"]]],null,{"statements":[[4,"if",[[23,0,["showDeclinedMessageRequestConversationList"]]],null,{"statements":[[0,"              "],[5,"msg-ui@message-request-list-header",[],[["@isDeclinedList","@goBack"],[true,[28,"ember-cli-pemberly-tracking@tracked-action",["overlay.back_to_message_requests_from_declined_messages",[28,"ember-simple-set-helper@set",[[23,0,[]],"showDeclinedMessageRequestConversationList",false],null]],null]]]],[0,"\\n"],[4,"if",[[23,0,["showNoDeclinedMessageRequestView"]]],null,{"statements":[[0,"                "],[7,"div",true],[8],[0,"\\n                  "],[7,"div",true],[10,"class","msg-overlay-list-bubble__illustration msg-overlay-list-bubble__no-message-request-illustraction"],[8],[9],[0,"\\n                  "],[7,"p",true],[10,"class","text-align-center t-14 t-black ph4"],[8],[0,"\\n                    "],[1,[28,"t",["i18n_no_declined_message_request","msg-overlay/components/list-bubble"],null],false],[0,"\\n                  "],[9],[0,"\\n                "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                "],[7,"div",true],[10,"class","msg-overlay-list-bubble__message-request-conversation-list"],[8],[0,"\\n"],[4,"each",[[23,0,["sortedDeclinedMessageRequestConversations"]]],null,{"statements":[[0,"                    "],[5,"msg-overlay@list-bubble-item",[],[["@class","@conversation","@openBubble","@unreadBadgerEnabled","@disbleBulkActions"],["msg-overlay-list-bubble__convo-item--hoverable msg-message-request-convo-item",[23,5,[]],[23,0,["openBubble"]],[23,0,["unreadBadgerEnabled"]],true]]],[0,"\\n"]],"parameters":[5]},null],[0,"                "],[9],[0,"\\n"]],"parameters":[]}]],"parameters":[]},{"statements":[[0,"              "],[5,"msg-ui@message-request-list-header",[],[["@goBack"],[[28,"ember-cli-pemberly-tracking@tracked-action",["overlay.back_to_inbox_from_requests",[28,"action",[[23,0,[]],"backToInboxFromMessageRequestList"],null]],null]]]],[0,"\\n"],[4,"if",[[23,0,["showNoPendingMessageRequestView"]]],null,{"statements":[[0,"                "],[7,"div",true],[8],[0,"\\n                  "],[7,"div",true],[10,"class","msg-overlay-list-bubble__illustration msg-overlay-list-bubble__no-message-request-illustraction"],[8],[9],[0,"\\n                  "],[7,"p",true],[10,"class","text-align-center t-14 t-black ph4"],[8],[0,"\\n                    "],[1,[28,"t",["i18n_no_pending_message_request","msg-overlay/components/list-bubble"],null],false],[0,"\\n                  "],[9],[0,"\\n                "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[0,"                "],[7,"div",true],[10,"class","msg-overlay-list-bubble__message-request-conversation-list"],[8],[0,"\\n"],[4,"each",[[23,0,["sortedPendingMessageRequestConversations"]]],null,{"statements":[[0,"                    "],[5,"msg-overlay@list-bubble-item",[],[["@class","@conversation","@openBubble","@unreadBadgerEnabled","@disbleBulkActions"],["msg-overlay-list-bubble__convo-item--hoverable msg-message-request-convo-item",[23,4,[]],[23,0,["openBubble"]],[23,0,["unreadBadgerEnabled"]],true]]],[0,"\\n"]],"parameters":[4]},null],[0,"                "],[9],[0,"\\n"]],"parameters":[]}]],"parameters":[]}],[0,"            "],[7,"div",true],[11,"class",[29,["msg-overlay-list-bubble__loader\\n\\n                ",[28,"unless",[[23,0,["isLoading"]]," hidden"],null]]]],[8],[0,"\\n              "],[5,"artdeco-loader@artdeco-loader",[],[["@size"],["small"]]],[0,"\\n            "],[9],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[23,0,["showContextualRecommendations"]]],null,{"statements":[[0,"              "],[5,"msg-overlay@contextual-recommendation-list",[],[["@suggestedRecipients","@openNewConversation"],[[23,0,["suggestedRecipients"]],[23,0,["newConversation"]]]]],[0,"\\n"]],"parameters":[]},null],[4,"if",[[28,"global-helpers@or",[[23,0,["hasConversations"]],[23,0,["pendingMessageRequestBundle"]]],null]],null,{"statements":[[0,"              "],[7,"span",true],[10,"class","visually-hidden"],[8],[0,"\\n                "],[1,[28,"t",["i18n_a11y_infinite_scroll","msg-overlay/components/list-bubble"],null],false],[0,"\\n              "],[9],[0,"\\n"],[4,"if",[[23,0,["showContextualRecommendations"]]],null,{"statements":[[0,"                "],[7,"header",true],[10,"class","msg-overlay-list-bubble__list-header"],[8],[0,"\\n                  "],[7,"h5",true],[10,"class","msg-overlay-list-bubble__list-header-title t-12 t-black--light t-bold truncate"],[8],[0,"\\n                    "],[1,[28,"t",["i18n_messages","msg-overlay/components/list-bubble"],null],false],[0,"\\n                  "],[9],[0,"\\n                "],[9],[0,"\\n"]],"parameters":[]},null],[4,"if",[[23,0,["showMessageRequestBanner"]]],null,{"statements":[[0,"                "],[5,"msg-ui@message-request-banner",[],[["@class","@messageRequestBundle","@openMessageRequestConversationList","@overlaySpaciousSidebarEnabled"],[[29,[[28,"if",[[23,0,["overlayBasicSidebarEnabled"]],"msg-message-request-banner--v2"],null]," ",[28,"if",[[23,0,["overlaySpaciousSidebarEnabled"]],"pl4"],null]]],[23,0,["pendingMessageRequestBundle"]],[28,"ember-cli-pemberly-tracking@tracked-action",["overlay.bundle_view_message_request_inbox",[28,"action",[[23,0,[]],"openMessageRequestConversationList"],null]],null],[23,0,["overlaySpaciousSidebarEnabled"]]]]],[0,"\\n"]],"parameters":[]},null],[0,"              "],[7,"div",true],[10,"class","msg-conversations-container__conversations-list msg-overlay-list-bubble__conversations-list"],[8],[0,"\\n"],[4,"each",[[23,0,["conversations"]]],null,{"statements":[[0,"                  "],[5,"msg-overlay@list-bubble-item",[],[["@class","@conversation","@openBubble","@isBulkActionsMode","@onClick","@unreadBadgerEnabled"],["msg-overlay-list-bubble__convo-item--hoverable",[23,3,[]],[23,0,["openBubble"]],[23,0,["isBulkActionsMode"]],[28,"action",[[23,0,[]],"onListBubbleItemClick",[23,3,[]]],null],[23,0,["unreadBadgerEnabled"]]]]],[0,"\\n"]],"parameters":[3]},null],[0,"              "],[9],[0,"\\n"],[4,"if",[[23,0,["loadMoreError"]]],null,{"statements":[[0,"                "],[7,"div",true],[10,"class","p4 mb6"],[8],[0,"\\n                  "],[5,"artdeco-empty-state@artdeco-empty-state",[],[["@class","@headline","@illustration","@message","@muted"],["msg-conversations-container__load-error",[28,"t",["i18n_oops","msg-overlay/components/list-bubble"],null],"no-connection",[28,"t",["i18n_load_more_error","msg-overlay/components/list-bubble"],null],true]]],[0,"\\n                  "],[5,"artdeco-button@artdeco-button",[[12,"data-control-name","overlay.retry"]],[["@class","@click","@text","@type"],["js-retry-button block mlA mrA",[28,"action",[[23,0,[]],"retryLoadMore"],null],[28,"t",["i18n_try_again","msg-overlay/components/list-bubble"],null],"secondary"]]],[0,"\\n                "],[9],[0,"\\n"]],"parameters":[]},null],[0,"              "],[7,"div",true],[11,"class",[29,["msg-overlay-list-bubble__loader\\n\\n                  ",[28,"unless",[[23,0,["isLoading"]]," hidden"],null]]]],[8],[0,"\\n                "],[5,"artdeco-loader@artdeco-loader",[],[["@size"],["small"]]],[0,"\\n              "],[9],[0,"\\n"]],"parameters":[]},null],[0,"          "]],"parameters":[]}]],"parameters":[]}]],"parameters":[]}]],"parameters":[]}]],"parameters":[]},{"statements":[[0,"          "],[5,"artdeco-loader@artdeco-loader",[],[["@size","@class"],["small","msg-overlay-list-bubble__loading-state"]]],[0,"\\n        "]],"parameters":[]}]],"parameters":[]}],[0,"\\n"],[4,"if",[[23,0,["shouldLoadMoreConversations"]]],null,{"statements":[[0,"          "],[5,"msg-ui@visible-beacon",[],[["@inView"],[[23,0,["loadMore"]]]]],[0,"\\n"]],"parameters":[]},null],[0,"      "],[9],[0,"\\n"]],"parameters":[]},null],[0,"  "],[9],[0,"\\n"],[4,"if",[[23,0,["isMessagingSettingsModalOpen"]]],null,{"statements":[[0,"    "],[5,"asset-loader@deferred-asset-loader",[],[["@bundle"],["msg-shared-modals"]],{"statements":[[0,"\\n"],[4,"if",[[23,2,["state","fulfilled"]]],null,{"statements":[[0,"        "],[5,"msg-shared-modals@msg-settings-modal",[],[["@messagingSettings","@closeModal"],[[23,0,["messagingSettings"]],[28,"ember-simple-set-helper@set",[[23,0,[]],"isMessagingSettingsModalOpen",false],null]]]],[0,"\\n"]],"parameters":[]},null],[0,"    "]],"parameters":[2]}],[0,"\\n"]],"parameters":[]},null],[4,"if",[[23,0,["awayMessageSettingsModalIsOpen"]]],null,{"statements":[[0,"    "],[5,"asset-loader@deferred-asset-loader",[],[["@bundle"],["msg-shared-modals"]],{"statements":[[0,"\\n"],[4,"if",[[23,1,["state","fulfilled"]]],null,{"statements":[[0,"      "],[5,"msg-shared-modals@away-message-settings-modal",[],[["@closeModal"],[[28,"fn",[[28,"mut",[[23,0,["awayMessageSettingsModalIsOpen"]]],null],false],null]]]],[0,"\\n"]],"parameters":[]},null],[0,"    "]],"parameters":[1]}],[0,"\\n"]],"parameters":[]},null],[9]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/list-bubble.hbs"}}),{LIX:{ENABLE_REALTIME_CONNECTION_STATUS:ot,ENABLE_UNREAD_BADGER:it},MESSAGE_COLLECTION_TYPE_NAMES:rt,MESSAGE_REQUEST_STATUS:{MESSAGE_REQUEST_PENDING:lt,MESSAGE_REQUEST_DECLINED:ct},OVERLAY_LS_CONVERSATIONS_FILTER_KEY:mt,OVERLAY:{QUALITY_MEMBER_CONNECTIONS_THRESHOLD:dt},OVERLAY_FILTERS_INTERACTION_EVENTS:ut,PAGEVIEW_KEYS:pt,KINDNESS_REMINDER_LEGO:bt,UNREAD_BADGER_ONBOARDING_LEGO:gt,UNREAD_FILTER_ONBOARDING_LEGO:ht,BULK_ACTIONS_ONBOARDING_LEGO:yt,AWAY_MESSAGE_ONBOARDING_LEGO:vt}=i.default
let ft=(c=Ember.inject.service("authentication@authenticated-user"),m=Ember.inject.service("global-services@badge"),d=Ember.inject.service("global-services@identity-store"),u=Ember.inject.service("lix"),p=Ember.inject.service("tracking"),b=Ember.inject.service("i18n"),g=Ember.inject.service("global-services@window"),h=Ember.inject.service("global-services@a11y-notification"),y=Ember.inject.service("msg-overlay-manager@msg-overlay-manager"),v=Ember.inject.service("msg-badge-manager@msg-badge-manager"),f=Ember.inject.service("global-services@realtime-api"),_=Ember.inject.service("store"),E=Ember.inject.service("global-services@local-storage"),C=Ember.inject.service("lego@resolver"),w=Ember.inject.service("lego@tracking"),M=Ember.inject.service("msg-ui@messaging-user-settings"),O=Ember.inject.service("msg-data@data-manager"),S=Ember.inject.service("router"),k=Ember.computed.alias("msgOverlayService.listBubbleIsMinimized").readOnly(),R=Ember.computed.alias("msgOverlayService.listBubbleIsExpanded").readOnly(),T=Ember.computed("isMinimized","isInMinimizeTransition"),P=Ember.computed("showMessageRequestConversationList","isBulkActionsMode"),D=Ember.computed.not("showMessageRequestConversationList"),I=Ember.computed.not("showMessageRequestConversationList"),x=Ember.computed("currentConvosFilter","suggestedRecipients"),A=Ember.computed("showMessageRequestConversationList","showDeclinedMessageRequestConversationList").readOnly(),N=Ember.computed("showPendingMessageRequestConversationList","sortedPendingMessageRequestConversations.length","isLoading").readOnly(),L=Ember.computed("showDeclinedMessageRequestConversationList","sortedDeclinedMessageRequestConversations.length","isLoading").readOnly(),B=Ember.computed("msgOverlayService.unseenMsgCount","forcedMinimize").readOnly(),z=Ember.computed.or("shouldAlertUser","realtimeMsgNotAutoOpened").readOnly(),j=Ember.computed("hasBadge").readOnly(),F=Ember.computed.reads("conversations.length"),q=Ember.computed.not("hasConversations").readOnly(),U=Ember.computed.bool("currentConvosFilter").readOnly(),H=Ember.computed.not("convosFilterIsEnabled").readOnly(),V=Ember.computed.and("hasNoConversations","convosFilterIsEnabled").readOnly(),K=Ember.computed.gte("numConnections",dt).readOnly(),Y=Ember.computed.not("hasStrongNetwork").readOnly(),G=Ember.computed("hasNoConversations","pendingMessageRequestBundle","hasStrongNetwork","convosFilterIsDisabled").readOnly(),W=Ember.computed("hasNoConversations","pendingMessageRequestBundle","hasWeakNetwork","convosFilterIsDisabled").readOnly(),J=Ember.computed("pendingMessageRequestBundle","showMessageRequestConversationList","currentConvosFilter").readOnly(),X=Ember.computed("currentConvosFilter","isBulkActionsMode","enableKindnessReminder").readOnly(),Q=Ember.computed("pendingMessageRequestConversations.[]").readOnly(),$=Ember.computed("declinedMessageRequestConversations.[]").readOnly(),Z=Ember.computed("realtimeAPI.hasActiveConnection").readOnly(),ee=Ember.computed("isMinimized"),te=Ember.computed("msgBadgeManager.unreadConversationsCount","unreadBadgerEnabled"),ne=Ember.computed("overlaySidebarEnabled","lastSetOfConvosLoaded","isLoading","dataLoaded","loadMoreError"),se=Ember.computed("suggestedFilter","showUnreadBadgerOnboarding","currentConvosFilter"),ae=Ember._action,oe=Ember._action,ie=Ember._action,re=Ember._action,le=Ember._action,ce=Ember._action,me=Ember._action,de=Ember._action,ue=Ember._action,pe=Ember._action,be=Ember._action,ge=Ember._action,he=Ember._action,ye=Ember._action,ve=Ember._action,fe=Ember._action,_e=Ember._action,Ee=Ember._action,Ce=Ember._action,we=Ember._action,Me=Ember._action,Oe=Ember._action,Se=Ember._action,ke=class extends o.default{constructor(){super(...arguments);(0,n.default)(this,"tagName","");(0,t.default)(this,"authenticatedUser",Re,this);(0,t.default)(this,"badgeService",Te,this);(0,t.default)(this,"identityStore",Pe,this);(0,t.default)(this,"lix",De,this);(0,t.default)(this,"tracking",Ie,this);(0,t.default)(this,"i18n",xe,this);(0,t.default)(this,"windowService",Ae,this);(0,t.default)(this,"a11yNotification",Ne,this);(0,t.default)(this,"msgOverlayService",Le,this);(0,t.default)(this,"msgBadgeManager",Be,this);(0,t.default)(this,"realtimeAPI",ze,this);(0,t.default)(this,"store",je,this);(0,t.default)(this,"localStorage",Fe,this);(0,t.default)(this,"legoResolver",qe,this);(0,t.default)(this,"legoTracking",Ue,this);(0,t.default)(this,"msgUserSettings",He,this);(0,t.default)(this,"msgDataManager",Ve,this);(0,t.default)(this,"router",Ke,this);(0,t.default)(this,"isMinimized",Ye,this);(0,t.default)(this,"isExpanded",Ge,this);(0,n.default)(this,"isInMinimizeTransition",!1);(0,t.default)(this,"showMessageRequestInboxInHeaderDropdown",We,this);(0,t.default)(this,"showManageConversationsButtonInHeaderDropdown",Je,this);(0,n.default)(this,"bubblePageKey","d_flagship3_messaging_overlay_connections.page");(0,n.default)(this,"bubbleMinimizeProperty","isMinimized");(0,n.default)(this,"eventTarget",".msg-overlay-list-bubble__content");(0,n.default)(this,"scrollingElementSelector",".msg-overlay-list-bubble__content");(0,n.default)(this,"triggerOnInsert",!1);(0,n.default)(this,"showDefaultConversationList",!0);(0,n.default)(this,"showMessageRequestConversationList",!1);(0,n.default)(this,"showDeclinedMessageRequestConversationList",!1);(0,n.default)(this,"kindnessReminderLegoConfig",bt);(0,n.default)(this,"kindnessReminderHelpCenterLink","/legal/professional-community-policies");(0,n.default)(this,"unreadBadgerOnboardingLegoConfig",gt);(0,n.default)(this,"unreadFilterOnboardingLegoConfig",ht);(0,n.default)(this,"awayMessageOnboardingLegoConfig",vt);(0,n.default)(this,"hasMorePendingMessageRequestsToLoad",!0);(0,n.default)(this,"hasMoreDeclinedMessageRequestsToLoad",!0);(0,n.default)(this,"loadMoreError",!1);(0,n.default)(this,"memberConnections",null);(0,t.default)(this,"hasBadge",Xe,this);(0,t.default)(this,"hasConversations",Qe,this);(0,t.default)(this,"hasNoConversations",$e,this);(0,t.default)(this,"convosFilterIsEnabled",Ze,this);(0,t.default)(this,"convosFilterIsDisabled",et,this);(0,t.default)(this,"hasNoFilteredConversations",tt,this);(0,t.default)(this,"hasStrongNetwork",nt,this);(0,t.default)(this,"hasWeakNetwork",st,this);(0,n.default)(this,"isHeaderDropdownMenuOpen",!1);(0,n.default)(this,"isMessagingSettingsModalOpen",!1)}get shouldRenderContent(){return!this.isMinimized||this.isInMinimizeTransition}get showSearchInput(){return!this.showMessageRequestConversationList&&!this.isBulkActionsMode}get showContextualRecommendations(){return!this.currentConvosFilter&&this.suggestedRecipients}get showPendingMessageRequestConversationList(){return this.showMessageRequestConversationList&&!this.showDeclinedMessageRequestConversationList}get showNoPendingMessageRequestView(){return this.showPendingMessageRequestConversationList&&0===Ember.get(this,"sortedPendingMessageRequestConversations.length")&&!this.isLoading}get showNoDeclinedMessageRequestView(){return this.showDeclinedMessageRequestConversationList&&0===Ember.get(this,"sortedDeclinedMessageRequestConversations.length")&&!this.isLoading}get shouldAlertUser(){return Ember.get(this,"msgOverlayService.unseenMsgCount")&&!this.forcedMinimize}get lightHeaderBackground(){return this.isMercado&&!this.hasBadge}get showNoviceState(){return this.hasNoConversations&&!this.pendingMessageRequestBundle&&this.hasStrongNetwork&&this.convosFilterIsDisabled}get showAbiFlow(){return this.hasNoConversations&&!this.pendingMessageRequestBundle&&this.hasWeakNetwork&&this.convosFilterIsDisabled}get showMessageRequestBanner(){return this.pendingMessageRequestBundle&&!this.showMessageRequestConversationList&&!this.currentConvosFilter}get showKindnessReminder(){return this.enableKindnessReminder&&!this.currentConvosFilter&&!this.isBulkActionsMode}get sortedPendingMessageRequestConversations(){const{pendingMessageRequestConversations:e}=this
return e?e.sortBy("latestEvent.createdAt").reverseObjects():[]}get sortedDeclinedMessageRequestConversations(){const{declinedMessageRequestConversations:e}=this
return e?e.sortBy("latestEvent.createdAt").reverseObjects():[]}get realtimeStatusClassName(){return Ember.get(this,"realtimeAPI.hasActiveConnection")?"msg-overlay-bubble-header__realtime-indicator--online":"msg-overlay-bubble-header__realtime-indicator--offline"}get headerDropdownMenuPlacement(){return this.isMinimized?"top":"bottom"}get suggestedFilter(){return this.msgBadgeManager.unreadConversationsCount&&this.unreadBadgerEnabled?"UNREAD":null}get shouldLoadMoreConversations(){return this.overlaySidebarEnabled&&!this.lastSetOfConvosLoaded&&!this.isLoading&&this.dataLoaded&&!this.loadMoreError}get showSuggestedFilter(){return this.suggestedFilter&&!this.showUnreadBadgerOnboarding&&!this.currentConvosFilter}init(){super.init(...arguments)
const e=this.localStorage.getItem(mt),t=this.lix.getTreatment("voyager.web.messaging-overlay-sidebar")
Ember.setProperties(this,{enableRealtimeConnectionStatus:this.lix.getTreatmentIsEnabled(ot),selectedConversations:[],badging:this.badgeService,isOverlayNavLixEnabled:this.lix.getTreatmentIsEnabled("voyager.web.messaging-open-overlay-from-nav"),enableKindnessReminder:this.lix.getTreatmentIsEnabled("voyager.web.messaging-kindness-reminder"),unreadBadgerEnabled:this.lix.getTreatmentIsEnabled(it),showUnreadFilterOnboarding:this.lix.getTreatmentIsEnabled(it),showUnreadBadgerOnboarding:this.lix.getTreatmentIsEnabled(it),showAwayMessageOnboarding:this.lix.getTreatmentIsEnabled("voyager.web.messaging-away-message-onboarding"),isMercado:this.lix.getTreatmentIsEnabled("voyager.web.infraux-mercado-theme"),enableBulkActionsOnboarding:this.lix.getTreatmentIsEnabled("voyager.web.messaging-bulk-actions-onboarding"),overlaySidebarEnabled:"basic"===t||"spacious"===t,overlaySpaciousSidebarEnabled:"spacious"===t,overlayBasicSidebarEnabled:"basic"===t})
!this.currentConvosFilter&&e&&Ember.set(this,"currentConvosFilter",e)
new r.default(this.legoResolver,this.legoTracking,this.msgUserSettings,this.store,this.tracking,this.lix).run()
this.enableBulkActionsOnboarding&&this._fetchBulkActionsOnboardingWidget()}infiniteScroll(){return this.loadMore()}didReceiveAttrs(){super.didReceiveAttrs(...arguments)
if(void 0===this.isExpanded&&void 0===this.numOfConvosOnFirstRender){const e=Ember.get(this,"conversations.length")
if(e){Ember.set(this,"numOfConvosOnFirstRender",e)
this.msgOverlayService.setListBubbleExpandState(e>6)}}}_loadMessageRequestConversations(e){const{loadMessageRequestConversationList:t}=this
if("function"!=typeof t)return Ember.RSVP.resolve()
const n=e===lt?"hasMorePendingMessageRequestsToLoad":"hasMoreDeclinedMessageRequestsToLoad"
Ember.setProperties(this,{isLoading:!0,[n]:!0})
return t(e).then(e=>{if(this.isDestroying)return Ember.RSVP.resolve()
Ember.set(this,n,20===Ember.get(e,"length"))
return e}).catch(e=>{this.isDestroying||Ember.set(this,"loadMoreError",!0)
throw e}).finally(()=>{this.isDestroying||Ember.set(this,"isLoading",!1)})}_updateMinimizedState(e){this.runTask(()=>this.msgOverlayService.updateListBubbleMinimizeState(e))}_newConversation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}
e&&e.stopPropagation()
this.newConversation&&this.newConversation(t)}_fetchBulkActionsOnboardingWidget(){return this.legoResolver.fireLegoCall(yt).then(e=>{if(!this.isDestroying&&e){Ember.set(this,"bulkActionsOnboardingWidgetTrackingToken",Ember.get(e,"trackingToken"))
return e}})}_dismissBulkActionsOnboardingWidget(){this.legoTracking.sendLegoAction(this.bulkActionsOnboardingWidgetTrackingToken,this.legoTracking.LEGO_ACTION_DISMISS,1)
Ember.set(this,"bulkActionsOnboardingWidgetTrackingToken",null)}_sendBulkActionsOnboardingImpression(){this.bulkActionsOnboardingWidgetTrackingToken&&this.legoTracking.sendLegoImpression(this.bulkActionsOnboardingWidgetTrackingToken,this.legoTracking.LEGO_IMPRESSION_VISIBILITY_SHOW)}loadMore(){Ember.setProperties(this,{isLoading:!0,loadMoreError:!1})
const{showDeclinedMessageRequestConversationList:e,showPendingMessageRequestConversationList:t}=this
if(e&&!this.hasMoreDeclinedMessageRequestsToLoad||t&&!this.hasMorePendingMessageRequestsToLoad)return Ember.RSVP.resolve()
let n=rt.ALL
e?n=ct:t&&(n=lt)
return this.loadMoreConversations(n).then(n=>{const s=n.length
if(!this.isDestroying){Ember.set(this,"lastSetOfConvosLoaded",s<20)
const n=this.i18n.lookupTranslation("component","msg-ui@i18n-shared","i18n_a11y_infinite_scroll_conversations")
this.a11yNotification.setTextInLiveRegion(n([{newRecordCount:s}]))
e?Ember.set(this,"hasMoreDeclinedMessageRequestsToLoad",20===s):t&&Ember.set(this,"hasMorePendingMessageRequestsToLoad",20===s)}return s}).catch(e=>{this.isDestroying||Ember.set(this,"loadMoreError",!0)
throw e}).finally(()=>{this.isDestroying||Ember.set(this,"isLoading",!1)})}createNewConvoPVE(e){this._newConversation(e)}openNewGroupConvoBubble(e){this._newConversation(e,{showGroupEditScreen:!0,isJumbo:!0})}goToMessagingPillar(){this.router.transitionTo("messaging")}retryLoadMore(){this.resetInfiniteScroll()
this.loadMore()}stopEvtPropagation(e){e&&e.stopPropagation()}toggleMinimize(e){var t
null==e||null===(t=e.stopPropagation)||void 0===t||t.call(e)
Ember.set(this,"isInMinimizeTransition",!0)
if(!this.unreadBadgerEnabled&&this.isMinimized){this.badging.getBadgeCount("messaging")>0&&this.badging.fireBadgeInteractionEvent(this.element,"msg-overlay-list-bubble-header","messaging")
this.msgOverlayService.markAllAsSeen()}this.msgOverlayService.toggleListBubbleMinimized()
this._fireBubblePVE()}openMessageRequestConversationList(){Ember.setProperties(this,{showMessageRequestConversationList:!0,isHeaderDropdownMenuOpen:!1})
this.tracking.firePageViewEvent("d_flagship3_messaging_overlay_pending_request_inbox")
this._loadMessageRequestConversations(lt).then(e=>{this.isDestroying||Ember.set(this,"pendingMessageRequestConversations",e)})}backToInboxFromMessageRequestList(){Ember.set(this,"showMessageRequestConversationList",!1)
this.msgDataManager.refreshConversationBundles()}openDeclinedMessageRequestConversationList(){Ember.setProperties(this,{showDeclinedMessageRequestConversationList:!0,isHeaderDropdownMenuOpen:!1})
this.tracking.firePageViewEvent("d_flagship3_messaging_overlay_declined_request_inbox")
this._loadMessageRequestConversations(ct).then(e=>{this.isDestroying||Ember.set(this,"declinedMessageRequestConversations",e)})}openAwayMessageSettingsModal(e){null==e||e.stopPropagation()
Ember.set(this,"awayMessageSettingsModalIsOpen",!0)}openMessagingSettingsModal(e){e&&e.stopPropagation()
Ember.set(this,"isMessagingSettingsModalOpen",!0)}onListBubbleItemClick(e){e.toggleProperty("checked")
const t=this.conversations.filter(e=>Ember.get(e,"checked"))
Ember.set(this,"selectedConversations",t)
if(!this.isBulkActionsMode&&t.length>0){Ember.set(this,"isBulkActionsMode",!0)
this.enableBulkActionsOnboarding&&this._dismissBulkActionsOnboardingWidget()}else 0===t.length&&Ember.set(this,"isBulkActionsMode",!1)
const n=Ember.get(e,"checked")?"overlay.bulk_select_conversation":"overlay.bulk_unselect_conversation"
this.tracking.fireInteractionEvent(n)}enterBulkActionsMode(e){e&&e.stopPropagation()
this.isMinimized&&this.toggleMinimize()
Ember.setProperties(this,{isBulkActionsMode:!0,isHeaderDropdownMenuOpen:!1})
this.enableBulkActionsOnboarding&&this._dismissBulkActionsOnboardingWidget()}onExitBulkActionsMode(){Ember.setProperties(this,{selectedConversations:[],isBulkActionsMode:!1})}willExecuteBulkAction(){Ember.set(this,"isBulkActionsMode",!1)}didExecuteBulkAction(e){"delete"===e&&this.selectedConversations.forEach(e=>{Ember.get(this,"msgOverlayService.conversationBubbleLayoutManager").closeBubbleByConversation(e)})}onUnreadBadgerOnboardingPrimaryAction(){Ember.set(this,"showUnreadBadgerOnboarding",!1)
this.applyFilter("UNREAD")}applyFilter(e){e?this.localStorage.setItem(mt,e):this.localStorage.removeItem(mt)
Ember.set(this,"currentConvosFilter",e)
this.tracking.fireInteractionEvent(ut.SELECT[e||"ALL"],"SHORT_PRESS")
this.openConvoFiltersDropdown(e).then(()=>{this.tracking.firePageViewEvent(pt.OVERLAY_CONVERSATION_FILTERED_LIST[e||"ALL"])})}clearFilters(){this.localStorage.removeItem(mt)
this.tracking.fireInteractionEvent(ut.DISMISS[this.currentConvosFilter],"SHORT_PRESS")
Ember.set(this,"currentConvosFilter","")
this.openConvoFiltersDropdown("")}impressionKindnessReminder(){this.tracking.firePageViewEvent("d_flagship3_messaging_overlay_kindness_banner")}clickKindnessReminder(){this.tracking.fireInteractionEvent("overlay.open_kindness_banner")
if(l.default){const e=this.kindnessReminderHelpCenterLink
if(!e)return
this.windowService.open(e,"_blank")}}onDropdownToggle(e){null==e||e.stopPropagation()
this.enableBulkActionsOnboarding&&!this.isHeaderDropdownMenuOpen&&this._sendBulkActionsOnboardingImpression()}},Re=(0,s.default)(ke.prototype,"authenticatedUser",[c],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Te=(0,s.default)(ke.prototype,"badgeService",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Pe=(0,s.default)(ke.prototype,"identityStore",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),De=(0,s.default)(ke.prototype,"lix",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ie=(0,s.default)(ke.prototype,"tracking",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),xe=(0,s.default)(ke.prototype,"i18n",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ae=(0,s.default)(ke.prototype,"windowService",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ne=(0,s.default)(ke.prototype,"a11yNotification",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Le=(0,s.default)(ke.prototype,"msgOverlayService",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Be=(0,s.default)(ke.prototype,"msgBadgeManager",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ze=(0,s.default)(ke.prototype,"realtimeAPI",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),je=(0,s.default)(ke.prototype,"store",[_],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Fe=(0,s.default)(ke.prototype,"localStorage",[E],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),qe=(0,s.default)(ke.prototype,"legoResolver",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ue=(0,s.default)(ke.prototype,"legoTracking",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),He=(0,s.default)(ke.prototype,"msgUserSettings",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ve=(0,s.default)(ke.prototype,"msgDataManager",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ke=(0,s.default)(ke.prototype,"router",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ye=(0,s.default)(ke.prototype,"isMinimized",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ge=(0,s.default)(ke.prototype,"isExpanded",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(ke.prototype,"shouldRenderContent",[T],Object.getOwnPropertyDescriptor(ke.prototype,"shouldRenderContent"),ke.prototype),(0,s.default)(ke.prototype,"showSearchInput",[P],Object.getOwnPropertyDescriptor(ke.prototype,"showSearchInput"),ke.prototype),We=(0,s.default)(ke.prototype,"showMessageRequestInboxInHeaderDropdown",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Je=(0,s.default)(ke.prototype,"showManageConversationsButtonInHeaderDropdown",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(ke.prototype,"showContextualRecommendations",[x],Object.getOwnPropertyDescriptor(ke.prototype,"showContextualRecommendations"),ke.prototype),(0,s.default)(ke.prototype,"showPendingMessageRequestConversationList",[A],Object.getOwnPropertyDescriptor(ke.prototype,"showPendingMessageRequestConversationList"),ke.prototype),(0,s.default)(ke.prototype,"showNoPendingMessageRequestView",[N],Object.getOwnPropertyDescriptor(ke.prototype,"showNoPendingMessageRequestView"),ke.prototype),(0,s.default)(ke.prototype,"showNoDeclinedMessageRequestView",[L],Object.getOwnPropertyDescriptor(ke.prototype,"showNoDeclinedMessageRequestView"),ke.prototype),(0,s.default)(ke.prototype,"shouldAlertUser",[B],Object.getOwnPropertyDescriptor(ke.prototype,"shouldAlertUser"),ke.prototype),Xe=(0,s.default)(ke.prototype,"hasBadge",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(ke.prototype,"lightHeaderBackground",[j],Object.getOwnPropertyDescriptor(ke.prototype,"lightHeaderBackground"),ke.prototype),Qe=(0,s.default)(ke.prototype,"hasConversations",[F],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),$e=(0,s.default)(ke.prototype,"hasNoConversations",[q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ze=(0,s.default)(ke.prototype,"convosFilterIsEnabled",[U],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),et=(0,s.default)(ke.prototype,"convosFilterIsDisabled",[H],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),tt=(0,s.default)(ke.prototype,"hasNoFilteredConversations",[V],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),nt=(0,s.default)(ke.prototype,"hasStrongNetwork",[K],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),st=(0,s.default)(ke.prototype,"hasWeakNetwork",[Y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(ke.prototype,"showNoviceState",[G],Object.getOwnPropertyDescriptor(ke.prototype,"showNoviceState"),ke.prototype),(0,s.default)(ke.prototype,"showAbiFlow",[W],Object.getOwnPropertyDescriptor(ke.prototype,"showAbiFlow"),ke.prototype),(0,s.default)(ke.prototype,"showMessageRequestBanner",[J],Object.getOwnPropertyDescriptor(ke.prototype,"showMessageRequestBanner"),ke.prototype),(0,s.default)(ke.prototype,"showKindnessReminder",[X],Object.getOwnPropertyDescriptor(ke.prototype,"showKindnessReminder"),ke.prototype),(0,s.default)(ke.prototype,"sortedPendingMessageRequestConversations",[Q],Object.getOwnPropertyDescriptor(ke.prototype,"sortedPendingMessageRequestConversations"),ke.prototype),(0,s.default)(ke.prototype,"sortedDeclinedMessageRequestConversations",[$],Object.getOwnPropertyDescriptor(ke.prototype,"sortedDeclinedMessageRequestConversations"),ke.prototype),(0,s.default)(ke.prototype,"realtimeStatusClassName",[Z],Object.getOwnPropertyDescriptor(ke.prototype,"realtimeStatusClassName"),ke.prototype),(0,s.default)(ke.prototype,"headerDropdownMenuPlacement",[ee],Object.getOwnPropertyDescriptor(ke.prototype,"headerDropdownMenuPlacement"),ke.prototype),(0,s.default)(ke.prototype,"suggestedFilter",[te],Object.getOwnPropertyDescriptor(ke.prototype,"suggestedFilter"),ke.prototype),(0,s.default)(ke.prototype,"shouldLoadMoreConversations",[ne],Object.getOwnPropertyDescriptor(ke.prototype,"shouldLoadMoreConversations"),ke.prototype),(0,s.default)(ke.prototype,"showSuggestedFilter",[se],Object.getOwnPropertyDescriptor(ke.prototype,"showSuggestedFilter"),ke.prototype),(0,s.default)(ke.prototype,"loadMore",[ae],Object.getOwnPropertyDescriptor(ke.prototype,"loadMore"),ke.prototype),(0,s.default)(ke.prototype,"createNewConvoPVE",[oe],Object.getOwnPropertyDescriptor(ke.prototype,"createNewConvoPVE"),ke.prototype),(0,s.default)(ke.prototype,"openNewGroupConvoBubble",[ie],Object.getOwnPropertyDescriptor(ke.prototype,"openNewGroupConvoBubble"),ke.prototype),(0,s.default)(ke.prototype,"goToMessagingPillar",[re],Object.getOwnPropertyDescriptor(ke.prototype,"goToMessagingPillar"),ke.prototype),(0,s.default)(ke.prototype,"retryLoadMore",[le],Object.getOwnPropertyDescriptor(ke.prototype,"retryLoadMore"),ke.prototype),(0,s.default)(ke.prototype,"stopEvtPropagation",[ce],Object.getOwnPropertyDescriptor(ke.prototype,"stopEvtPropagation"),ke.prototype),(0,s.default)(ke.prototype,"toggleMinimize",[me],Object.getOwnPropertyDescriptor(ke.prototype,"toggleMinimize"),ke.prototype),(0,s.default)(ke.prototype,"openMessageRequestConversationList",[de],Object.getOwnPropertyDescriptor(ke.prototype,"openMessageRequestConversationList"),ke.prototype),(0,s.default)(ke.prototype,"backToInboxFromMessageRequestList",[ue],Object.getOwnPropertyDescriptor(ke.prototype,"backToInboxFromMessageRequestList"),ke.prototype),(0,s.default)(ke.prototype,"openDeclinedMessageRequestConversationList",[pe],Object.getOwnPropertyDescriptor(ke.prototype,"openDeclinedMessageRequestConversationList"),ke.prototype),(0,s.default)(ke.prototype,"openAwayMessageSettingsModal",[be],Object.getOwnPropertyDescriptor(ke.prototype,"openAwayMessageSettingsModal"),ke.prototype),(0,s.default)(ke.prototype,"openMessagingSettingsModal",[ge],Object.getOwnPropertyDescriptor(ke.prototype,"openMessagingSettingsModal"),ke.prototype),(0,s.default)(ke.prototype,"onListBubbleItemClick",[he],Object.getOwnPropertyDescriptor(ke.prototype,"onListBubbleItemClick"),ke.prototype),(0,s.default)(ke.prototype,"enterBulkActionsMode",[ye],Object.getOwnPropertyDescriptor(ke.prototype,"enterBulkActionsMode"),ke.prototype),(0,s.default)(ke.prototype,"onExitBulkActionsMode",[ve],Object.getOwnPropertyDescriptor(ke.prototype,"onExitBulkActionsMode"),ke.prototype),(0,s.default)(ke.prototype,"willExecuteBulkAction",[fe],Object.getOwnPropertyDescriptor(ke.prototype,"willExecuteBulkAction"),ke.prototype),(0,s.default)(ke.prototype,"didExecuteBulkAction",[_e],Object.getOwnPropertyDescriptor(ke.prototype,"didExecuteBulkAction"),ke.prototype),(0,s.default)(ke.prototype,"onUnreadBadgerOnboardingPrimaryAction",[Ee],Object.getOwnPropertyDescriptor(ke.prototype,"onUnreadBadgerOnboardingPrimaryAction"),ke.prototype),(0,s.default)(ke.prototype,"applyFilter",[Ce],Object.getOwnPropertyDescriptor(ke.prototype,"applyFilter"),ke.prototype),(0,s.default)(ke.prototype,"clearFilters",[we],Object.getOwnPropertyDescriptor(ke.prototype,"clearFilters"),ke.prototype),(0,s.default)(ke.prototype,"impressionKindnessReminder",[Me],Object.getOwnPropertyDescriptor(ke.prototype,"impressionKindnessReminder"),ke.prototype),(0,s.default)(ke.prototype,"clickKindnessReminder",[Oe],Object.getOwnPropertyDescriptor(ke.prototype,"clickKindnessReminder"),ke.prototype),(0,s.default)(ke.prototype,"onDropdownToggle",[Se],Object.getOwnPropertyDescriptor(ke.prototype,"onDropdownToggle"),ke.prototype),ke)
e.default=ft
Ember._setComponentTemplate(at,ft)})
define.alias("ember-media-player/components/media-player","msg-overlay/components/media-player")
define.alias("ember-media-player/components/media-player/big-play-button","msg-overlay/components/media-player/big-play-button")
define.alias("ember-media-player/components/media-player/caption","msg-overlay/components/media-player/caption")
define.alias("ember-media-player/components/media-player/control/back-to-start","msg-overlay/components/media-player/control/back-to-start")
define.alias("ember-media-player/components/media-player/control/captions-menu","msg-overlay/components/media-player/control/captions-menu")
define.alias("ember-media-player/components/media-player/control/custom","msg-overlay/components/media-player/control/custom")
define.alias("ember-media-player/components/media-player/control/fullscreen","msg-overlay/components/media-player/control/fullscreen")
define.alias("ember-media-player/components/media-player/control/next","msg-overlay/components/media-player/control/next")
define.alias("ember-media-player/components/media-player/control/playback-rate","msg-overlay/components/media-player/control/playback-rate")
define.alias("ember-media-player/components/media-player/control/previous","msg-overlay/components/media-player/control/previous")
define.alias("ember-media-player/components/media-player/control/settings","msg-overlay/components/media-player/control/settings")
define.alias("ember-media-player/components/media-player/control/settings/autoplay","msg-overlay/components/media-player/control/settings/autoplay")
define.alias("ember-media-player/components/media-player/control/settings/quality","msg-overlay/components/media-player/control/settings/quality")
define.alias("ember-media-player/components/media-player/control/skipahead","msg-overlay/components/media-player/control/skipahead")
define.alias("ember-media-player/components/media-player/control/skipback","msg-overlay/components/media-player/control/skipback")
define.alias("ember-media-player/components/media-player/control/theater-mode","msg-overlay/components/media-player/control/theater-mode")
define.alias("ember-media-player/components/media-player/end-screen","msg-overlay/components/media-player/end-screen")
define.alias("ember-media-player/components/media-player/error-screen","msg-overlay/components/media-player/error-screen")
define("msg-overlay/components/messaging-overlay-container",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","@ember-decorators/component","extended/config/environment","global-utils/utils/is-browser","msg-shared/utils/document-is-hidden","msg-ui/utils/notification-sounds","msg-shared/utils/constants","msg-data/utils/messaging-settings","ember-cli-pemberly-tracking/utils/user-timing"],function(e,t,n,s,a,o,i,r,l,c,m,d,u){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var p,b,g,h,y,v,f,_,E,C,w,M,O,S,k,R,T,P,D,I,x,A,N,L,B,z,j,F,q,U,H,V,K,Y,G,W,J,X,Q,$,Z,ee,te,ne,se,ae,oe,ie,re,le,ce,me,de,ue,pe,be,ge,he,ye,ve,fe,_e,Ee,Ce,we,Me,Oe
const Se=Ember.HTMLBars.template({id:"2l3W7zgf",block:'{"symbols":["bubble"],"statements":[[4,"if",[[23,0,["focusedMessagingMode"]]],null,{"statements":[[0,"  "],[7,"span",true],[10,"class","msg-overlay-container__dimmed-background"],[8],[9],[0,"\\n"]],"parameters":[]},null],[0,"\\n"],[5,"msg-overlay@list-bubble",[],[["@currentConvosFilter","@conversations","@dataLoaded","@forcedMinimize","@isAbiComplete","@memberConnections","@pendingMessageRequestBundle","@numConnections","@realtimeMsgNotAutoOpened","@showFailedState","@suggestedRecipients","@messagingSettings","@loadMessageRequestConversationList","@loadMoreConversations","@newConversation","@openBubble","@openConvoFiltersDropdown","@refetchOverlayData"],[[23,0,["currentConvosFilter"]],[23,0,["sortedConversations"]],[23,0,["dataLoaded"]],[23,0,["forcedMinimize"]],[23,0,["isAbiComplete"]],[23,0,["memberConnections"]],[23,0,["pendingMessageRequestBundle"]],[23,0,["numConnections"]],[23,0,["realtimeMsgNotAutoOpened"]],[23,0,["showFailedState"]],[23,0,["suggestedRecipients"]],[23,0,["messagingSettings"]],[28,"action",[[23,0,[]],"loadMessageRequestConversationList"],null],[28,"action",[[23,0,[]],"loadMoreConversations"],null],[28,"action",[[23,0,[]],"newConversation"],null],[28,"action",[[23,0,[]],"openConversation"],null],[28,"action",[[23,0,[]],"openConvoFiltersDropdown"],null],[28,"action",[[23,0,[]],"refetchOverlayData"],null]]]],[0,"\\n\\n"],[4,"each",[[23,0,["conversationBubbleLayoutManager","openBubbles"]]],null,{"statements":[[0,"  "],[5,"msg-overlay@conversation-bubble",[],[["@bubble","@forcedMinimize","@placeholderText","@msgAdapterOptions","@messagingSettings","@forwardedEvent","@messageContext","@newConversation","@closeBubble","@handleSuccessfulDiscardRequest"],[[23,1,[]],[23,0,["forcedMinimize"]],[23,1,["placeholderText"]],[23,1,["msgAdapterOptions"]],[23,0,["messagingSettings"]],[23,1,["forwardedEvent"]],[23,1,["messageContext"]],[28,"action",[[23,0,[]],"newConversation"],null],[28,"action",[[23,0,[]],"closeBubble",[23,1,[]]],null],[28,"action",[[23,0,[]],"handleSuccessfulDiscardRequest"],null]]]],[0,"\\n"]],"parameters":[1]},null],[0,"\\n"],[7,"div",true],[10,"id","msg-overlay__emoji-hoverable-outlet"],[8],[9]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/messaging-overlay-container.hbs"}}),{CONTROL_NAMES:{OVERLAY:ke},LIX:{API_KEY_VERSION:Re,ENABLE_UNREAD_BADGER:Te},MESSAGE_COLLECTION_TYPES:Pe,MESSAGE_COLLECTION_TYPE_NAMES:De,OVERLAY_LS_CONVERSATIONS_FILTER_KEY:Ie,OVERLAY:{QUALITY_MEMBER_CONNECTIONS_THRESHOLD:xe},PAGEVIEW_KEYS:Ae,MESSAGE_REQUEST_TARGET_URLS:Ne}=m.default,Le=/^messaging/,Be=/^profile/,ze=/^(feed.update.index|jobs.view.index|companies.company.index|profile.view.index.index)/
let je=(p=(0,o.tagName)("aside"),b=(0,o.classNames)("msg-overlay-container"),g=Ember.inject.service("asset-loader"),h=Ember.inject.service("i18n"),y=Ember.inject.service("global-services@badge"),v=Ember.inject.service("authentication@authenticated-user"),f=Ember.inject.service("store"),_=Ember.inject.service("global-services@identity-store"),E=Ember.inject.service("lix"),C=Ember.inject.service("router"),w=Ember.inject.service("tracking"),M=Ember.inject.service("lego@tracking"),O=Ember.inject.service("msg-overlay-manager@msg-overlay-manager"),S=Ember.inject.service("msg-badge-manager@msg-badge-manager"),k=Ember.inject.service("heathrow@heathrow"),R=Ember.inject.service("global-services@local-storage"),T=Ember.inject.service("html-document-title@document-title-poller"),P=Ember.inject.service("msg-shared@first-message"),D=Ember.inject.service("msg-data@data-manager"),I=Ember.inject.service("client-sensor-web@client-sensor"),x=Ember.computed("currentConvosFilter","msgDataManager.allConversationsCollection.data.[]","_allConversationCollection.data.[]","_filteredConversationCollection.data.[]").readOnly(),A=Ember.computed.notEmpty("sortedConversations"),N=Ember.computed.alias("messagingSettings.messagingOverlayPopups"),L=Ember.computed.alias("messagingSettings.messagingOverlaySounds"),B=Ember.computed.alias("msgOverlay.suggestedRecipients"),z=Ember.computed.match("router.currentRouteName",Le).readOnly(),j=Ember.computed.match("router.currentRouteName",Be).readOnly(),F=Ember.computed.match("router.currentRouteName",ze).readOnly(),q=Ember.computed.match("router.currentRouteName",/(^messaging|abi|article-reader)/).readOnly(),U=Ember._action,H=Ember._action,V=Ember._action,K=Ember._action,Y=Ember._action,G=Ember._action,W=Ember._action,J=Ember._action,X=Ember._action,Q=Ember._action,p($=b($=(Z=class extends Ember.Component{constructor(){super(...arguments);(0,n.default)(this,"elementId","msg-overlay");(0,n.default)(this,"rumComponentId","msg-overlay");(0,n.default)(this,"data-test-messaging-overlay-container",!0);(0,t.default)(this,"assetLoader",ee,this);(0,t.default)(this,"i18n",te,this);(0,t.default)(this,"badgeService",ne,this);(0,t.default)(this,"authenticatedUser",se,this);(0,t.default)(this,"store",ae,this);(0,t.default)(this,"identityStore",oe,this);(0,t.default)(this,"lix",ie,this);(0,t.default)(this,"router",re,this);(0,t.default)(this,"tracking",le,this);(0,t.default)(this,"legoTracking",ce,this);(0,t.default)(this,"msgOverlay",me,this);(0,t.default)(this,"msgBadgeManager",de,this);(0,t.default)(this,"heathrow",ue,this);(0,t.default)(this,"localStorage",pe,this);(0,t.default)(this,"documentTitle",be,this);(0,t.default)(this,"firstMessage",ge,this);(0,t.default)(this,"msgDataManager",he,this);(0,t.default)(this,"clientSensor",ye,this);(0,t.default)(this,"hasMoreConversations",ve,this);(0,n.default)(this,"isUserReporting",!1);(0,t.default)(this,"popupsAreEnabled",fe,this);(0,t.default)(this,"soundsEnabled",_e,this);(0,t.default)(this,"suggestedRecipients",Ee,this);(0,t.default)(this,"isMessagingRoute",Ce,this);(0,t.default)(this,"isProfileRoute",we,this);(0,t.default)(this,"isContextualRoute",Me,this);(0,t.default)(this,"forcedMinimize",Oe,this)}get sortedConversations(){var e,t
if(this.enableReloadConversationsWithAutotracking){var n,s
return this.currentConvosFilter?null!==(n=Ember.get(this,"_filteredConversationCollection.data"))&&void 0!==n?n:[]:(null!==(s=Ember.get(this,"msgDataManager.allConversationsCollection.data"))&&void 0!==s?s:[]).filter(e=>!Ember.get(e,"archived")&&!Ember.get(e,"blocked"))}return this.currentConvosFilter?null!==(e=Ember.get(this,"_filteredConversationCollection.data"))&&void 0!==e?e:[]:(null!==(t=Ember.get(this,"_allConversationCollection.data"))&&void 0!==t?t:[]).filter(e=>!Ember.get(e,"archived")&&!Ember.get(e,"blocked"))}init(){super.init(...arguments)
if(u.default.hasMarkerName("mark_msg-overlay_boot_start")){u.default.addMarker("mark_msg-overlay_boot_end")
u.default.measureTime("mark_msg-overlay_boot_phase","mark_msg-overlay_boot_start","mark_msg-overlay_boot_end")
u.default.addMarker("mark_msg-overlay_init_start")}const e=Ember.get(this,"router.currentRoute.queryParams")
Ember.setProperties(this,{conversationBubbleLayoutManager:Ember.get(this,"msgOverlay.conversationBubbleLayoutManager"),apiKeyVersion:this.lix.getTreatment(Re),badging:this.badgeService,unreadBadgerEnabled:this.lix.getTreatmentIsEnabled(Te),enableTabChangeSyncRefactor:this.lix.getTreatmentIsEnabled("voyager.web.messaging-tab-change-sync-refactor"),enableReloadConversationsWithAutotracking:this.lix.getTreatmentIsEnabled("voyager.web.messaging-reload-conversations-with-autotracking"),useSeenReceiptManager:this.lix.getTreatmentIsEnabled("voyager.web.messaging-use-seen-receipt-manager")})
const t=e&&"true"===e.msgOverlay
let n
const s=t?"mark_msg-overlay_transition_deeplink":"mark_msg-overlay_transition"
u.default.addMarker(`${s}_start`);(n=t?this._handleDeeplink(e):this._fetchOverlayData()).then(()=>{if(u.default.hasMarkerName(`${s}_start`)){u.default.addMarker(`${s}_end`)
u.default.measureTime(`${s}_phase`,`${s}_start`,`${s}_end`)}})
this._showFirstMessage()
this.unreadBadgerEnabled?this.msgBadgeManager.setUnreadConversationsCountFromBadge():this.msgOverlay.setUnseenConvoCountFromBadge()
this._fetchMessagingSettings().then(e=>{if(!this.isDestroying){Ember.set(this,"messagingSettings",e)
t||this._restoreCachedState(e)}})
if(u.default.hasMarkerName("mark_msg-overlay_init_start")){u.default.addMarker("mark_msg-overlay_init_end")
u.default.measureTime("mark_msg-overlay_init_phase","mark_msg-overlay_init_start","mark_msg-overlay_init_end")
u.default.addMarker("mark_msg-overlay_render_start")}}didInsertElement(){super.didInsertElement(...arguments)
this._attachListeners()
this.msgDataManager.subscribe(this)
this.on("realtimeMessageReceived",this._realtimeConversationCreated)
this._downloadDeferredAssets()
this.on("realtimeConversationDelete",e=>{this.msgOverlay.conversationBubbleLayoutManager.closeBubbleByConversation(e)})
this.on("conversationBundleUpdate",()=>{Ember.set(this,"pendingMessageRequestBundle",this.msgDataManager.getConversationBundleByTargetUrl(Ne.URL_PENDING))})
this.msgOverlay.setOverlayHasLoaded()}didRender(){if(!this._trackedOverlayRUMPhases){if(u.default.hasMarkerName("mark_msg-overlay_overall_start")){u.default.addMarker("mark_msg-overlay_overall_end")
u.default.measureTime("mark_msg-overlay_overall_phase","mark_msg-overlay_overall_start","mark_msg-overlay_overall_end")}if(u.default.hasMarkerName("mark_msg-overlay_render_start")){u.default.addMarker("mark_msg-overlay_render_end")
u.default.measureTime("mark_msg-overlay_render_phase","mark_msg-overlay_render_start","mark_msg-overlay_render_end")}this._trackedOverlayRUMPhases=!0}}willDestroyElement(){super.willDestroyElement(...arguments)
this.msgOverlay.off("newConversation",this,"_newConversation")}_downloadDeferredAssets(){this.assetLoader.loadBundle("msg-rich-media")
this.assetLoader.loadBundle("msg-conversation-ui")
this.assetLoader.loadBundle("msg-shared-modals")
this.assetLoader.loadBundle("msg-spinmail")
this.assetLoader.loadBundle("tenor-gif")}_fetchMessagingSettings(){return(0,d.findMessagingSettingsRequest)(this.identityStore,this.lix,"com.linkedin.voyager.identity.profile.MessagingSettings",Ember.get(this,"authenticatedUser.miniProfile.entityUrn")).catch(e=>{Ember.set(this,"messageSettings",{pressEnterToSend:!0})
throw e})}_restoreCachedState(e){const t=this.msgOverlay.getCachedOverlayData()
Ember.get(e,"messagingOverlayPopups")&&this._setListMinimizedState(t)
Object.keys(t).length&&this._showCachedConvos(t)}_handleDeeplink(e){const{chatId:t,msgConversationId:n,msgRecipientId:s,msgCompose:a,msgRecent:o,msgFilter:i,msgControlName:r}=e,l=this._fetchOverlayData(i)
if("true"===a){let e=Ember.RSVP.resolve()
s&&(e=this.identityStore.findRecord("com.linkedin.voyager.identity.shared.MiniProfile",s))
e.then(e=>{if(!this.isDestroying){this._newConversation({isMinimized:!1,isJumbo:!0,isNew:!0,messageRecipients:e?[e]:void 0})
this.msgOverlay.updateListBubbleMinimizeState(!1)
Ember.set(this,"focusedMessagingMode",!0)}})}else if(n)this.msgDataManager.fetchConversation(n).then(e=>{this.isDestroying||this._showDeeplinkedConvo(e,r)})
else if(t)this._showConversationPreview(t)
else if(o){Ember.set(this,"currentConvosFilter",i)
l.then(e=>{this.isDestroying||e.conversation&&this._showDeeplinkedConvo(Ember.get(this,"sortedConversations.firstObject"))})}return l}_showConversationPreview(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1]
this._newConversation({previewKey:e,isConversationPreview:!0,isMinimized:!1,isJumbo:!0,focusInputOnInit:!0})
Ember.set(this,"focusedMessagingMode",t)}_showDeeplinkedConvo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:""
this._createConversationBubble({conversation:e,inmailReplyDeepLink:t,isMinimized:!1,isJumbo:!0,hasUnseenMessages:!Ember.get(e,"read"),focusInputOnInit:!0})
this.msgOverlay.updateListBubbleMinimizeState(!1)
Ember.set(this,"focusedMessagingMode",!0)}_filterConversationsBy(e){Ember.setProperties(this,{dataLoaded:!1,dataFetchInProgress:!0,currentConvosFilter:e})
const t={q:"search"}
"ARCHIVED"===e?t.folders=[e]:e?t.filters=[e]:delete t.q
let n
if(e){n=this.msgDataManager.initConversationCollection({name:`${e}-${Date.now()}`,initialQuery:t})
Ember.set(this,"_filteredConversationCollection",n)}else if(this.enableReloadConversationsWithAutotracking)n=this.msgDataManager.allConversationsCollection
else{n=this.msgDataManager.initConversationCollection({name:Pe.ALL,initialQuery:t})
Ember.set(this,"_allConversationCollection",n)}const s=n.load(t).then(t=>{if(!this.isDestroying&&this.unreadBadgerEnabled&&"UNREAD"===e){t.length<20&&t.length!==this.msgBadgeManager.unreadConversationsCount&&this.clientSensor.incrementMetricCounter({groupName:"messaging",metricName:"unread-conversations-count-mismatch-badge-number"})
n.length>0&&0===this.msgBadgeManager.unreadConversationsCount&&this.clientSensor.incrementMetricCounter({groupName:"messaging",metricName:"unread-conversations-when-badge-is-zero"})}})
Ember.set(this,De.ALL,n)
return s.finally(()=>{this.isDestroying||Ember.setProperties(this,{dataLoaded:!0,dataFetchInProgress:!1,conversationsLoaded:!0})})}_attachListeners(){if(r.default){this.addEventListener(window,"blur",this._onWindowBlur.bind(this))
this.addEventListener(window,"focus",this._onWindowFocus.bind(this))
this.addEventListener(document,"click",this._exitFocusedMessagingMode)
this.addEventListener(window,"visibilitychange",this._handleVisibilityChange.bind(this))
this.msgOverlay.on("newConversation",this,"_newConversation")
this.msgOverlay.on("conversationPreview",this,"openConversationPreview")
this.msgOverlay.on("conversationLoadingState",this,"openNewLoadingBubble")
this.msgOverlay.on("closeExistingBubble",this._closeBubbleByConversation.bind(this))}}_exitFocusedMessagingMode(e){let{target:t}=e
t.classList&&t.classList.contains("msg-overlay-container__dimmed-background")&&Ember.set(this,"focusedMessagingMode",!1)}_setListMinimizedState(e){if(this.forcedMinimize)return
const t=Ember.get(e,"_listBubble")
t&&(Ember.get(t,"isMinimized")||this.msgOverlay.updateListBubbleMinimizeState(!1))}_showCachedConvos(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
const t=Ember.get(e,"_conversationWindows"),n=this.lix.getTreatmentIsEnabled("voyager.web.messaging-realtime-bugs-cache-fix")
if(!t||this.forcedMinimize)return
const s=t.reduce((e,t)=>{let{convoRecordPromises:n,cachedConvoJumboState:s,cachedConvoMinimzedState:a}=e
const{convoId:o,isJumbo:i,isMinimized:r}=t,l=this.msgDataManager.fetchConversation(o)
n.push(l)
s[o]=i
a[o]=r
return{convoRecordPromises:n,cachedConvoJumboState:s,cachedConvoMinimzedState:a}},{convoRecordPromises:[],cachedConvoJumboState:{},cachedConvoMinimzedState:{}})
Ember.RSVP.all(s.convoRecordPromises).then(e=>{e.forEach(e=>{var t
n&&this.msgDataManager.fetchParticipantReceipts(Ember.get(e,"id")).then(t=>{this.useSeenReceiptManager?this.msgDataManager.seenReceiptsManager.setSeenReceipts(Ember.get(e,"entityUrn"),t):Ember.set(e,"receipts",t)})
const a=null!==(t=s.cachedConvoJumboState[e.id])&&void 0!==t?t:Ember.get(e,"groupChat")
this._createConversationBubble({conversation:e,isMinimized:!this.popupsAreEnabled||s.cachedConvoMinimzedState[e.id],isJumbo:a,hasUnseenMessages:!Ember.get(e,"read")})})})}_fetchOverlayData(e){if(this.dataFetchInProgress||this.dataLoaded)return Ember.RSVP.reject()
Ember.setProperties(this,{dataFetchInProgress:!0,dataLoaded:!1})
const t=this._loadConversations(e),n=this._loadConversationBundles()
return Ember.RSVP.hashSettled({conversation:t,conversationBundles:n}).then(e=>{if(this.isDestroying)return Ember.RSVP.reject()
if("rejected"===Ember.get(e.conversation,"state")){Ember.set(this,"showFailedState",!0)
this.tracking.firePageViewEvent(Ae.OVERLAY_FAILED_TO_CONNECT)
return Ember.RSVP.resolve()}return Ember.get(this,"sortedConversations.length")||Ember.get(this,"suggestedRecipients.length")?Ember.RSVP.resolve(e):this._fetchFallbackStateData()}).finally(()=>{this.isDestroying||Ember.setProperties(this,{dataFetchInProgress:!1,dataLoaded:!0})})}_fetchFallbackStateData(){const{store:e}=this,t=this.heathrow.organicAbiShouldSkipImport(),n={connectionSummary:e.findRecord("com.linkedin.voyager.relationships.shared.connection.ConnectionsSummary","GET",{reload:!1,adapterOptions:{url:`/${i.default.namespace}/relationships/connectionsSummary/`}}),isAbiComplete:t}
return Ember.RSVP.hashSettled(n).then(t=>{var n
if(this.isDestroying)return Ember.RSVP.reject()
const s=t.isAbiComplete.value,a=null!==(n=Ember.get(t,"connectionSummary.value.numConnections"))&&void 0!==n?n:0
Ember.setProperties(this,{isAbiComplete:s,numConnections:a})
return a>=xe?e.queryURL(`/${i.default.namespace}/relationships/connections`,{params:{start:0,count:4},reload:!1}):Ember.RSVP.resolve()}).then(e=>{if(this.isDestroying)return Ember.RSVP.reject()
e&&Ember.set(this,"memberConnections",Ember.get(e,"elements"))
return e})}_loadConversations(e){const t=e||this.localStorage.getItem(Ie)
if(t)return this._filterConversationsBy(t).then(()=>{this.isDestroying||this.tracking.firePageViewEvent(Ae.OVERLAY_CONVERSATION_FILTERED_LIST[t])})
let n
if(this.enableReloadConversationsWithAutotracking)n=this.msgDataManager.allConversationsCollection
else{n=this.msgDataManager.initConversationCollection({name:Pe.ALL})
Ember.set(this,"_allConversationCollection",n)}const s=n.metadata?Ember.RSVP.resolve():n.load({count:20})
Ember.set(this,De.ALL,n)
return s.finally(()=>{this.isDestroying||Ember.set(this,"conversationsLoaded",!0)})}_loadConversationBundles(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0]
const t=this.msgDataManager.getConversationBundleByTargetUrl(Ne.URL_PENDING)
if(!e&&t){Ember.setProperties(this,{pendingMessageRequestBundle:t})
return Ember.RSVP.resolve()}return this.msgDataManager.fetchConversationBundles().then(()=>{this.isDestroying||Ember.set(this,"pendingMessageRequestBundle",this.msgDataManager.getConversationBundleByTargetUrl(Ne.URL_PENDING))})}_loadMessageRequestConversations(e){const t={q:"systemLabel",type:e,excludedSystemLabelTypes:["SPAM","ARCHIVE"]},n=this.msgDataManager.initConversationCollection({name:e,initialQuery:t})
Ember.set(this,e,n)
return n.load(t).then(e=>!this.isDestroying&&e)}_isMessagingFormFocused(){if(r.default){const e=document.activeElement&&document.activeElement.classList
return e&&e.contains("msg-messaging-form__message")}return!1}_onWindowBlur(){this._isMessagingFormFocused()&&document.activeElement.blur()}_onWindowFocus(){this.documentTitle.resetTitle()}_handleVisibilityChange(){(0,l.default)()?this._isMessagingFormFocused()&&document.activeElement.blur():this.enableTabChangeSyncRefactor||this._reloadOpenConversationEvents()}_reloadOpenConversationEvents(){return(Ember.get(this,"conversationBubbleLayoutManager.openBubbles")||[]).forEach(e=>{if(e.conversation&&Ember.get(e.conversation,"id")){const t=Ember.get(e.conversation,"id")
this.msgDataManager.initEventCollection({name:`${t}`,conversationId:t}).load({reload:!0})}})}_realtimeConversationCreated(e){const t=r.default&&document.hasFocus()&&!(0,l.default)()
if(Ember.get(e,"isInMail")&&!t){this._playSound(c.notificationSounds.RECEIVE)
this._updateDocumentTitle(e)
return!1}if(Ember.get(e,"muted")||!Ember.get(e,"isM2M")&&!Ember.get(e,"isInmailReply"))return!1
const n=this.conversationBubbleLayoutManager.getBubbleByConversation(e),{isMessagingRoute:s}=this
let a=!1
if(n){if(n.isActive&&!n.isMinimized&&t)this.msgOverlay.markConversationAsRead(n)
else{Ember.set(n,"hasUnseenMessages",!0)
s||(a=!0)}}else if(!s&&!Ember.get(e,"isPendingMessageRequest")&&!Ember.get(e,"isDeclinedMessageRequest")){this._createConversationBubble({conversation:e,focusInputOnInit:!1,hasUnseenMessages:!0,isJumbo:Ember.get(e,"isManyToManyConvo"),isMinimized:!this.popupsAreEnabled,isTriggeredByRealtime:!0})
a=!0}if(a&&!this.unreadBadgerEnabled){this.badging.incrementBadge("messaging")
this.runTask(()=>{this.msgOverlay.setUnseenConvoCountFromBadge()})}t||this._updateDocumentTitle(e)
this._playSound(c.notificationSounds.RECEIVE)
return!0}_playSound(e){this.soundsEnabled&&e&&c.soundPlaybackUtils.playSound(e)}_updateDocumentTitle(e){let t,n
this.runTask(()=>{if(!this.isDestroying){if(Ember.get(e,"isManyToManyConvo")){t="i18n_participant_messaged_group"
n=Ember.get(e,"latestEvent.from.name")}else{t="i18n_participant_messaged_you"
n=Ember.get(e,"participantNames.firstObject")}const s=this.i18n.lookupTranslation("component","msg-overlay@messaging-overlay-container",t),a=jSecure.htmlUnencode(s([{senderName:n}]))
this.documentTitle.addTitle(a)}})}_createConversationBubble(e){this.msgOverlay.createConversationBubble(e).then(t=>{this.isDestroying||!t&&e.isTriggeredByRealtime&&(this.realtimeMsgNotAutoOpened=!0)})}_newConversation(){let{messageRecipients:e,message:t="",subject:n="",messageActions:s={},conversationId:a="",conversationPromise:o,isConversationLoadingState:i=!1,isConversationPreview:r=!1,previewKey:l="",isOpenedFromMsgButton:c=!1,isInMailCompose:m=!1,isJumbo:d=!1,contextualTrackingInfo:u,msgAdapterOptions:p,placeholderText:b,firstMessageTrackingReferrer:g,invitationUrn:h,update:y=null,forwardedEvent:v,forwardedAttachments:f=[],trackingObject:_,messageContext:E,showGroupEditScreen:C,groupConversationName:w,composeOptionType:M,inMailComposeViewContext:O}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},S=e||[]
Ember.isArray(S)||(S=[S])
if(!C){const e=this.conversationBubbleLayoutManager.getBubbleByRecipients(S)
if(e){if(!t)return
this.msgOverlay.closeConversationBubble(e)}}const k=!h&&m,R=d||k||v&&Ember.get(v,"isInMail")
this._createConversationBubble({message:t,subject:n,messageActions:s,placeholderText:b,msgAdapterOptions:p,contextualTrackingInfo:u,messageRecipients:S,isOpenedFromMsgButton:c,focusInputOnInit:!0,conversationId:a,conversationPromise:o,isConversationLoadingState:i,isConversationPreview:r,previewKey:l,isMinimized:!1,isJumbo:R,isInMailCompose:k,isNew:!0,hasUnseenMessages:!1,firstMessageTrackingReferrer:g,invitationUrn:h,update:y,forwardedEvent:v,attachments:f,messageContext:E,trackingObject:_,showGroupEditScreen:C,groupConversationName:w,composeOptionType:M,inMailComposeViewContext:O})}_showFirstMessage(){const{i18n:e,firstMessage:t}=this,n=Ember.get(t.getMessageInfo()||{},"inviter")
n&&this._newConversation({messageRecipients:n,message:e.lookupTranslation("component","msg-overlay@messaging-overlay-container","i18n_first_message_prompt_doing_well")()})}_closeBubbleByConversation(e){this.conversationBubbleLayoutManager.closeBubbleByConversation(e)}openConvoFiltersDropdown(e){return this._filterConversationsBy(e)}openConversation(e){this.realtimeMsgNotAutoOpened&&Ember.set(this,"realtimeMsgNotAutoOpened",!1)
if(e){this.msgDataManager.fetchParticipantReceipts(Ember.get(e,"id")).then(t=>{this.useSeenReceiptManager?this.msgDataManager.seenReceiptsManager.setSeenReceipts(Ember.get(e,"entityUrn"),t):Ember.set(e,"receipts",t)})
const t={conversation:e,isInMail:Ember.get(e,"latestEvent.isInMail"),isMinimized:!1,focusInputOnInit:!0},n=this.conversationBubbleLayoutManager.getBubbleByConversation(e)
if(n)this.msgOverlay.unminimizeAndReadConversation(n)
else{Ember.set(t,"isJumbo",Ember.get(e,"isManyToManyConvo")||Ember.get(e,"latestEvent.isInMail")||Ember.get(e,"isSpinMail")||Ember.get(e,"isSponsoredConversation")&&1===Ember.get(e,"sortedEvents").length)
this._createConversationBubble(t)}Ember.get(e,"latestEvent.isInMail")&&this.tracking.fireInteractionEvent(ke.OPEN_INMAIL)}else this._createConversationBubble({isJumbo:!1,isMinimized:!1})}loadMessageRequestConversationList(e){return this._loadMessageRequestConversations(e)}openConversationPreview(e){let{previewKey:t,focusMode:n=!1}=e
this._showConversationPreview(t,n)}openNewLoadingBubble(e){this._newConversation(e)}newConversation(){let{recipients:e,messageActions:t,contextualTrackingInfo:n,conversationPromise:s,isConversationLoadingState:a,isConversationPreview:o,previewKey:i,isInMailCompose:r,forwardedEvent:l,showGroupEditScreen:c,isJumbo:m,composeOptionType:d}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}
this._newConversation({conversationPromise:s,isConversationLoadingState:a,isConversationPreview:o,previewKey:i,isInMailCompose:r,contextualTrackingInfo:n,forwardedEvent:l,messageActions:t,messageRecipients:e,showGroupEditScreen:c,isJumbo:m,composeOptionType:d})}handleSuccessfulDiscardRequest(e){this.conversationBubbleLayoutManager.closeBubbleByConversation(e)
this.msgDataManager.removeConversation(e).unloadRecord()}closeBubble(e){Ember.set(this,"focusedMessagingMode",!1)
this.msgOverlay.closeConversationBubble(e)}loadMoreConversations(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:De.ALL
return Ember.get(this,e).loadMore()}refetchOverlayData(){Ember.setProperties(this,{dataFetchInProgress:!1,dataLoaded:!1,showFailedState:!1})
this._fetchOverlayData()}},ee=(0,s.default)(Z.prototype,"assetLoader",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),te=(0,s.default)(Z.prototype,"i18n",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ne=(0,s.default)(Z.prototype,"badgeService",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),se=(0,s.default)(Z.prototype,"authenticatedUser",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ae=(0,s.default)(Z.prototype,"store",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),oe=(0,s.default)(Z.prototype,"identityStore",[_],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ie=(0,s.default)(Z.prototype,"lix",[E],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),re=(0,s.default)(Z.prototype,"router",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),le=(0,s.default)(Z.prototype,"tracking",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ce=(0,s.default)(Z.prototype,"legoTracking",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),me=(0,s.default)(Z.prototype,"msgOverlay",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),de=(0,s.default)(Z.prototype,"msgBadgeManager",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ue=(0,s.default)(Z.prototype,"heathrow",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),pe=(0,s.default)(Z.prototype,"localStorage",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),be=(0,s.default)(Z.prototype,"documentTitle",[T],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ge=(0,s.default)(Z.prototype,"firstMessage",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),he=(0,s.default)(Z.prototype,"msgDataManager",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ye=(0,s.default)(Z.prototype,"clientSensor",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(Z.prototype,"sortedConversations",[x],Object.getOwnPropertyDescriptor(Z.prototype,"sortedConversations"),Z.prototype),ve=(0,s.default)(Z.prototype,"hasMoreConversations",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),fe=(0,s.default)(Z.prototype,"popupsAreEnabled",[N],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_e=(0,s.default)(Z.prototype,"soundsEnabled",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ee=(0,s.default)(Z.prototype,"suggestedRecipients",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Ce=(0,s.default)(Z.prototype,"isMessagingRoute",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),we=(0,s.default)(Z.prototype,"isProfileRoute",[j],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Me=(0,s.default)(Z.prototype,"isContextualRoute",[F],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Oe=(0,s.default)(Z.prototype,"forcedMinimize",[q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(Z.prototype,"openConvoFiltersDropdown",[U],Object.getOwnPropertyDescriptor(Z.prototype,"openConvoFiltersDropdown"),Z.prototype),(0,s.default)(Z.prototype,"openConversation",[H],Object.getOwnPropertyDescriptor(Z.prototype,"openConversation"),Z.prototype),(0,s.default)(Z.prototype,"loadMessageRequestConversationList",[V],Object.getOwnPropertyDescriptor(Z.prototype,"loadMessageRequestConversationList"),Z.prototype),(0,s.default)(Z.prototype,"openConversationPreview",[K],Object.getOwnPropertyDescriptor(Z.prototype,"openConversationPreview"),Z.prototype),(0,s.default)(Z.prototype,"openNewLoadingBubble",[Y],Object.getOwnPropertyDescriptor(Z.prototype,"openNewLoadingBubble"),Z.prototype),(0,s.default)(Z.prototype,"newConversation",[G],Object.getOwnPropertyDescriptor(Z.prototype,"newConversation"),Z.prototype),(0,s.default)(Z.prototype,"handleSuccessfulDiscardRequest",[W],Object.getOwnPropertyDescriptor(Z.prototype,"handleSuccessfulDiscardRequest"),Z.prototype),(0,s.default)(Z.prototype,"closeBubble",[J],Object.getOwnPropertyDescriptor(Z.prototype,"closeBubble"),Z.prototype),(0,s.default)(Z.prototype,"loadMoreConversations",[X],Object.getOwnPropertyDescriptor(Z.prototype,"loadMoreConversations"),Z.prototype),(0,s.default)(Z.prototype,"refetchOverlayData",[Q],Object.getOwnPropertyDescriptor(Z.prototype,"refetchOverlayData"),Z.prototype),Z))||$)||$)
e.default=je
Ember._setComponentTemplate(Se,je)})
define("msg-overlay/components/novice-state",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
const t=Ember.HTMLBars.template({id:"OvTVIuxK",block:'{"symbols":["connection","@memberConnections","@newConversation","&attrs"],"statements":[[7,"div",false],[12,"class","text-align-center p5"],[13,4],[8],[0,"\\n"],[4,"if",[[23,2,[]]],null,{"statements":[[0,"    "],[7,"div",true],[10,"class","mb4"],[8],[0,"\\n"],[4,"each",[[23,2,[]]],null,{"statements":[[0,"        "],[5,"ember-vector-images@lazy-image",[],[["@image","@class","@ghostType","@width"],[[23,1,["miniProfile","picture"]],"EntityPhoto-circle-2-stackedFacepile","person",40]]],[0,"\\n"]],"parameters":[1]},null],[0,"    "],[9],[0,"\\n    "],[7,"h4",true],[10,"class","t-16 t-black t-bold mb3"],[8],[0,"\\n      "],[1,[28,"t",["i18n_reach_out","msg-overlay/components/novice-state"],null],false],[0,"\\n    "],[9],[0,"\\n    "],[7,"p",true],[10,"class","t-14 t-black--light t-normal mb5"],[8],[0,"\\n      "],[1,[28,"t",["i18n_has_connections","msg-overlay/components/novice-state"],null],false],[0,"\\n    "],[9],[0,"\\n    "],[5,"artdeco-button@artdeco-button",[],[["@click"],[[23,3,[]]]],{"statements":[[0,"\\n      "],[1,[28,"t",["i18n_send_message","msg-overlay/components/novice-state"],null],false],[0,"\\n    "]],"parameters":[]}],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[7,"p",true],[10,"class","t-14 t-black--light t-normal"],[8],[0,"\\n      "],[1,[28,"t",["i18n_no_connections","msg-overlay/components/novice-state"],null],false],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]}],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/novice-state.hbs"}})
var n=Ember._setComponentTemplate(t,Ember._templateOnlyComponent())
e.default=n})
define("msg-overlay/components/query-history-item",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
const t=Ember.HTMLBars.template({id:"7rf4yNyi",block:'{"symbols":["&attrs","@onMouseMove","@onClick","@queryKeyword"],"statements":[[7,"li",false],[12,"class","msg-overlay-list-bubble-search__list-item display-flex align-items-center pv2 ph3"],[13,1],[3,"on",["mousemove",[23,2,[]]]],[3,"on",["click",[23,3,[]]]],[8],[0,"\\n  "],[7,"div",true],[10,"class","msg-overlay-list-bubble-search__history-keyword-icon display-flex flex-shrink-zero align-items-center justify-center round"],[8],[0,"\\n    "],[1,[28,"artdeco-icons-web@li-icon",null,[["type","size"],["tag-icon","small"]]],false],[0,"\\n  "],[9],[0,"\\n  "],[7,"p",true],[10,"class","t-12 t-black t-bold pl2 truncate"],[8],[0,"\\n    "],[1,[23,4,[]],false],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/query-history-item.hbs"}})
var n=Ember._setComponentTemplate(t,Ember._templateOnlyComponent())
e.default=n})
define("msg-overlay/components/recommendation-card",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
const t=Ember.HTMLBars.template({id:"1m7fniNT",block:'{"symbols":["@actor","@suggestion","@overlaySidebarEnabled","@impressionTrackingHandler","@messageRecommendation","@interactionTrackingHandler","@isFeedContext"],"statements":[[7,"li",false],[12,"class",[29,[[28,"if",[[23,3,[]],"msg-overlay-list-bubble__convo-item--v2","msg-overlay-list-bubble__convo-item"],null],"  msg-overlay-list-bubble__convo-item--hoverable"]]],[3,"ember-cli-pemberly-tracking@track-impression",[[23,4,[]]],[["routeName","currentRoute"],[[28,"get",[[28,"-get-dynamic-var",["outletState"],null],"render.name"],null],[28,"get",[[28,"-get-dynamic-var",["outletState"],null],"render"],null]]]],[8],[0,"\\n  "],[7,"button",false],[12,"class","msg-conversation-listitem__link msg-overlay-list-bubble__convo-item-link"],[12,"tabindex","0"],[3,"on",["click",[23,5,[]]]],[3,"on",["keydown",[23,5,[]]],[["preventDefault"],[true]]],[3,"ember-cli-pemberly-tracking@track-interaction",["overlay_message_recommendation"],[["onInteract"],[[23,6,[]]]]],[8],[0,"\\n    "],[7,"div",true],[10,"class","msg-conversation-card msg-overlay-list-bubble__convo-card"],[8],[0,"\\n      "],[7,"div",true],[10,"class","msg-conversation-card__presence-entity-container"],[8],[0,"\\n        "],[5,"presence@entity-with-presence",[],[["@classNames","@miniProfile","@size"],["msg-conversation-card__presence-entity",[23,2,["miniProfile"]],[28,"if",[[23,3,[]],3,2],null]]]],[0,"\\n      "],[9],[0,"\\n      "],[7,"div",true],[10,"class","msg-overlay-list-bubble__convo-card-content msg-overlay-list-bubble__contextual-convo-card-content"],[8],[0,"\\n        "],[7,"div",true],[10,"class","msg-overlay-list-bubble__convo-card-content-wrapper"],[8],[0,"\\n          "],[7,"div",true],[10,"class","msg-conversation-card__row"],[8],[0,"\\n            "],[7,"h4",true],[10,"class","truncate t-14 t-black"],[8],[0,"\\n              "],[1,[28,"ember-cli-pemberly-i18n@format-name",null,[["firstName","lastName","type"],[[23,2,["miniProfile","firstName"]],[23,2,["miniProfile","lastName"]],"full"]]],false],[0,"\\n            "],[9],[0,"\\n          "],[9],[0,"\\n\\n          "],[7,"div",true],[10,"class","msg-conversation-card__row"],[8],[0,"\\n            "],[7,"span",true],[10,"class","msg-overlay-list-bubble__message-snippet m0 t-12 t-black--light t-normal block truncate"],[8],[0,"\\n              "],[1,[23,2,["miniProfile","occupation"]],false],[0,"\\n            "],[9],[0,"\\n          "],[9],[0,"\\n\\n          "],[7,"div",true],[10,"class","msg-conversation-card__row"],[8],[0,"\\n"],[4,"unless",[[23,7,[]]],null,{"statements":[[4,"if",[[23,2,["reasons"]]],null,{"statements":[[0,"            "],[7,"span",true],[10,"class","t-12 t-black--light t-normal t-italic block truncate mt1"],[8],[0,"\\n              "],[1,[28,"if",[[23,2,["isCurrentEmployee"]],[28,"t",["works_at","msg-overlay/components/recommendation-card"],[["actor"],[[23,1,[]]]]],[28,"if",[[23,2,["isPreviousEmployee"]],[28,"t",["has_worked_at","msg-overlay/components/recommendation-card"],[["actor"],[[23,1,[]]]]],[28,"if",[[23,2,["isConnectingMember"]],[28,"t",["knows_people_at","msg-overlay/components/recommendation-card"],[["connectionCount","actor"],[[23,2,["suggestionReason","numSecondDegreeMembers"]],[23,1,[]]]]]],null]],null]],null],false],[0,"\\n            "],[9],[0,"\\n"]],"parameters":[]},null]],"parameters":[]},null],[0,"          "],[9],[0,"\\n        "],[9],[0,"\\n      "],[9],[0,"\\n    "],[9],[0,"\\n  "],[9],[0,"\\n"],[9]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/recommendation-card.hbs"}})
var n=Ember._setComponentTemplate(t,Ember._templateOnlyComponent())
e.default=n})
define("msg-overlay/components/search-connection-item",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
const t=Ember.HTMLBars.template({id:"CzW2lSgj",block:'{"symbols":["@caption","&attrs","@onMouseMove","@onClick","@profile"],"statements":[[7,"li",false],[12,"class","msg-overlay-list-bubble-search__list-item display-flex align-items-center pv2 ph3"],[13,2],[3,"on",["mousemove",[23,3,[]]]],[3,"on",["click",[23,4,[]]]],[8],[0,"\\n  "],[7,"div",true],[10,"class","msg-overlay-search-result-picture circle display-flex flex-shrink-zero"],[8],[0,"\\n    "],[5,"ember-vector-images@lazy-image",[],[["@classNames","@image","@alt","@ghostType","@desiredWidth"],["msg-overlay-search-result-picture__background-img full-width full-height round",[23,5,["picture"]],[28,"t",["i18n_fullname","msg-overlay/components/search-connection-item"],[["name"],[[28,"global-helpers@name",[[23,5,[]]],null]]]],"person",100]]],[0,"\\n  "],[9],[0,"\\n\\n  "],[7,"div",true],[10,"class","display-flex overflow-hidden pv1 pl2"],[8],[0,"\\n    "],[7,"h4",true],[10,"class","msg-overlay-search-result-name t-12 t-black t-bold flex-shrink-zero truncate"],[8],[0,"\\n      "],[1,[28,"t",["i18n_fullname","msg-overlay/components/search-connection-item"],[["name"],[[28,"global-helpers@name",[[23,5,[]]],null]]]],false],[0,"\\n    "],[9],[0,"\\n"],[4,"if",[[23,1,[]]],null,{"statements":[[0,"      "],[7,"span",true],[10,"class","t-12 t-black--light t-normal flex-shrink-zero ph1 truncate"],[8],[0,"\\n        "],[1,[28,"t",["dot","msg-overlay/components/search-connection-item"],null],false],[0,"\\n      "],[9],[0,"\\n      "],[7,"p",true],[10,"class","t-12 t-black--light t-normal truncate"],[8],[0,"\\n        "],[1,[23,1,[]],false],[0,"\\n      "],[9],[0,"\\n"]],"parameters":[]},null],[0,"  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/search-connection-item.hbs"}})
var n=Ember._setComponentTemplate(t,Ember._templateOnlyComponent())
e.default=n})
define("msg-overlay/components/sortable-group",["exports","ember-sortable/components/sortable-group"],function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var n=t.default
e.default=n})
define("msg-overlay/components/sortable-handle",["exports","ember-sortable/components/sortable-handle"],function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var n=t.default
e.default=n})
define("msg-overlay/components/sortable-item",["exports","ember-sortable/components/sortable-item"],function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var n=t.default
e.default=n})
define("msg-overlay/components/spinmail/sponsored-conversation-bubble",["exports","@babel/runtime/helpers/esm/initializerDefineProperty","@babel/runtime/helpers/esm/defineProperty","@babel/runtime/helpers/esm/applyDecoratedDescriptor","@babel/runtime/helpers/esm/initializerWarningHelper","@ember-decorators/component","msg-data/utils/spinmail/sponsored-conversation-properties","msg-ui/utils/conversation-properties","global-utils/utils/api-compat","msg-shared/utils/constants","msg-shared/utils/custom-tracking"],function(e,t,n,s,a,o,i,r,l,c,m){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var d,u,p,b,g,h,y,v,f,_,E,C,w,M,O,S,k,R,T
const P=Ember.HTMLBars.template({id:"lCgVNzMI",block:'{"symbols":["scroller","list","@conversation","@initialEventsRequest","@isCompanySender"],"statements":[[5,"msg-ui@message-list-scroller",[],[["@initialEventsRequest","@conversation","@latestEvent","@typingParticipants","@loadMore"],[[23,4,[]],[23,3,[]],[23,3,["latestEvent"]],[23,3,["typingParticipants"]],[28,"action",[[23,0,[]],"loadMoreMessages"],null]]],{"statements":[[0,"\\n    "],[5,"msg-ui@message-list",[],[["@isOverlay","@isLoading","@conversation","@isCompanySender","@showQuickReplies","@resendMessage"],[true,[23,1,["props","isLoading"]],[23,3,[]],[23,5,[]],false,[28,"action",[[23,0,[]],"resendMessage"],null]]],{"statements":[[0,"\\n"],[4,"if",[[23,2,["props","groupedEvent","event","isSponsoredMessage"]]],null,{"statements":[[0,"      "],[5,"msg-spinmail@sponsored-conversation/sponsored-message-actions",[],[["@conversation","@customContent","@saveSponsoredMessageReply"],[[23,3,[]],[23,2,["props","groupedEvent","event","eventContent","customContent"]],[28,"action",[[23,0,[]],"replyToSponsoredMessage"],null]]]],[0,"\\n"]],"parameters":[]},null],[0,"  "]],"parameters":[2]}],[0,"\\n\\n"],[4,"if",[[23,1,["props","hasNewMessages"]]],null,{"statements":[[0,"    "],[7,"div",true],[10,"class","msg-s-message-list__new-message msg-animation__indicator"],[8],[0,"\\n      "],[7,"span",true],[10,"class","visually-hidden"],[8],[0,"\\n        "],[1,[28,"t",["a11y_new_messages","msg-overlay/components/spinmail/sponsored-conversation-bubble"],null],false],[0,"\\n      "],[9],[0,"\\n      "],[5,"artdeco-button@artdeco-button",[],[["@type","@class","@size","@controlType","@click","@icon"],["primary","msg-s-message-list__new-message-button block",1,"button",[28,"action",[[23,0,[]],[23,1,["actions","scrollToNewMessages"]]],null],"arrow-down-icon"]],{"statements":[[0,"\\n        "],[1,[28,"t",["i18n_new_messages_v2","msg-overlay/components/spinmail/sponsored-conversation-bubble"],null],false],[0,"\\n      "]],"parameters":[]}],[0,"\\n    "],[9],[0,"\\n"]],"parameters":[]},null]],"parameters":[1]}],[0,"\\n"],[5,"msg-spinmail@legal-text",[],[["@classNames","@legalText","@conversationId","@isSponsoredConversation"],["mh4",[23,0,["legalText"]],[23,3,["id"]],[23,3,["isSponsoredConversation"]]]]],[0,"\\n"],[4,"if",[[23,3,["blocked"]]],null,{"statements":[[0,"  "],[5,"msg-ui@conversation-unspam",[],[["@conversation"],[[23,3,[]]]]],[0,"\\n"]],"parameters":[]},null]],"hasEval":false}',meta:{moduleName:"msg-overlay/components/spinmail/sponsored-conversation-bubble.hbs"}}),{ACTION_TYPES:D,CONTROL_NAMES:I,LIX:{ENABLE_OLYMPUS_KEYS:x}}=c.default
let A=(d=(0,o.tagName)(""),u=Ember.inject.service("msg-data@data-manager"),p=Ember.inject.service("global-services@a11y-notification"),b=Ember.inject.service("i18n"),g=Ember.inject.service("tracking"),h=Ember.inject.service("authentication@authenticated-user"),y=Ember.inject.service("lix"),v=Ember.computed("conversation").readOnly(),f=Ember._action,_=Ember._action,E=Ember._action,d(C=(w=class extends Ember.Component{constructor(){super(...arguments);(0,t.default)(this,"msgDataManager",M,this);(0,t.default)(this,"a11yNotification",O,this);(0,t.default)(this,"i18n",S,this);(0,t.default)(this,"tracking",k,this);(0,t.default)(this,"authenticatedUser",R,this);(0,t.default)(this,"lix",T,this)}get legalText(){return(0,i.getSponsoredConversationLegalTextFromConversation)(this.conversation)}init(){super.init(...arguments)
Ember.set(this,"enableOlympusKeys",this.lix.getTreatmentIsEnabled(x))}a11yNotify(e){const t=this.i18n.lookupTranslation("component","msg-ui@i18n-shared",e)
this.a11yNotification.setTextInLiveRegion(t([]))}loadMoreMessages(){return this.conversation&&Ember.get(this,"conversation.id")?this.msgDataManager.getEventCollection(Ember.get(this,"conversation.id")).loadMore():Ember.RSVP.reject()}resendMessage(e){Ember.set(e,"createdAt",Date.now())
this.msgDataManager.retrySaveMessage(e)}replyToSponsoredMessage(e){e.messageReplyType=(0,r.getReplyMessageType)(this.conversation)
e.receivedMessage=this.newestMessage
e.senderID=(0,l.entityUrnToId)(Ember.get(this,"authenticatedUser.miniProfile.entityUrn"))
e.conversation=this.conversation
m.default.fireDetailActionEvent({actionType:D.SEND_MESSAGE,controlName:I.CONVERSATION.SEND,conversation:e.conversation,shouldUseOlympusKeys:this.enableOlympusKeys,trackingService:this.tracking})
const t=Ember.get(e.conversation,"latestParticipants").map(e=>(0,l.entityUrnToId)(Ember.get(e,"miniProfile.entityUrn")))
e.senderID=Ember.get(this,"authenticatedUser.miniProfile.entityUrn")
const n=e
return this.msgDataManager.createAndSaveMessageEvent({participants:t,conversation:this.conversation,msgData:n}).then(()=>{this.a11yNotify("i18n_a11y_send_successful")}).catch(e=>{this.a11yNotify("i18n_a11y_send_failure")
throw e})}},M=(0,s.default)(w.prototype,"msgDataManager",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),O=(0,s.default)(w.prototype,"a11yNotification",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),S=(0,s.default)(w.prototype,"i18n",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),k=(0,s.default)(w.prototype,"tracking",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),R=(0,s.default)(w.prototype,"authenticatedUser",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),T=(0,s.default)(w.prototype,"lix",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),(0,s.default)(w.prototype,"legalText",[v],Object.getOwnPropertyDescriptor(w.prototype,"legalText"),w.prototype),(0,s.default)(w.prototype,"loadMoreMessages",[f],Object.getOwnPropertyDescriptor(w.prototype,"loadMoreMessages"),w.prototype),(0,s.default)(w.prototype,"resendMessage",[_],Object.getOwnPropertyDescriptor(w.prototype,"resendMessage"),w.prototype),(0,s.default)(w.prototype,"replyToSponsoredMessage",[E],Object.getOwnPropertyDescriptor(w.prototype,"replyToSponsoredMessage"),w.prototype),w))||C)
e.default=A
Ember._setComponentTemplate(P,A)})
define.alias("ember-cli-search-typeahead/components/type-ahead","msg-overlay/components/type-ahead")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-auto-complete","msg-overlay/components/typeahead/typeahead-auto-complete")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-city","msg-overlay/components/typeahead/typeahead-city")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-company","msg-overlay/components/typeahead/typeahead-company")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-country","msg-overlay/components/typeahead/typeahead-country")
define("msg-overlay/components/typeahead/typeahead-current-location",["exports","ember-cli-search-typeahead/templates/components/typeahead/typeahead-current-location","ember-cli-search-typeahead/components/typeahead/typeahead-current-location"],function(e,t,n){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var s=n.default.extend({_getI18nText(e){return this.get("i18n").getMessageRenderer(t.default,e)([])}})
e.default=s})
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-degree","msg-overlay/components/typeahead/typeahead-degree")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-field-of-study","msg-overlay/components/typeahead/typeahead-field-of-study")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-geo","msg-overlay/components/typeahead/typeahead-geo")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-group","msg-overlay/components/typeahead/typeahead-group")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-hit","msg-overlay/components/typeahead/typeahead-hit")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-industry","msg-overlay/components/typeahead/typeahead-industry")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-input","msg-overlay/components/typeahead/typeahead-input")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-industry","msg-overlay/components/typeahead/typeahead-job-function")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-language","msg-overlay/components/typeahead/typeahead-language")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-postal-code","msg-overlay/components/typeahead/typeahead-postal-code")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-profile","msg-overlay/components/typeahead/typeahead-profile")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-region","msg-overlay/components/typeahead/typeahead-region")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-result-image","msg-overlay/components/typeahead/typeahead-result-image")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-results","msg-overlay/components/typeahead/typeahead-results")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-school","msg-overlay/components/typeahead/typeahead-school")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-showcase","msg-overlay/components/typeahead/typeahead-showcase")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-site-feature","msg-overlay/components/typeahead/typeahead-site-feature")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-skill","msg-overlay/components/typeahead/typeahead-skill")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-state","msg-overlay/components/typeahead/typeahead-state")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-suggestion","msg-overlay/components/typeahead/typeahead-suggestion")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-title","msg-overlay/components/typeahead/typeahead-title")
define.alias("ember-cli-search-typeahead/components/typeahead/typeahead-topic","msg-overlay/components/typeahead/typeahead-topic")
define("msg-overlay/config/environment",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
let t
try{const e="msg-overlay/config/environment",n=document.querySelector('meta[name="'+e+'"]').getAttribute("content")
t=JSON.parse(unescape(n))}catch(s){t={sparkPlaceholders:{includeHashes:["assets/media-player.amd.js"]}}}var n=t
e.default=n})
define.alias("ember-m3/adapters/interop-debug-adapter","msg-overlay/data-adapter")
define("msg-overlay/engine",["exports","@babel/runtime/helpers/esm/defineProperty","ember-strict-resolver","ember-engines/engine","ember-load-initializers"],function(e,t,n,s,a){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
const o="msg-overlay"
class i extends s.default{constructor(){super(...arguments);(0,t.default)(this,"modulePrefix",o);(0,t.default)(this,"Resolver",n.default)}}(0,a.default)(i,o)
var r=i
e.default=r})
define.alias("@css-blocks/ember-cli/helpers/-css-blocks-classnames","msg-overlay/helpers/-css-blocks-classnames")
define.alias("@css-blocks/ember-cli/helpers/-css-blocks-concat","msg-overlay/helpers/-css-blocks-concat")
define.alias("ember-truth-helpers/helpers/and","msg-overlay/helpers/and")
define.alias("ember-cli-pemberly-i18n/helpers/bidi-dir","msg-overlay/helpers/bidi-dir")
define.alias("ember-truth-helpers/helpers/equal","msg-overlay/helpers/eq")
define.alias("ember-cli-pemberly-i18n/helpers/format-currency","msg-overlay/helpers/format-currency")
define.alias("ember-cli-pemberly-i18n/helpers/format-date","msg-overlay/helpers/format-date")
define.alias("ember-cli-pemberly-i18n/helpers/format-name","msg-overlay/helpers/format-name")
define.alias("ember-cli-pemberly-i18n/helpers/format-number","msg-overlay/helpers/format-number")
define.alias("ember-cli-pemberly-i18n/helpers/format-time","msg-overlay/helpers/format-time")
define.alias("ember-semaphore/helpers/format-title","msg-overlay/helpers/format-title")
define.alias("ember-cli-pemberly-i18n/helpers/format-truncate","msg-overlay/helpers/format-truncate")
define.alias("ember-truth-helpers/helpers/gt","msg-overlay/helpers/gt")
define.alias("ember-truth-helpers/helpers/gte","msg-overlay/helpers/gte")
define.alias("ember-cli-pemberly-i18n/helpers/is-any-locale","msg-overlay/helpers/is-any-locale")
define.alias("ember-truth-helpers/helpers/is-array","msg-overlay/helpers/is-array")
define.alias("ember-cli-pemberly-i18n/helpers/is-cjk-language","msg-overlay/helpers/is-cjk-language")
define.alias("ember-truth-helpers/helpers/is-empty","msg-overlay/helpers/is-empty")
define.alias("ember-truth-helpers/helpers/is-equal","msg-overlay/helpers/is-equal")
define.alias("ember-cli-pemberly-i18n/helpers/is-rtl-content","msg-overlay/helpers/is-rtl-content")
define.alias("ember-cli-pemberly-i18n/helpers/is-rtl-language","msg-overlay/helpers/is-rtl-language")
define.alias("artdeco-icons-web/helpers/li-icon","msg-overlay/helpers/li-icon")
define.alias("ember-truth-helpers/helpers/lt","msg-overlay/helpers/lt")
define.alias("ember-truth-helpers/helpers/lte","msg-overlay/helpers/lte")
define.alias("ember-media-player/helpers/media-action-autoplay","msg-overlay/helpers/media-action-autoplay")
define.alias("ember-media-player/helpers/media-action-seekto","msg-overlay/helpers/media-action-seekto")
define.alias("ember-truth-helpers/helpers/not-equal","msg-overlay/helpers/not-eq")
define.alias("ember-truth-helpers/helpers/not","msg-overlay/helpers/not")
define.alias("ember-truth-helpers/helpers/or","msg-overlay/helpers/or")
define.alias("ember-app-scheduler/helpers/route-idle","msg-overlay/helpers/route-idle")
define.alias("ember-simple-set-helper/helpers/set","msg-overlay/helpers/set")
define.alias("ember-cli-pemberly-i18n/helpers/t-link-to","msg-overlay/helpers/t-link-to")
define.alias("ember-cli-pemberly-i18n/helpers/t-make-name","msg-overlay/helpers/t-make-name")
define.alias("ember-cli-pemberly-i18n/helpers/t","msg-overlay/helpers/t")
define.alias("ember-truth-helpers/helpers/xor","msg-overlay/helpers/xor")
define("msg-overlay/initializers/artdeco",["exports","artdeco-eyeglass"],function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.initialize=a
e.default=void 0
const n=[t.default.contextClasses,t.default.floatingLabel,t.default.focusOutline]
function s(e,t){const s=e[t]
e[t]=function(){n.forEach(e=>e&&"function"==typeof e.teardown&&e.teardown())
s&&"function"==typeof s&&s.call(e)}}function a(e){if("undefined"!=typeof document){n.forEach(e=>e.install())
"function"==typeof e.willDestroy?s(e,"willDestroy"):"function"==typeof e.destroy&&s(e,"destroy")}}var o={name:"artdeco",initialize:a}
e.default=o})
define("msg-overlay/initializers/ember-faker",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.initialize=t
e.default=void 0
function t(){}var n={name:"ember-faker",initialize:t}
e.default=n})
define.alias("ember-cli-pemberly-i18n/initializers/i18n","msg-overlay/initializers/i18n")
define("msg-overlay/initializers/icons",["exports","artdeco-icons-web/src/icons","msg-overlay/config/environment"],function(e,t,n){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
function s(e){throw e}var a={name:"icons",initialize:function(){const{environment:e,APP:a}=n.default
let o,i
a&&({artdecoCustomSpriteUrl:o,artdecoCustomSpriteName:i}=a)
const r="test"!==e
t.default.load(r,o,i).catch(s)}}
e.default=a})
define.alias("ember-m3/initializers/m3-store","msg-overlay/initializers/m3-store")
define("msg-overlay/initializers/override-safestring",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.initialize=a
e.default=void 0
const t="ember-glimmer",n="ember-htmlbars/utils/string",s="@ember/-internals/glimmer"
function a(){let e,a=Ember.__loader.require.has
if(a(s))e=Ember.__loader.require(s).SafeString
else if(a(t))e=Ember.__loader.require(t).SafeString
else{if(!a(n))throw new Error("Cannot locate SafeString class for overriding")
e=Ember.__loader.require(n).SafeString}e.prototype.toHTML=function(){return jSecure.sanitizeHTML(this.toString())}
e.prototype.toString=function(){return`${this.string}`}}var o={name:"override-safestring",initialize:a}
e.default=o})
define("msg-overlay/instance-initializers/-t-link-to",["exports","ember-stdlib/utils/is-browser"],function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.initialize=n
e.default=void 0
function n(e){t.default&&e.lookup("service:-t-link-to")}var s={name:"-t-link-to",initialize:n}
e.default=s})
define.alias("@ember/render-modifiers/modifiers/did-insert","msg-overlay/modifiers/did-insert")
define.alias("@ember/render-modifiers/modifiers/did-update","msg-overlay/modifiers/did-update")
define.alias("@ember/render-modifiers/modifiers/will-destroy","msg-overlay/modifiers/will-destroy")
define.alias("ember-cli-pemberly-i18n/services/-t-link-to","msg-overlay/services/-t-link-to")
define.alias("artdeco-hoverables/services/artdeco-hoverable","msg-overlay/services/artdeco-hoverable")
define.alias("artdeco-modal/services/artdeco-modal","msg-overlay/services/artdeco-modal")
define.alias("artdeco-toast/services/artdeco-toast-time-ago","msg-overlay/services/artdeco-toast-time-ago")
define.alias("artdeco-toast/services/artdeco-toast","msg-overlay/services/artdeco-toast")
define.alias("client-sensor-web/services/client-sensor","msg-overlay/services/client-sensor")
define.alias("ember-date-service/services/date","msg-overlay/services/date")
define.alias("ember-cli-pemberly-i18n/services/formatter","msg-overlay/services/formatter")
define.alias("ember-cli-pemberly-i18n/services/i18n","msg-overlay/services/i18n")
define.alias("@linkedin/ember-pem/services/internal-event-utils","msg-overlay/services/internal-event-utils")
define.alias("@linkedin/ember-pem/services/internal-pem-tracking","msg-overlay/services/internal-pem-tracking")
define.alias("ember-cli-pemberly-i18n/services/locale","msg-overlay/services/locale")
define.alias("ember-m3/services/m3-schema-manager","msg-overlay/services/m3-schema-manager")
define.alias("ember-media-player/services/media-player","msg-overlay/services/media-player")
define.alias("ember-cli-search-typeahead/services/modal-manager","msg-overlay/services/modal-manager")
define.alias("@linkedin/ember-pem/services/pem-tracking","msg-overlay/services/pem-tracking")
define.alias("ember-media-player/services/static-asset-loader","msg-overlay/services/static-asset-loader")
define.alias("ember-cli-pemberly-m3/services/store","msg-overlay/services/store")
define.alias("ember-singularity/services/unified-event-handler","msg-overlay/services/unified-event-handler")
define("msg-overlay/templates/application",["exports"],function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.default=void 0
var t=Ember.HTMLBars.template({id:"tlM46Akp",block:'{"symbols":[],"statements":[[1,[22,"msg-overlay@messaging-overlay-container"],false],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"msg-overlay/templates/application.hbs"}})
e.default=t})
define.alias("client-sensor-web/utils/counter-buffer","msg-overlay/utils/counter-buffer")
define.alias("client-sensor-web/utils/helpers","msg-overlay/utils/helpers")
define("msg-overlay/utils/recommendation-helpers",["exports","msg-shared/utils/constants"],function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0})
e.normalizeUsecase=function(e,t){return`${i[e]}_${t?"FULL":"SHORT"}`}
e.USECASE_PARTIAL_LOOKUP=void 0
const{CONTEXT_TYPES:{FEED_CONTEXT:n,JOB_CONTEXT:s,COMPANY_CONTEXT:a,PROFILE_CONTEXT:o}}=t.OVERLAY,i={[n]:"ARTICLE_SHARE_OVERLAY",[s]:"OVERLAY_JOB",[a]:"OVERLAY_COMPANY",[o]:"OVERLAY_PROFILE"}
e.USECASE_PARTIAL_LOOKUP=i})
define.alias("client-sensor-web/utils/run-loop-helpers","msg-overlay/utils/run-loop-helpers")
define.alias("@linkedin/ember-restli-api-metadata/utils/schema-helpers","msg-overlay/utils/schema-helpers")
define.alias("@linkedin/artdeco-datepicker/utils/should-use-timezone","msg-overlay/utils/should-use-timezone")
define.alias("ember-vector-images/utils/vector-url","msg-overlay/utils/vector-url")

//# sourceMappingURL=engine.map